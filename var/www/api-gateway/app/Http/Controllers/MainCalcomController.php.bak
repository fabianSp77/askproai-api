<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Http;

class MainCalcomController extends Controller
{
    protected $baseUrl = 'https://api.cal.com/v1';

    private function apiKey() {
        return 'cal_live_e9aa2c4d18e0fd79cf4f8dddb90903da';
    }

    protected $username = 'askproai';
    protected $timeZone = 'Europe/Berlin';
    protected $language = 'de';

    public function checkAvailability(Request $request)
    {
        try {
            $response = Http::acceptJson()
                ->get("{$this->baseUrl}/availability", [
                    'apiKey' => $this->apiKey(),
                    'eventTypeId' => $request->eventTypeId,
                    'dateFrom' => $request->dateFrom,
                    'dateTo' => $request->dateTo,
                    'username' => $this->username,
                    'timeZone' => $this->timeZone
                ])
                ->throw();

            return response()->json(['status' => 'success', 'data' => $response->json()], 200);

        } catch (\Illuminate\Http\Client\RequestException $e) {
            return response()->json([
                'status' => 'error',
                'message' => 'VerfÃ¼gbarkeitsprÃ¼fung fehlgeschlagen',
                'error_details' => $e->response->json(),
                'status_code' => $e->response->status()
            ], 400);
        } catch (\Exception $e) {
            return response()->json([
                'status' => 'error',
                'message' => 'Allgemeiner Fehler',
                'error_details' => $e->getMessage()
            ], 500);
        }
    }

    public function createBooking(Request $request)
    {
        try {
            $response = Http::acceptJson()
                ->post("{$this->baseUrl}/bookings?apiKey={$this->apiKey()}", [
                    'eventTypeId' => $request->eventTypeId,
                    'start' => $request->start,
                    'end' => $request->end,
                    'timeZone' => $this->timeZone,
                    'language' => $this->language,
                    'attendee' => [
                        'name' => $request->name,
                        'email' => $request->email,
                    ],
                    'metadata' => new \stdClass()
                ])
                ->throw();

            return response()->json(['status' => 'success', 'data' => $response->json()], 200);

        } catch (\Illuminate\Http\Client\RequestException $e) {
            return response()->json([
                'status' => 'error',
                'message' => 'Terminbuchung fehlgeschlagen',
                'error_details' => $e->response->json(),
                'status_code' => $e->response->status()
            ], 400);
        } catch (\Exception $e) {
            return response()->json([
                'status' => 'error',
                'message' => 'Allgemeiner Fehler',
                'error_details' => $e->getMessage()
            ], 500);
        }
    }
}
