# =============================================================================
# NGINX Security Configuration for AskProAI
# =============================================================================
# CRITICAL: Place this in /etc/nginx/conf.d/ or include in main config
# Test with: nginx -t
# Apply with: systemctl reload nginx

# -----------------------------------------------------------------------------
# Rate Limiting Configuration (Server-Level)
# -----------------------------------------------------------------------------

# Define rate limiting zones
limit_req_zone $binary_remote_addr zone=api_general:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=api_auth:10m rate=20r/m;
limit_req_zone $binary_remote_addr zone=api_webhook:10m rate=200r/m;
limit_req_zone $binary_remote_addr zone=admin_panel:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=brute_force:10m rate=5r/m;

# Define connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn_zone $server_name zone=conn_limit_per_server:10m;

# -----------------------------------------------------------------------------
# Security Headers (Global)
# -----------------------------------------------------------------------------
map $sent_http_content_type $csp_policy {
    ~text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdnjs.cloudflare.com unpkg.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: blob: *; connect-src 'self' ws: wss:; frame-ancestors 'self'";
    default "";
}

# Security headers to add to all responses
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Content-Security-Policy $csp_policy always;
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

# Hide nginx version
server_tokens off;

# -----------------------------------------------------------------------------
# Request Size and Timeout Limits
# -----------------------------------------------------------------------------
client_max_body_size 10M;
client_body_timeout 30s;
client_header_timeout 30s;
keepalive_timeout 30s;
send_timeout 30s;

# Large client header buffers (for JWT tokens)
large_client_header_buffers 4 32k;

# -----------------------------------------------------------------------------
# Connection Limits
# -----------------------------------------------------------------------------
limit_conn conn_limit_per_ip 20;
limit_conn conn_limit_per_server 1000;

# -----------------------------------------------------------------------------
# Security Location Blocks (to be included in server blocks)
# -----------------------------------------------------------------------------

# Webhook endpoints (higher rate limit for legitimate services)
location ~* ^/api/(retell|calcom|stripe)/webhook {
    limit_req zone=api_webhook burst=50 nodelay;
    
    # Only allow POST requests
    limit_except POST {
        deny all;
    }
    
    # Webhook IP whitelisting (add known webhook IPs here)
    # Retell.ai webhook IPs (update as needed)
    allow 54.156.46.171;
    allow 3.226.44.241;
    allow 18.215.226.36;
    allow 100.25.154.111;
    
    # Cal.com webhook IPs (update as needed)
    allow 3.128.0.0/9;
    allow 18.216.0.0/12;
    
    # Stripe webhook IPs
    allow 54.187.174.169;
    allow 54.187.205.235;
    allow 54.187.216.72;
    
    # Deny all other IPs for webhooks
    deny all;
    
    try_files $uri /index.php?$query_string;
}

# Authentication endpoints
location ~* ^/api/(login|register|reset-password|verify-email) {
    limit_req zone=api_auth burst=10 nodelay;
    limit_req zone=brute_force burst=2 nodelay;
    
    try_files $uri /index.php?$query_string;
}

# Admin panel protection
location /admin {
    limit_req zone=admin_panel burst=5 nodelay;
    
    # Admin IP whitelisting (uncomment and add your IPs)
    # allow 192.168.1.0/24;    # Local network
    # allow 10.0.0.0/8;        # VPN range
    # deny all;
    
    try_files $uri /index.php?$query_string;
}

# General API endpoints
location /api {
    limit_req zone=api_general burst=20 nodelay;
    
    # Block common attack patterns
    if ($request_uri ~* "(union|select|insert|delete|update|drop|create|alter|exec|script|javascript|vbscript|onload|onerror)" ) {
        return 403;
    }
    
    try_files $uri /index.php?$query_string;
}

# Block access to sensitive files
location ~* \.(env|git|svn|htaccess|htpasswd|log|sql|bak|backup|dump)$ {
    deny all;
    return 404;
}

# Block access to sensitive directories
location ~* /(\.git|\.svn|storage|vendor|node_modules|\.env) {
    deny all;
    return 404;
}

# Prevent execution of PHP in uploads
location ~* ^/storage/.*\.php$ {
    deny all;
    return 404;
}

# -----------------------------------------------------------------------------
# DDoS Protection
# -----------------------------------------------------------------------------

# Block requests with empty user agent (common in bots)
if ($http_user_agent = "") {
    return 444;
}

# Block common bad bots
if ($http_user_agent ~* (bot|crawler|spider|scraper|python|curl|wget|scanner)) {
    return 444;
}

# Block requests with suspicious headers
if ($http_referer ~* (poker|casino|viagra|pharmacy|cialis|levitra)) {
    return 444;
}

# -----------------------------------------------------------------------------
# Logging Configuration for Security Events
# -----------------------------------------------------------------------------

# Custom log format for security analysis
log_format security_log '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       'rate_limited:$limit_req_status';

# Log rate limited requests
error_log /var/log/nginx/security_error.log warn;

# Enable logging for rate limited requests
access_log /var/log/nginx/security_access.log security_log;

# -----------------------------------------------------------------------------
# SSL/TLS Security Configuration
# -----------------------------------------------------------------------------

# Modern SSL configuration
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;

# SSL session configuration
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 1d;
ssl_session_tickets off;

# OCSP stapling
ssl_stapling on;
ssl_stapling_verify on;

# DNS resolver for OCSP
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;