/**
 * Menu Cleanup Script
 * Entfernt alle duplizierten Menu Buttons
 */

(function() {
    'use strict';
    
    console.log('[Menu Cleanup] Starting cleanup...');
    
    function cleanupDuplicateButtons() {
        // Remove all fallback buttons
        const fallbackButtons = document.querySelectorAll('.mobile-menu-fallback');
        fallbackButtons.forEach(btn => {
            console.log('[Menu Cleanup] Removing fallback button');
            btn.remove();
        });
        
        // Find all potential menu buttons
        const menuButtons = document.querySelectorAll(`
            .fi-topbar button,
            button[onclick*="sidebar"],
            button[x-on\\:click*="sidebar"]
        `);
        
        console.log(`[Menu Cleanup] Found ${menuButtons.length} potential menu buttons`);
        
        // Keep only the first legitimate menu button
        let legitButton = null;
        const toRemove = [];
        
        menuButtons.forEach((btn, index) => {
            // Skip user menu and other non-menu buttons
            if (btn.closest('.fi-user-menu') || 
                btn.querySelector('img') || // Avatar
                btn.textContent.includes('@') || // Email
                btn.closest('[x-data*="dropdown"]')) { // Dropdown buttons
                return;
            }
            
            // Check if this looks like a menu button (has hamburger icon)
            const hasHamburgerIcon = btn.innerHTML.includes('M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5') ||
                                     btn.innerHTML.includes('M4 6h16M4 12h16M4 18h16');
            
            if (hasHamburgerIcon) {
                if (!legitButton && btn.classList.contains('fi-topbar-open-sidebar-btn')) {
                    // This is the legitimate button
                    legitButton = btn;
                    console.log('[Menu Cleanup] Found legitimate menu button');
                } else {
                    // This is a duplicate
                    toRemove.push(btn);
                    console.log(`[Menu Cleanup] Marked button ${index} for removal`);
                }
            }
        });
        
        // Remove duplicates
        toRemove.forEach(btn => {
            console.log('[Menu Cleanup] Removing duplicate button');
            btn.remove();
        });
        
        // Make sure the legitimate button is visible
        if (legitButton) {
            legitButton.style.display = '';
            legitButton.style.opacity = '1';
            legitButton.style.visibility = 'visible';
        }
        
        console.log('[Menu Cleanup] Cleanup complete');
    }
    
    // Run cleanup immediately
    cleanupDuplicateButtons();
    
    // Run again after DOM ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', cleanupDuplicateButtons);
    }
    
    // Run after a delay to catch late additions
    setTimeout(cleanupDuplicateButtons, 1000);
    
    // Expose for debugging
    window.menuCleanup = {
        run: cleanupDuplicateButtons,
        
        debug: function() {
            const buttons = document.querySelectorAll('button');
            console.log('Total buttons:', buttons.length);
            
            buttons.forEach((btn, i) => {
                const hasHamburger = btn.innerHTML.includes('M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5') ||
                                   btn.innerHTML.includes('M4 6h16M4 12h16M4 18h16');
                
                if (hasHamburger) {
                    console.log(`Button ${i} (MENU):`, {
                        classes: btn.className,
                        parent: btn.parentElement?.className,
                        visible: getComputedStyle(btn).display !== 'none'
                    });
                }
            });
        }
    };
    
    console.log('[Menu Cleanup] Ready! Use menuCleanup.debug() to inspect');
})();