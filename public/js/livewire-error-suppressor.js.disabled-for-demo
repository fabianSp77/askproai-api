/**
 * Livewire Error Suppressor
 * Unterdrückt bekannte, nicht-kritische Livewire-Fehler in der Konsole
 */

(function() {
    'use strict';
    
    //console.log('[Livewire Error Suppressor] Initializing...');
    
    // Original console.error speichern
    const originalError = console.error;
    
    // Patterns für Fehler, die unterdrückt werden sollen
    const suppressPatterns = [
        /Cannot read properties of undefined \(reading 'shift'\)/,
        /\$wire\.__lazyLoad/,
        /livewire.*404/i,
        /Alpine has already been initialized/
    ];
    
    // Console.error überschreiben
    console.error = function(...args) {
        // Prüfen ob es ein zu unterdrückender Fehler ist
        const errorString = args.join(' ');
        
        for (const pattern of suppressPatterns) {
            if (pattern.test(errorString)) {
                // Fehler unterdrücken, aber im Debug-Modus anzeigen
                if (window.portalDebugMode) {
                    //console.log('[Suppressed Error]:', ...args);
                }
                return;
            }
        }
        
        // Alle anderen Fehler normal ausgeben
        originalError.apply(console, args);
    };
    
    // Promise rejection handler für Livewire-spezifische Fehler
    window.addEventListener('unhandledrejection', function(event) {
        if (event.reason && event.reason.message) {
            const message = event.reason.message;
            
            // Livewire lazy load Fehler unterdrücken
            if (message.includes("Cannot read properties of undefined (reading 'shift')") ||
                message.includes('$wire.__lazyLoad')) {
                event.preventDefault();
                
                if (window.portalDebugMode) {
                    //console.log('[Suppressed Promise Rejection]:', event.reason);
                }
            }
        }
    });
    
    // Alpine Warnings unterdrücken
    if (window.Alpine && window.Alpine.warn) {
        const originalWarn = window.Alpine.warn;
        window.Alpine.warn = function(...args) {
            const warning = args.join(' ');
            if (warning.includes('already been initialized')) {
                if (window.portalDebugMode) {
                    //console.log('[Suppressed Alpine Warning]:', ...args);
                }
                return;
            }
            originalWarn.apply(window.Alpine, args);
        };
    }
    
    //console.log('[Livewire Error Suppressor] Ready - Known non-critical errors will be suppressed');
    //console.log('[Livewire Error Suppressor] To see suppressed errors, set window.portalDebugMode = true');
    
})();