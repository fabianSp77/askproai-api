{
    "global_prompt": "# AskPro AI Voice Agent 2025\n\n## Deine Rolle\nDu bist der intelligente Terminassistent von Ask Pro AI.\nSprich nat√ºrlich, freundlich und effizient auf Deutsch.\n\n## WICHTIG: Anrufer-Telefonnummer\nDie Telefonnummer des Anrufers ist AUTOMATISCH verf√ºgbar.\nNutze sie f√ºr check_customer() um den Kunden zu erkennen.\nWenn der Kunde bereits bekannt ist, begr√º√üe ihn mit Namen!\n\n## KRITISCHE Regel: Intent Recognition\nErkenne SOFORT aus dem ersten Satz was der Kunde will:\n1. NEUEN Termin buchen\n2. Bestehenden Termin VERSCHIEBEN\n3. Bestehenden Termin STORNIEREN\n4. Termine ANZEIGEN/ABFRAGEN\n\nBei Unklarheit frage: \"M√∂chten Sie einen neuen Termin buchen oder einen bestehenden Termin √§ndern?\"\n\n## Ben√∂tigte Informationen\n\nF√ºr NEUEN Termin:\n- Name (nur wenn nicht bereits bekannt)\n- Service (z.B. Beratung)\n- Datum (Wochentag oder konkretes Datum)\n- Uhrzeit\n\nF√ºr VERSCHIEBEN/STORNIEREN:\n- Welcher Termin (Datum, Uhrzeit)\n- Neues Datum/Zeit (nur bei Verschieben)\n\n## Datensammlung Strategie\n- Sammle Informationen in nat√ºrlichem Gespr√§ch\n- Fasse Fragen zusammen wenn m√∂glich\n- Frage nur nach fehlenden Informationen\n- KEINE unn√∂tigen Wiederholungen!\n\n## Effizienter Workflow (WICHTIG!)\n1. ZUERST: Alle Daten sammeln\n2. DANN: Verf√ºgbarkeit pr√ºfen (bestaetigung=false)\n3. DANN: User informieren (\"Morgen 13 Uhr ist verf√ºgbar\")\n4. DANN: EINE kurze Best√§tigung (\"Soll ich das so buchen?\")\n5. ZULETZT: Bei \"Ja\" buchen (bestaetigung=true)\n\nFasse NICHT mehrfach zusammen! Der User will Effizienz!\n\n## 2-Stufen Booking (Race Condition Schutz)\n1. collect_appointment_data mit bestaetigung=false (nur pr√ºfen)\n2. Nach User-Best√§tigung: bestaetigung=true (buchen)\n\nNIEMALS direkt mit bestaetigung=true buchen!\n\n## Ehrlichkeit & API-First\n- NIEMALS Verf√ºgbarkeit erfinden\n- IMMER auf echte API-Results warten\n- Bei technischem Problem: \"Es gab ein technisches Problem\"\n- Bei Unverf√ºgbarkeit: \"Leider nicht verf√ºgbar. Ich habe aber folgende Alternativen...\"\n\n## Empathische Fehlerbehandlung\nBei Verst√§ndnisproblemen:\n1. Versuch 1: Nachfragen mit Beispiel (\"Meinen Sie [Datum]?\")\n2. Versuch 2: Vereinfachen (\"Welcher Wochentag passt Ihnen?\")\n3. Versuch 3: \"Lassen Sie mich einen Kollegen holen...\"\n\nNIEMALS User die Schuld geben!\n\n## Policy Violations\nBei Frist-√úberschreitung empathisch:\n\"Ich verstehe Ihre Situation. Leider k√∂nnen wir kurzfristige √Ñnderungen nur bis [Frist] vornehmen.\nM√∂chten Sie [Alternative] oder einen neuen Termin buchen?\"\n\n## Datumsverarbeitung\n- Nutze current_time_berlin() f√ºr aktuelles Datum\n- \"morgen\" = n√§chster Tag\n- \"15.1\" = 15. des AKTUELLEN Monats (nicht Januar!)\n- Bei Unsicherheit: Datum wiederholen zur Best√§tigung\n\n## Kurze Antworten\n- 1-2 S√§tze pro Antwort (au√üer bei Erkl√§rungen)\n- Keine langen Monologe\n- Schnell zum Punkt kommen\n- KEINE unn√∂tigen Zusammenfassungen!\n\n## Turn-Taking\n- Nach User Input sofort antworten (0.5-1s)\n- W√§hrend API-Calls: \"Einen Moment bitte...\"\n- Keine Stille √ºber 3 Sekunden\n\n\n## ‚ö° V17: EXPLICIT FUNCTION NODES (WICHTIG!)\n\nDiese Flow-Version nutzt EXPLIZITE Function Nodes f√ºr 100% reliable Tool-Aufrufe:\n\n1. **func_check_availability**: Pr√ºft Verf√ºgbarkeit AUTOMATISCH nach Datensammlung\n   - Wird IMMER aufgerufen (kein \"vielleicht\")\n   - bestaetigung=false (nur pr√ºfen, nicht buchen)\n   - Agent spricht W√ÑHREND Tool l√§uft\n\n2. **func_book_appointment**: Bucht Termin AUTOMATISCH nach User-Best√§tigung\n   - Wird IMMER aufgerufen (kein \"vielleicht\")\n   - bestaetigung=true (wirklich buchen)\n   - Agent spricht W√ÑHREND Tool l√§uft\n\nDU musst diese Tools NICHT selbst aufrufen! Die Function Nodes machen das automatisch!\n\nDeine Aufgabe:\n- Sammle alle ben√∂tigten Daten (name, datum, uhrzeit, dienstleistung)\n- Sobald komplett ‚Üí Flow ruft func_check_availability AUTOMATISCH auf\n- Nach User-Best√§tigung ‚Üí Flow ruft func_book_appointment AUTOMATISCH auf\n\n## Composite Services (WICHTIG!)\nManche Services haben Wartezeiten (z.B. Ansatzf√§rbung, Farbe muss einwirken).\n\n### Ansatzf√§rbung Services:\n- \"Ansatzf√§rbung, waschen, schneiden, f√∂hnen\" (~2.5h brutto)\n  - Ablauf: Farbe auftragen (30min) ‚Üí Pause 30min ‚Üí Waschen (15min) ‚Üí Schneiden (30min) ‚Üí Pause 15min ‚Üí F√∂hnen (30min)\n  - Kunde wartet im Salon w√§hrend Farbe einwirkt\n\n- \"Ansatz, L√§ngenausgleich, waschen, schneiden, f√∂hnen\" (~2.8h brutto)\n  - √Ñhnlich wie Ansatzf√§rbung mit l√§ngerer Einwirkzeit\n\nBei diesen Services:\n1. ERKL√ÑRE kurz die Gesamtdauer (~2-3 Stunden)\n2. ERW√ÑHNE beil√§ufig: \"Dabei gibt es Wartezeiten w√§hrend die Farbe einwirkt\"\n3. Buche NORMAL - Backend handled die Segmente automatisch\n4. KEINE extra Fragen - halte es nat√ºrlich!\n\nBeispiel: \"Ansatzf√§rbung dauert etwa 2,5 Stunden. Dabei gibt es Wartezeiten w√§hrend die Farbe einwirkt. Passt Ihnen [Datum] um [Zeit]?\"\n\n## Team Mitglieder (Friseur 1)\nVerf√ºgbare Mitarbeiter:\n- Emma Williams\n- Fabian Spitzer\n- David Martinez\n- Michael Chen\n- Dr. Sarah Johnson\n\nWenn Kunde speziellen Mitarbeiter w√ºnscht (z.B. \"bei Fabian\"), nutze 'mitarbeiter' Parameter.\nBeispiel: \"Ich m√∂chte einen Termin bei Fabian\" ‚Üí mitarbeiter=\"Fabian\"\n\nWenn KEIN Mitarbeiter genannt: mitarbeiter Parameter weglassen (Backend w√§hlt automatisch).\n",
    "start_node_id": "func_00_initialize",
    "start_speaker": "agent",
    "model_choice": {
        "type": "cascading",
        "model": "gpt-4o-mini"
    },
    "model_temperature": 0.3,
    "tools": [
        {
            "tool_id": "tool-initialize-call",
            "name": "initialize_call",
            "type": "custom",
            "description": "üöÄ V16: Initialize call - Get customer info + current time + policies in ONE fast call",
            "url": "https://api.askproai.de/api/retell/initialize-call",
            "timeout_ms": 2000,
            "parameters": {
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "description": "Current call ID (automatically provided)"
                    }
                },
                "required": []
            }
        },
        {
            "tool_id": "tool-collect-appointment",
            "name": "collect_appointment_data",
            "type": "custom",
            "description": "Check availability or book appointment",
            "url": "https://api.askproai.de/api/retell/collect-appointment",
            "timeout_ms": 10000,
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Customer name (Kundenname)"
                    },
                    "dienstleistung": {
                        "type": "string",
                        "description": "Service type (z.B. Beratung)"
                    },
                    "datum": {
                        "type": "string",
                        "description": "Date in format DD.MM.YYYY (e.g. 24.10.2025)"
                    },
                    "uhrzeit": {
                        "type": "string",
                        "description": "Time in format HH:MM (e.g. 13:00)"
                    },
                    "bestaetigung": {
                        "type": "boolean",
                        "description": "false=check availability only, true=confirm booking"
                    }
                },
                "required": [
                    "bestaetigung"
                ]
            }
        },
        {
            "tool_id": "tool-get-appointments",
            "name": "get_customer_appointments",
            "type": "custom",
            "description": "Get all upcoming appointments for customer",
            "url": "https://api.askproai.de/api/retell/get-customer-appointments",
            "timeout_ms": 6000,
            "parameters": {
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "description": "Retell Call ID"
                    },
                    "customer_name": {
                        "type": "string",
                        "description": "Customer name (optional)"
                    }
                },
                "required": [
                    "call_id"
                ]
            }
        },
        {
            "tool_id": "tool-cancel-appointment",
            "name": "cancel_appointment",
            "type": "custom",
            "description": "Cancel an appointment",
            "url": "https://api.askproai.de/api/retell/cancel-appointment",
            "timeout_ms": 8000,
            "parameters": {
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "description": "Retell Call ID"
                    },
                    "appointment_date": {
                        "type": "string",
                        "description": "Appointment date YYYY-MM-DD"
                    },
                    "customer_name": {
                        "type": "string",
                        "description": "Customer name"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Cancellation reason"
                    }
                },
                "required": [
                    "call_id",
                    "appointment_date"
                ]
            }
        },
        {
            "tool_id": "tool-reschedule-appointment",
            "name": "reschedule_appointment",
            "type": "custom",
            "description": "Reschedule an appointment to new date/time",
            "url": "https://api.askproai.de/api/retell/reschedule-appointment",
            "timeout_ms": 10000,
            "parameters": {
                "type": "object",
                "properties": {
                    "call_id": {
                        "type": "string",
                        "description": "Retell Call ID"
                    },
                    "old_date": {
                        "type": "string",
                        "description": "Current appointment date YYYY-MM-DD"
                    },
                    "new_date": {
                        "type": "string",
                        "description": "New appointment date YYYY-MM-DD"
                    },
                    "new_time": {
                        "type": "string",
                        "description": "New time HH:MM"
                    },
                    "customer_name": {
                        "type": "string",
                        "description": "Customer name"
                    }
                },
                "required": [
                    "call_id",
                    "old_date",
                    "new_date",
                    "new_time"
                ]
            }
        },
        {
            "tool_id": "tool-v17-check-availability",
            "name": "check_availability_v17",
            "type": "custom",
            "description": "üîç V17: Check availability ONLY (bestaetigung=false hardcoded in backend)",
            "url": "https://api.askproai.de/api/retell/v17/check-availability",
            "timeout_ms": 10000,
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Customer name"
                    },
                    "dienstleistung": {
                        "type": "string",
                        "description": "Service type (z.B. Beratung)"
                    },
                    "datum": {
                        "type": "string",
                        "description": "Date in format DD.MM.YYYY"
                    },
                    "uhrzeit": {
                        "type": "string",
                        "description": "Time in format HH:MM"
                    }
                },
                "required": [
                    "name",
                    "datum",
                    "uhrzeit",
                    "dienstleistung"
                ]
            }
        },
        {
            "tool_id": "tool-v17-book-appointment",
            "name": "book_appointment_v17",
            "type": "custom",
            "description": "Book appointment with optional staff preference. Customers can request specific staff member (e.g., \"bei Fabian\").",
            "url": "https://api.askproai.de/api/retell/v17/book-appointment",
            "timeout_ms": 10000,
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Customer name"
                    },
                    "dienstleistung": {
                        "type": "string",
                        "description": "Service type (z.B. Beratung)"
                    },
                    "datum": {
                        "type": "string",
                        "description": "Date in format DD.MM.YYYY"
                    },
                    "uhrzeit": {
                        "type": "string",
                        "description": "Time in format HH:MM"
                    },
                    "mitarbeiter": {
                        "type": "string",
                        "description": "Optional: Staff member name if customer requests specific person (z.B. \"Fabian\", \"Emma\"). Leave empty if not specified."
                    }
                },
                "required": [
                    "name",
                    "datum",
                    "uhrzeit",
                    "dienstleistung"
                ]
            }
        }
    ],
    "nodes": [
        {
            "id": "func_00_initialize",
            "name": "üöÄ V16: Initialize Call (Parallel)",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Guten Tag bei Ask Pro AI."
            },
            "edges": [
                {
                    "id": "edge_00",
                    "destination_node_id": "node_02_customer_routing",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Initialization complete"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-initialize-call",
            "wait_for_result": true,
            "speak_during_execution": true
        },
        {
            "id": "node_02_customer_routing",
            "name": "Kundenrouting",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Route to appropriate greeting based on customer status from check_customer result."
            },
            "edges": [
                {
                    "id": "edge_04a",
                    "destination_node_id": "node_03a_known_customer",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Known customer"
                    }
                },
                {
                    "id": "edge_04b",
                    "destination_node_id": "node_03b_new_customer",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "New customer"
                    }
                },
                {
                    "id": "edge_04c",
                    "destination_node_id": "node_03c_anonymous_customer",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Anonymous customer"
                    }
                }
            ]
        },
        {
            "id": "node_03a_known_customer",
            "name": "Bekannter Kunde",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Greet known customer by name warmly. Ask how you can help."
            },
            "edges": [
                {
                    "id": "edge_05a",
                    "destination_node_id": "node_04_intent_enhanced",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer responded"
                    }
                }
            ]
        },
        {
            "id": "node_03b_new_customer",
            "name": "Neuer Kunde",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Welcome new customer. Mention you see they have called before. Ask how you can help."
            },
            "edges": [
                {
                    "id": "edge_05b",
                    "destination_node_id": "node_04_intent_enhanced",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer responded"
                    }
                }
            ]
        },
        {
            "id": "node_03c_anonymous_customer",
            "name": "Anonymer Kunde",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Greet customer friendly. Ask for name to better assist them."
            },
            "edges": [
                {
                    "id": "edge_05c",
                    "destination_node_id": "node_05_name_collection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Need to collect name"
                    }
                }
            ]
        },
        {
            "id": "node_05_name_collection",
            "name": "Name sammeln",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Collect customer name if not yet known. Thank them and proceed to understand their request."
            },
            "edges": [
                {
                    "id": "edge_06",
                    "destination_node_id": "node_04_intent_enhanced",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Name collected"
                    }
                }
            ]
        },
        {
            "id": "node_04_intent_enhanced",
            "name": "Intent erkennen",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Understand what customer wants: book new appointment, reschedule existing, cancel existing, or view appointments. If unclear, ask."
            },
            "edges": [
                {
                    "id": "edge_07a",
                    "destination_node_id": "node_06_service_selection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to book NEW appointment"
                    }
                },
                {
                    "id": "edge_07b",
                    "destination_node_id": "func_get_appointments",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to view appointments"
                    }
                },
                {
                    "id": "edge_07c",
                    "destination_node_id": "node_reschedule_identify",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to RESCHEDULE"
                    }
                },
                {
                    "id": "edge_07d",
                    "destination_node_id": "node_cancel_identify",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to CANCEL"
                    }
                },
                {
                    "id": "edge_07e",
                    "destination_node_id": "node_98_polite_goodbye",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to end call"
                    }
                }
            ]
        },
        {
            "id": "func_get_appointments",
            "name": "Termine abrufen",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Einen Moment bitte, ich schaue nach Ihren Terminen."
            },
            "edges": [
                {
                    "id": "edge_08",
                    "destination_node_id": "node_appointments_display",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Appointments retrieved"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-get-appointments",
            "wait_for_result": true,
            "speak_during_execution": true
        },
        {
            "id": "node_appointments_display",
            "name": "Termine anzeigen",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "List the appointments clearly with date, time, and service. Ask if customer wants to change any or book a new one."
            },
            "edges": [
                {
                    "id": "edge_09a",
                    "destination_node_id": "node_06_service_selection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants new appointment"
                    }
                },
                {
                    "id": "edge_09b",
                    "destination_node_id": "node_reschedule_identify",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to reschedule"
                    }
                },
                {
                    "id": "edge_09c",
                    "destination_node_id": "node_cancel_identify",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to cancel"
                    }
                },
                {
                    "id": "edge_09d",
                    "destination_node_id": "end_node_polite",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer satisfied, no changes"
                    }
                }
            ]
        },
        {
            "id": "node_06_service_selection",
            "name": "Service w√§hlen",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Ask which service customer needs. If they already mentioned it, confirm and proceed."
            },
            "edges": [
                {
                    "id": "edge_10",
                    "destination_node_id": "node_07_datetime_collection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Service selected"
                    }
                }
            ]
        },
        {
            "id": "node_07_datetime_collection",
            "name": "Datum & Zeit sammeln",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Collect preferred date and time. If customer already mentioned it, confirm. Ask for any missing information."
            },
            "edges": [
                {
                    "id": "edge_11",
                    "destination_node_id": "func_check_availability",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "All booking info collected"
                    }
                }
            ]
        },
        {
            "id": "func_08_availability_check",
            "name": "Verf√ºgbarkeit pr√ºfen",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Einen Moment bitte, ich pr√ºfe die Verf√ºgbarkeit."
            },
            "edges": [
                {
                    "id": "edge_12a",
                    "destination_node_id": "node_09a_booking_confirmation",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Slot available"
                    }
                },
                {
                    "id": "edge_12b",
                    "destination_node_id": "node_09b_alternative_offering",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Slot not available"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-collect-appointment",
            "wait_for_result": true,
            "speak_during_execution": true
        },
        {
            "id": "node_09a_booking_confirmation",
            "name": "Buchung best√§tigen",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Confirm the slot is available. Repeat date, time, and service. Ask customer to confirm before booking."
            },
            "edges": [
                {
                    "id": "edge_13a",
                    "destination_node_id": "func_09c_final_booking",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer confirms booking"
                    }
                },
                {
                    "id": "edge_13b",
                    "destination_node_id": "node_07_datetime_collection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants different time"
                    }
                }
            ]
        },
        {
            "id": "node_09b_alternative_offering",
            "name": "Alternativen anbieten",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Inform slot not available. Offer alternative times from result. Be proactive and helpful."
            },
            "edges": [
                {
                    "id": "edge_14a",
                    "destination_node_id": "node_07_datetime_collection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer chooses alternative"
                    }
                },
                {
                    "id": "edge_14b",
                    "destination_node_id": "node_98_polite_goodbye",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer declines"
                    }
                }
            ]
        },
        {
            "id": "func_09c_final_booking",
            "name": "Termin buchen",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Einen Moment bitte, ich buche den Termin f√ºr Sie."
            },
            "edges": [
                {
                    "id": "edge_15a",
                    "destination_node_id": "node_14_success_goodbye",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Booking successful"
                    }
                },
                {
                    "id": "edge_15b",
                    "destination_node_id": "node_15_race_condition_handler",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Race condition or booking failed"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-collect-appointment",
            "wait_for_result": true,
            "speak_during_execution": true
        },
        {
            "id": "node_15_race_condition_handler",
            "name": "Race Condition Handler",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Apologize that slot was just taken. Offer alternatives from result empathetically."
            },
            "edges": [
                {
                    "id": "edge_16a",
                    "destination_node_id": "node_07_datetime_collection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer chooses alternative"
                    }
                },
                {
                    "id": "edge_16b",
                    "destination_node_id": "node_98_polite_goodbye",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to think about it"
                    }
                }
            ]
        },
        {
            "id": "node_reschedule_identify",
            "name": "Termin identifizieren",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Ask which appointment to reschedule. If customer mentioned date/time, confirm. Otherwise ask for it."
            },
            "edges": [
                {
                    "id": "edge_17",
                    "destination_node_id": "node_reschedule_datetime",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Old appointment identified"
                    }
                }
            ]
        },
        {
            "id": "node_reschedule_datetime",
            "name": "Neues Datum sammeln",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Ask for new preferred date and time. Confirm understanding before proceeding."
            },
            "edges": [
                {
                    "id": "edge_18",
                    "destination_node_id": "func_reschedule_execute",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "New date and time collected"
                    }
                }
            ]
        },
        {
            "id": "func_reschedule_execute",
            "name": "Verschieben ausf√ºhren",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Einen Moment bitte, ich verschiebe Ihren Termin."
            },
            "edges": [
                {
                    "id": "edge_19a",
                    "destination_node_id": "node_reschedule_success",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Reschedule successful"
                    }
                },
                {
                    "id": "edge_19b",
                    "destination_node_id": "node_policy_violation_handler",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Policy violation"
                    }
                },
                {
                    "id": "edge_19c",
                    "destination_node_id": "node_99_error_goodbye",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Technical error"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-reschedule-appointment",
            "wait_for_result": true,
            "speak_during_execution": true
        },
        {
            "id": "node_reschedule_success",
            "name": "Verschiebung erfolgreich",
            "type": "conversation",
            "instruction": {
                "type": "static_text",
                "text": "Perfekt! Ihr Termin wurde verschoben. Sie erhalten eine Best√§tigung per E-Mail. Kann ich noch etwas f√ºr Sie tun?"
            },
            "edges": [
                {
                    "id": "edge_20a",
                    "destination_node_id": "node_04_intent_enhanced",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants something else"
                    }
                },
                {
                    "id": "edge_20b",
                    "destination_node_id": "end_node_success",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer satisfied"
                    }
                }
            ]
        },
        {
            "id": "node_cancel_identify",
            "name": "Termin f√ºr Stornierung identifizieren",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Ask which appointment to cancel. Confirm date and time with customer."
            },
            "edges": [
                {
                    "id": "edge_21",
                    "destination_node_id": "node_cancel_confirmation",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Appointment identified"
                    }
                }
            ]
        },
        {
            "id": "node_cancel_confirmation",
            "name": "Stornierung best√§tigen",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Confirm customer wants to cancel this appointment. Ask if they are sure."
            },
            "edges": [
                {
                    "id": "edge_22a",
                    "destination_node_id": "func_cancel_execute",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer confirms cancellation"
                    }
                },
                {
                    "id": "edge_22b",
                    "destination_node_id": "end_node_polite",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer changed mind"
                    }
                }
            ]
        },
        {
            "id": "func_cancel_execute",
            "name": "Stornierung ausf√ºhren",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Einen Moment bitte, ich storniere den Termin."
            },
            "edges": [
                {
                    "id": "edge_23a",
                    "destination_node_id": "node_cancel_success",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Cancellation successful"
                    }
                },
                {
                    "id": "edge_23b",
                    "destination_node_id": "node_policy_violation_handler",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Policy violation"
                    }
                },
                {
                    "id": "edge_23c",
                    "destination_node_id": "node_99_error_goodbye",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Technical error"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-cancel-appointment",
            "wait_for_result": true,
            "speak_during_execution": true
        },
        {
            "id": "node_cancel_success",
            "name": "Stornierung erfolgreich",
            "type": "conversation",
            "instruction": {
                "type": "static_text",
                "text": "Ihr Termin wurde storniert. Sie erhalten eine Best√§tigung per E-Mail. Kann ich noch etwas f√ºr Sie tun?"
            },
            "edges": [
                {
                    "id": "edge_24a",
                    "destination_node_id": "node_04_intent_enhanced",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants something else"
                    }
                },
                {
                    "id": "edge_24b",
                    "destination_node_id": "end_node_success",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer satisfied"
                    }
                }
            ]
        },
        {
            "id": "node_policy_violation_handler",
            "name": "Policy Violation Handler",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Explain policy issue empathetically based on result. Offer alternatives or options available to customer."
            },
            "edges": [
                {
                    "id": "edge_25a",
                    "destination_node_id": "node_04_intent_enhanced",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer wants to try alternative"
                    }
                },
                {
                    "id": "edge_25b",
                    "destination_node_id": "node_98_polite_goodbye",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Customer accepts limitation"
                    }
                }
            ]
        },
        {
            "id": "node_14_success_goodbye",
            "name": "Erfolgreiche Buchung",
            "type": "conversation",
            "instruction": {
                "type": "static_text",
                "text": "Wunderbar! Ihr Termin ist gebucht. Sie erhalten eine Best√§tigung per E-Mail. Vielen Dank und auf Wiederh√∂ren!"
            },
            "edges": [
                {
                    "id": "edge_26",
                    "destination_node_id": "end_node_success",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Always end"
                    }
                }
            ]
        },
        {
            "id": "node_98_polite_goodbye",
            "name": "H√∂fliche Verabschiedung",
            "type": "conversation",
            "instruction": {
                "type": "static_text",
                "text": "Kein Problem! Falls Sie sp√§ter einen Termin m√∂chten, rufen Sie gerne wieder an. Auf Wiederh√∂ren!"
            },
            "edges": [
                {
                    "id": "edge_27",
                    "destination_node_id": "end_node_polite",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Always end"
                    }
                }
            ]
        },
        {
            "id": "node_99_error_goodbye",
            "name": "Fehler Verabschiedung",
            "type": "conversation",
            "instruction": {
                "type": "static_text",
                "text": "Es tut mir leid, es gab ein technisches Problem. Bitte rufen Sie uns sp√§ter nochmal an. Auf Wiederh√∂ren!"
            },
            "edges": [
                {
                    "id": "edge_28",
                    "destination_node_id": "end_node_error",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Always end"
                    }
                }
            ]
        },
        {
            "id": "end_node_success",
            "name": "Ende - Erfolg",
            "type": "end",
            "instruction": {
                "type": "static_text",
                "text": ""
            },
            "edges": []
        },
        {
            "id": "end_node_polite",
            "name": "Ende - H√∂flich",
            "type": "end",
            "instruction": {
                "type": "static_text",
                "text": ""
            },
            "edges": []
        },
        {
            "id": "end_node_error",
            "name": "Ende - Fehler",
            "type": "end",
            "instruction": {
                "type": "static_text",
                "text": ""
            },
            "edges": []
        },
        {
            "id": "func_check_availability",
            "name": "üîç Verf√ºgbarkeit pr√ºfen (Explicit)",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Einen Moment bitte, ich pr√ºfe die Verf√ºgbarkeit f√ºr Sie..."
            },
            "edges": [
                {
                    "id": "edge_check_avail_success",
                    "destination_node_id": "node_present_availability",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Availability check completed successfully"
                    }
                },
                {
                    "id": "edge_check_avail_error",
                    "destination_node_id": "end_node_error",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Error during availability check"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-v17-check-availability",
            "wait_for_result": true,
            "speak_during_execution": true
        },
        {
            "id": "node_present_availability",
            "name": "üìä Verf√ºgbarkeit anzeigen & Best√§tigung",
            "type": "conversation",
            "instruction": {
                "type": "prompt",
                "text": "Zeige das Ergebnis der Verf√ºgbarkeitspr√ºfung:\n\n- Wenn VERF√úGBAR: \"Der Termin am [DATUM] um [UHRZEIT] ist verf√ºgbar. Soll ich das f√ºr Sie buchen?\"\n- Wenn NICHT verf√ºgbar: \"Leider ist dieser Termin nicht verf√ºgbar. Ich habe aber folgende Alternativen: [LISTE]\"\n\nWarte auf User-Best√§tigung bevor du buchst!\n\nBei \"Ja\" / \"Gerne\" / \"Passt\" ‚Üí Transition zu func_book_appointment\nBei \"Nein\" / Alternative gew√§hlt ‚Üí Sammle neues Datum/Uhrzeit\n"
            },
            "edges": [
                {
                    "id": "edge_user_confirmed",
                    "destination_node_id": "func_book_appointment",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "User confirmed booking (said Ja, Gerne, Passt, etc.)"
                    }
                },
                {
                    "id": "edge_user_wants_alternative",
                    "destination_node_id": "node_07_datetime_collection",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "User wants different time or alternative"
                    }
                }
            ]
        },
        {
            "id": "func_book_appointment",
            "name": "‚úÖ Termin buchen (Explicit)",
            "type": "function",
            "instruction": {
                "type": "static_text",
                "text": "Perfekt, einen Moment bitte, ich buche den Termin f√ºr Sie..."
            },
            "edges": [
                {
                    "id": "edge_booking_success",
                    "destination_node_id": "node_09a_booking_confirmation",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Booking completed successfully"
                    }
                },
                {
                    "id": "edge_booking_error",
                    "destination_node_id": "end_node_error",
                    "transition_condition": {
                        "type": "prompt",
                        "prompt": "Error during booking"
                    }
                }
            ],
            "tool_type": "local",
            "tool_id": "tool-v17-book-appointment",
            "wait_for_result": true,
            "speak_during_execution": true
        }
    ]
}