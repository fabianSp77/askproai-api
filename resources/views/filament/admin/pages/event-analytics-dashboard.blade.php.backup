<x-filament-panels::page>
    <div class="space-y-6">
        <!-- Filter Form -->
        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
            {{ $this->form }}
        </div>
        
        @if(!$companyId && auth()->user()->hasRole(['Super Admin', 'super_admin']))
            <!-- Gesamt-Übersicht für alle Unternehmen -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-gray-900 rounded-xl p-6 shadow-sm">
                <h2 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-4">
                    📊 Gesamt-Übersicht aller Unternehmen
                </h2>
                
                <!-- Hauptmetriken -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
                    <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
                        <div class="text-sm text-gray-500 dark:text-gray-400">Aktive Unternehmen</div>
                        <div class="text-2xl font-bold text-gray-900 dark:text-gray-100">{{ $stats['total_companies'] ?? 0 }}</div>
                    </div>
                    <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
                        <div class="text-sm text-gray-500 dark:text-gray-400">Gesamt-Termine</div>
                        <div class="text-2xl font-bold text-gray-900 dark:text-gray-100">{{ number_format($stats['total_appointments'] ?? 0) }}</div>
                        <div class="text-xs text-green-600 mt-1">{{ $stats['completion_rate'] ?? 0 }}% abgeschlossen</div>
                    </div>
                    <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
                        <div class="text-sm text-gray-500 dark:text-gray-400">Gesamt-Anrufe</div>
                        <div class="text-2xl font-bold text-gray-900 dark:text-gray-100">{{ number_format($stats['total_calls'] ?? 0) }}</div>
                        <div class="text-xs text-blue-600 mt-1">{{ $stats['call_success_rate'] ?? 0 }}% erfolgreich</div>
                    </div>
                    <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
                        <div class="text-sm text-gray-500 dark:text-gray-400">Gesamt-Umsatz</div>
                        <div class="text-2xl font-bold text-green-600">{{ number_format($stats['revenue'] ?? 0, 2, ',', '.') }} €</div>
                        <div class="text-xs text-gray-600 dark:text-gray-400 mt-1">Ø {{ number_format($stats['avg_revenue_per_appointment'] ?? 0, 2, ',', '.') }} €/Termin</div>
                    </div>
                </div>
                
                @if($viewMode === 'inbound' || $viewMode === 'combined')
                    <!-- Inbound Metriken -->
                    <div class="bg-white dark:bg-gray-800 rounded-lg p-4 mb-4">
                        <h3 class="font-semibold text-gray-900 dark:text-gray-100 mb-3 flex items-center">
                            <x-heroicon-o-phone-arrow-down-left class="w-5 h-5 mr-2 text-green-600" />
                            Eingehende Anrufe (Friseure, Restaurants)
                        </h3>
                        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-2 sm:gap-3">
                            <div>
                                <div class="text-xs text-gray-500">Gesamt</div>
                                <div class="text-xl font-bold">{{ number_format($callMetrics['inbound']['total_calls'] ?? 0) }}</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Beantwortet</div>
                                <div class="text-xl font-bold text-green-600">{{ number_format($callMetrics['inbound']['answered_calls'] ?? 0) }}</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Verpasst</div>
                                <div class="text-xl font-bold text-red-600">{{ number_format($callMetrics['inbound']['missed_calls'] ?? 0) }}</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Annahmerate</div>
                                <div class="text-xl font-bold">{{ $callMetrics['inbound']['answer_rate'] ?? 0 }}%</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Terminquote</div>
                                <div class="text-xl font-bold text-blue-600">{{ $callMetrics['inbound']['appointment_conversion_rate'] ?? 0 }}%</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Ø Dauer</div>
                                <div class="text-xl font-bold">{{ $callMetrics['inbound']['avg_call_duration'] ?? 0 }} Min</div>
                            </div>
                        </div>
                        @if(!empty($callMetrics['inbound']['peak_hours']))
                            <div class="mt-3 text-xs text-gray-600 dark:text-gray-400">
                                Stoßzeiten: 
                                @foreach($callMetrics['inbound']['peak_hours'] as $peak)
                                    {{ $peak['hour'] }}:00 ({{ $peak['count'] }})
                                    @if(!$loop->last), @endif
                                @endforeach
                            </div>
                        @endif
                    </div>
                @endif
                
                @if($viewMode === 'outbound' || $viewMode === 'combined')
                    <!-- Outbound Metriken -->
                    <div class="bg-white dark:bg-gray-800 rounded-lg p-4 mb-4">
                        <h3 class="font-semibold text-gray-900 dark:text-gray-100 mb-3 flex items-center">
                            <x-heroicon-o-phone-arrow-up-right class="w-5 h-5 mr-2 text-blue-600" />
                            Ausgehende Anrufe (Versicherungen, Vertrieb)
                        </h3>
                        <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-2 sm:gap-3">
                            <div>
                                <div class="text-xs text-gray-500">Gesamt</div>
                                <div class="text-xl font-bold">{{ number_format($callMetrics['outbound']['total_calls'] ?? 0) }}</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Verbunden</div>
                                <div class="text-xl font-bold text-green-600">{{ number_format($callMetrics['outbound']['connected_calls'] ?? 0) }}</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Fehlgeschlagen</div>
                                <div class="text-xl font-bold text-red-600">{{ number_format($callMetrics['outbound']['failed_calls'] ?? 0) }}</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Verbindungsrate</div>
                                <div class="text-xl font-bold">{{ $callMetrics['outbound']['connect_rate'] ?? 0 }}%</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Qualifizierungsrate</div>
                                <div class="text-xl font-bold text-blue-600">{{ $callMetrics['outbound']['qualification_rate'] ?? 0 }}%</div>
                            </div>
                            <div>
                                <div class="text-xs text-gray-500">Terminrate</div>
                                <div class="text-xl font-bold text-green-600">{{ $callMetrics['outbound']['appointment_rate'] ?? 0 }}%</div>
                            </div>
                        </div>
                        
                        @if(!empty($leadFunnelData))
                            <!-- Lead Funnel -->
                            <div class="mt-4">
                                <h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Lead-Funnel</h4>
                                <div class="flex items-center space-x-2">
                                    <div class="flex-1 text-center">
                                        <div class="bg-gray-200 dark:bg-gray-700 rounded-lg p-2">
                                            <div class="text-xs text-gray-600 dark:text-gray-400">Kontaktiert</div>
                                            <div class="font-bold">{{ $leadFunnelData['contacted'] ?? 0 }}</div>
                                        </div>
                                    </div>
                                    <x-heroicon-o-chevron-right class="w-4 h-4 text-gray-400 hidden sm:block rotate-90 sm:rotate-0" />
                                    <div class="flex-1 text-center">
                                        <div class="bg-blue-100 dark:bg-blue-900 rounded-lg p-2">
                                            <div class="text-xs text-gray-600 dark:text-gray-400">Verbunden</div>
                                            <div class="font-bold">{{ $leadFunnelData['connected'] ?? 0 }}</div>
                                        </div>
                                    </div>
                                    <x-heroicon-o-chevron-right class="w-4 h-4 text-gray-400 hidden sm:block rotate-90 sm:rotate-0" />
                                    <div class="flex-1 text-center">
                                        <div class="bg-yellow-100 dark:bg-yellow-900 rounded-lg p-2">
                                            <div class="text-xs text-gray-600 dark:text-gray-400">Qualifiziert</div>
                                            <div class="font-bold">{{ $leadFunnelData['qualified'] ?? 0 }}</div>
                                        </div>
                                    </div>
                                    <x-heroicon-o-chevron-right class="w-4 h-4 text-gray-400 hidden sm:block rotate-90 sm:rotate-0" />
                                    <div class="flex-1 text-center">
                                        <div class="bg-green-100 dark:bg-green-900 rounded-lg p-2">
                                            <div class="text-xs text-gray-600 dark:text-gray-400">Termin vereinbart</div>
                                            <div class="font-bold">{{ $leadFunnelData['appointment_set'] ?? 0 }}</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        @endif
                        
                        @if(!empty($callMetrics['outbound']['campaigns']))
                            <!-- Kampagnen Performance -->
                            <div class="mt-4">
                                <h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Aktive Kampagnen</h4>
                                <div class="space-y-2">
                                    @foreach(array_slice($callMetrics['outbound']['campaigns'], 0, 3) as $campaign)
                                        <div class="flex items-center justify-between text-sm">
                                            <span class="text-gray-700 dark:text-gray-300">{{ $campaign['name'] }}</span>
                                            <div class="flex items-center space-x-2">
                                                <span class="text-gray-500">{{ $campaign['calls_completed'] }}/{{ $campaign['total_targets'] }}</span>
                                                <span class="font-medium {{ $campaign['success_rate'] >= 70 ? 'text-green-600' : ($campaign['success_rate'] >= 50 ? 'text-yellow-600' : 'text-red-600') }}">
                                                    {{ $campaign['success_rate'] }}%
                                                </span>
                                            </div>
                                        </div>
                                    @endforeach
                                </div>
                            </div>
                        @endif
                    </div>
                @endif
                
                @if(!empty($companyComparison))
                    <!-- Unternehmens-Vergleich -->
                    <div class="bg-white dark:bg-gray-800 rounded-lg p-4">
                        <h3 class="font-semibold text-gray-900 dark:text-gray-100 mb-3">Top Unternehmen</h3>
                        <div class="overflow-x-auto">
                            <table class="min-w-full text-xs sm:text-sm">
                                <thead>
                                    <tr class="text-xs text-gray-500 dark:text-gray-400">
                                        <th class="text-left py-2">Unternehmen</th>
                                        <th class="text-center px-2">Termine</th>
                                        <th class="text-center px-2">Abschlussrate</th>
                                        <th class="text-center px-2">Anrufe</th>
                                        <th class="text-center px-2">Erfolgsrate</th>
                                        <th class="text-right px-2">Umsatz</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach($companyComparison as $company)
                                        <tr class="border-t border-gray-200 dark:border-gray-700">
                                            <td class="py-2 text-sm font-medium text-gray-900 dark:text-gray-100">{{ $company['company'] }}</td>
                                            <td class="text-center px-2 text-sm">{{ $company['appointments'] }}</td>
                                            <td class="text-center px-2">
                                                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full {{ $company['completion_rate'] >= 80 ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' }}">
                                                    {{ $company['completion_rate'] }}%
                                                </span>
                                            </td>
                                            <td class="text-center px-2 text-sm">{{ $company['calls'] }}</td>
                                            <td class="text-center px-2">
                                                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full {{ $company['call_success_rate'] >= 70 ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800' }}">
                                                    {{ $company['call_success_rate'] }}%
                                                </span>
                                            </td>
                                            <td class="text-right px-2 text-sm font-semibold text-green-600">{{ number_format($company['revenue'], 2, ',', '.') }} €</td>
                                        </tr>
                                    @endforeach
                                </tbody>
                            </table>
                        </div>
                    </div>
                @endif
            </div>
        @elseif($companyId)
            <!-- Haupt-Statistiken -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <!-- Gesamt-Termine -->
                <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Gesamt-Termine</p>
                            <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">
                                {{ number_format($stats['total_appointments'] ?? 0) }}
                            </p>
                            <p class="text-sm text-gray-600 dark:text-gray-300 mt-1">
                                <span class="text-green-600">{{ $stats['completion_rate'] ?? 0 }}%</span> abgeschlossen
                            </p>
                        </div>
                        <div class="p-3 bg-blue-100 dark:bg-blue-900 rounded-lg">
                            <x-heroicon-o-calendar class="w-8 h-8 text-blue-600 dark:text-blue-400" />
                        </div>
                    </div>
                </div>
                
                <!-- Umsatz -->
                <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Umsatz</p>
                            <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">
                                {{ number_format($stats['revenue'] ?? 0, 2, ',', '.') }} €
                            </p>
                            <p class="text-sm text-gray-600 dark:text-gray-300 mt-1">
                                Ø {{ number_format(($stats['revenue'] ?? 0) / max($stats['completed'] ?? 1, 1), 2, ',', '.') }} € pro Termin
                            </p>
                        </div>
                        <div class="p-3 bg-green-100 dark:bg-green-900 rounded-lg">
                            <x-heroicon-o-currency-euro class="w-8 h-8 text-green-600 dark:text-green-400" />
                        </div>
                    </div>
                </div>
                
                <!-- Auslastung -->
                <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Auslastung</p>
                            <p class="text-3xl font-bold text-gray-900 dark:text-gray-100">
                                {{ $stats['utilization'] ?? 0 }}%
                            </p>
                            <div class="mt-2 w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                                <div class="bg-blue-600 h-2 rounded-full" style="width: {{ min($stats['utilization'] ?? 0, 100) }}%"></div>
                            </div>
                        </div>
                        <div class="p-3 bg-purple-100 dark:bg-purple-900 rounded-lg">
                            <x-heroicon-o-chart-bar class="w-8 h-8 text-purple-600 dark:text-purple-400" />
                        </div>
                    </div>
                </div>
                
                <!-- No-Show Rate -->
                <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-500 dark:text-gray-400">No-Show Rate</p>
                            <p class="text-3xl font-bold {{ ($stats['no_show_rate'] ?? 0) > 10 ? 'text-red-600' : 'text-gray-900 dark:text-gray-100' }}">
                                {{ $stats['no_show_rate'] ?? 0 }}%
                            </p>
                            <p class="text-sm text-gray-600 dark:text-gray-300 mt-1">
                                {{ $stats['no_show'] ?? 0 }} von {{ $stats['total_appointments'] ?? 0 }}
                            </p>
                        </div>
                        <div class="p-3 bg-red-100 dark:bg-red-900 rounded-lg">
                            <x-heroicon-o-x-circle class="w-8 h-8 text-red-600 dark:text-red-400" />
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Charts -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Termine Timeline -->
                <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Termine im Zeitverlauf</h3>
                    <canvas id="appointmentsChart" class="w-full" style="height: 300px;"></canvas>
                </div>
                
                <!-- Umsatz Timeline -->
                <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Umsatzentwicklung</h3>
                    <canvas id="revenueChart" class="w-full" style="height: 300px;"></canvas>
                </div>
            </div>
            
            @if($viewMode === 'combined' || $viewMode === 'inbound' || $viewMode === 'outbound')
                <!-- Call Analytics -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    <!-- Anrufverteilung -->
                    <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Anrufverteilung</h3>
                        <canvas id="callDistributionChart" class="w-full" style="height: 300px;"></canvas>
                    </div>
                    
                    <!-- Anruf Timeline -->
                    <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Anrufe im Zeitverlauf</h3>
                        <canvas id="callsTimelineChart" class="w-full" style="height: 300px;"></canvas>
                    </div>
                </div>
            @endif
            
            <!-- Heatmap -->
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Auslastungs-Heatmap</h3>
                <div class="text-sm text-gray-600 dark:text-gray-400 mb-4">Termine nach Wochentag und Uhrzeit</div>
                <div id="heatmap" class="w-full" style="height: 400px;"></div>
            </div>
            
            <!-- Top Performer -->
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Top Performer</h3>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                        <thead>
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Mitarbeiter
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Termine
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Abgeschlossen
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Erfolgsrate
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    No-Show Rate
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Ø Dauer
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                            @foreach($topPerformers as $performer)
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100">
                                        {{ $performer->name }}
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-gray-500 dark:text-gray-400">
                                        {{ $performer->total_appointments }}
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-gray-500 dark:text-gray-400">
                                        {{ $performer->completed }}
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full
                                            {{ $performer->completion_rate >= 90 ? 'bg-green-100 text-green-800' : 
                                               ($performer->completion_rate >= 75 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800') }}">
                                            {{ $performer->completion_rate }}%
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full
                                            {{ $performer->no_show_rate <= 5 ? 'bg-green-100 text-green-800' : 
                                               ($performer->no_show_rate <= 10 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800') }}">
                                            {{ $performer->no_show_rate }}%
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-gray-500 dark:text-gray-400">
                                        {{ round($performer->avg_duration_minutes ?? 0) }} Min
                                    </td>
                                </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
            
            <!-- Event Type Stats -->
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Event-Type Performance</h3>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                        <thead>
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Event-Type
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Buchungen
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Abgeschlossen
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Preis
                                </th>
                                <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                                    Umsatz
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                            @foreach($eventTypeStats as $eventType)
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="text-sm font-medium text-gray-900 dark:text-gray-100">
                                            {{ $eventType->name }}
                                        </div>
                                        <div class="text-sm text-gray-500 dark:text-gray-400">
                                            {{ $eventType->duration_minutes }} Minuten
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-gray-500 dark:text-gray-400">
                                        {{ $eventType->bookings }}
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-gray-500 dark:text-gray-400">
                                        {{ $eventType->completed }}
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center text-gray-500 dark:text-gray-400">
                                        {{ number_format($eventType->price ?? 0, 2, ',', '.') }} €
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-center font-semibold text-gray-900 dark:text-gray-100">
                                        {{ number_format($eventType->revenue ?? 0, 2, ',', '.') }} €
                                    </td>
                                </tr>
                            @endforeach
                        </tbody>
                    </table>
                </div>
            </div>
        @else
            <div class="text-center py-12">
                <x-heroicon-o-chart-bar class="mx-auto h-12 w-12 text-gray-400" />
                <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-gray-100">Keine Daten</h3>
                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                    @if(auth()->user()->hasRole(['Super Admin', 'super_admin']))
                        Wählen Sie ein Unternehmen aus oder lassen Sie das Feld leer für eine Gesamt-Übersicht.
                    @else
                        Bitte wählen Sie ein Unternehmen aus, um die Analytics anzuzeigen.
                    @endif
                </p>
            </div>
        @endif
    </div>
    
    @push('scripts')
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts@3.44.0/dist/apexcharts.min.js"></script>
    
    @if($companyId)
    <script>
        // Make data available globally for the charts script
        window.analyticsChartData = @json($chartData ?? []);
        window.analyticsHeatmapData = @json($heatmapData ?? []);
        window.analyticsCallMetrics = @json($callMetrics ?? []);
        
        console.log('📊 Analytics data loaded for company:', {{ $companyId }});
    </script>
    <script src="{{ asset('js/analytics-charts-simple.js') }}"></script>
    @endif
    
    <script>
        // Enhanced chart initialization with better timing
        (function() {
            'use strict';
            
            window.dashboardCharts = window.dashboardCharts || {};
        
        function destroyExistingCharts() {
            if (window.dashboardCharts) {
                Object.keys(window.dashboardCharts).forEach(key => {
                    if (window.dashboardCharts[key]) {
                        if (typeof window.dashboardCharts[key].destroy === 'function') {
                            window.dashboardCharts[key].destroy();
                        }
                        delete window.dashboardCharts[key];
                    }
                });
            }
        }
        
        function initializeCharts(retryCount = 0) {
            console.log('🚀 Starting chart initialization... (attempt ' + (retryCount + 1) + ')');
            console.log('Company ID:', {{ $companyId ?? 'null' }});
            console.log('Chart.js available:', typeof Chart !== 'undefined');
            console.log('ApexCharts available:', typeof ApexCharts !== 'undefined');
            
            // Wait for libraries to load
            if (typeof Chart === 'undefined' || typeof ApexCharts === 'undefined') {
                if (retryCount < 20) {
                    console.log('⏳ Chart libraries not loaded, retrying in 250ms...');
                    setTimeout(() => initializeCharts(retryCount + 1), 250);
                } else {
                    console.error('❌ Chart libraries failed to load after 5 seconds');
                }
                return;
            }
            
            // Destroy existing charts before creating new ones
            destroyExistingCharts();
            
            // Chart data from PHP
            const chartData = @json($chartData ?? []);
            const heatmapData = @json($heatmapData ?? []);
            const callMetrics = @json($callMetrics ?? []);
            
            console.log('Chart data:', chartData);
            console.log('Canvas elements:', {
                appointments: document.getElementById('appointmentsChart'),
                revenue: document.getElementById('revenueChart'),
                callDist: document.getElementById('callDistributionChart'),
                callsTimeline: document.getElementById('callsTimelineChart'),
                heatmap: document.getElementById('heatmap')
            });
            
            // Check if we should create charts
            const shouldCreateCharts = {{ $companyId ? 'true' : 'false' }};
            const companyId = {{ $companyId ?? 'null' }};
            
            console.log('Should create charts:', shouldCreateCharts);
            console.log('Company ID value:', companyId);
            
            if (shouldCreateCharts && companyId) {
                console.log('✅ Company selected, creating charts for company ID:', companyId);
                console.log('📊 Available chart containers:', {
                    appointments: document.getElementById('appointmentsChart'),
                    revenue: document.getElementById('revenueChart'),
                    callDist: document.getElementById('callDistributionChart'),
                    callsTimeline: document.getElementById('callsTimelineChart'),
                    heatmap: document.getElementById('heatmap')
                });
                
                // Appointments Chart
                const appointmentsCanvas = document.getElementById('appointmentsChart');
                if (appointmentsCanvas) {
                    // Force canvas to be visible
                    appointmentsCanvas.style.display = 'block';
                    appointmentsCanvas.style.width = '100%';
                    appointmentsCanvas.style.height = '300px';
                    
                    const appointmentsCtx = appointmentsCanvas.getContext('2d');
                    console.log('📈 Appointments Canvas context:', appointmentsCtx ? '✅ Found' : '❌ Not found');
                    
                    if (appointmentsCtx && chartData.labels && chartData.appointments) {
                        console.log('Creating appointments chart with data:', chartData.appointments);
                        window.dashboardCharts.appointments = new Chart(appointmentsCtx, {
                        type: 'bar',
                        data: {
                            labels: @json($chartData['labels'] ?? []),
                            datasets: [{
                                label: 'Termine',
                                data: @json($chartData['appointments'] ?? []),
                                backgroundColor: 'rgba(59, 130, 246, 0.5)',
                                borderColor: 'rgb(59, 130, 246)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
                
                // Revenue Chart
                const revenueCtx = document.getElementById('revenueChart')?.getContext('2d');
                if (revenueCtx) {
                    window.dashboardCharts.revenue = new Chart(revenueCtx, {
                        type: 'line',
                        data: {
                            labels: @json($chartData['labels'] ?? []),
                            datasets: [{
                                label: 'Umsatz',
                                data: @json($chartData['revenue'] ?? []),
                                borderColor: 'rgb(34, 197, 94)',
                                backgroundColor: 'rgba(34, 197, 94, 0.1)',
                                tension: 0.4
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function(value) {
                                            return value.toLocaleString('de-DE') + ' €';
                                        }
                                    }
                                }
                            }
                        }
                    });
                }
                
                // Call Distribution Chart (Pie/Donut)
                const callDistCtx = document.getElementById('callDistributionChart')?.getContext('2d');
                if (callDistCtx) {
                    const inboundCalls = {{ ($callMetrics['inbound']['total_calls'] ?? 0) }};
                    const outboundCalls = {{ ($callMetrics['outbound']['total_calls'] ?? 0) }};
                    
                    if (inboundCalls > 0 || outboundCalls > 0) {
                        window.dashboardCharts.callDistribution = new Chart(callDistCtx, {
                            type: 'doughnut',
                            data: {
                                labels: ['Eingehend', 'Ausgehend'],
                                datasets: [{
                                    data: [inboundCalls, outboundCalls],
                                    backgroundColor: [
                                        'rgba(34, 197, 94, 0.8)',
                                        'rgba(59, 130, 246, 0.8)'
                                    ],
                                    borderWidth: 0
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                plugins: {
                                    legend: {
                                        position: 'bottom'
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: function(context) {
                                                const label = context.label || '';
                                                const value = context.parsed || 0;
                                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                                const percentage = ((value / total) * 100).toFixed(1);
                                                return label + ': ' + value + ' (' + percentage + '%)';
                                            }
                                        }
                                    }
                                }
                            }
                        });
                    }
                }
                
                // Calls Timeline Chart
                const callsTimelineCtx = document.getElementById('callsTimelineChart')?.getContext('2d');
                if (callsTimelineCtx) {
                    window.dashboardCharts.callsTimeline = new Chart(callsTimelineCtx, {
                        type: 'line',
                        data: {
                            labels: @json($chartData['labels'] ?? []),
                            datasets: [{
                                label: 'Anrufe',
                                data: @json($chartData['calls'] ?? []),
                                borderColor: 'rgb(168, 85, 247)',
                                backgroundColor: 'rgba(168, 85, 247, 0.1)',
                                tension: 0.4
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    display: false
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
                
                // Heatmap
                const heatmapElement = document.querySelector("#heatmap");
                if (heatmapElement && @json($heatmapData ?? [])) {
                    const heatmapOptions = {
                        series: @json($heatmapData ?? []),
                        chart: {
                            height: 350,
                            type: 'heatmap',
                            toolbar: {
                                show: false
                            }
                        },
                        plotOptions: {
                            heatmap: {
                                shadeIntensity: 0.5,
                                colorScale: {
                                    ranges: [
                                        { from: 0, to: 0, name: 'Keine', color: '#E5E7EB' },
                                        { from: 1, to: 3, name: 'Wenig', color: '#DBEAFE' },
                                        { from: 4, to: 7, name: 'Mittel', color: '#93C5FD' },
                                        { from: 8, to: 12, name: 'Viel', color: '#3B82F6' },
                                        { from: 13, to: 999, name: 'Sehr viel', color: '#1E40AF' }
                                    ]
                                }
                            }
                        },
                        dataLabels: {
                            enabled: true,
                            style: {
                                colors: ['#000'],
                                fontSize: '11px'
                            }
                        },
                        xaxis: {
                            type: 'category',
                            categories: ['08:00','09:00','10:00','11:00','12:00','13:00','14:00',
                                        '15:00','16:00','17:00','18:00','19:00','20:00'],
                            labels: {
                                style: {
                                    fontSize: '10px'
                                }
                            }
                        },
                        yaxis: {
                            labels: {
                                style: {
                                    fontSize: '11px'
                                }
                            }
                        },
                        tooltip: {
                            y: {
                                formatter: function(val) {
                                    return val + ' Termine';
                                }
                            }
                        }
                    };
                    
                    window.dashboardCharts.heatmap = new ApexCharts(heatmapElement, heatmapOptions);
                    window.dashboardCharts.heatmap.render();
                }
            } else {
                console.log('⚠️ No company selected or charts not needed');
            }
        }
        
        // Initialize charts on page load
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initializeCharts);
        } else {
            // DOM is already loaded
            setTimeout(initializeCharts, 100);
        }
        
        // Re-initialize charts after Livewire updates
        document.addEventListener('livewire:navigated', function() {
            setTimeout(initializeCharts, 200);
        });
        
        document.addEventListener('livewire:load', function() {
            Livewire.hook('message.processed', function() {
                setTimeout(initializeCharts, 200);
            });
        });
        
        // Also listen for custom events
        window.addEventListener('charts:refresh', initializeCharts);
        
        // Add a manual trigger for debugging
        window.forceChartsRefresh = function() {
            console.log('🔧 Manual chart refresh triggered');
            initializeCharts();
        };
        
        })(); // Close the IIFE
    </script>
    @endpush
</x-filament-panels::page>