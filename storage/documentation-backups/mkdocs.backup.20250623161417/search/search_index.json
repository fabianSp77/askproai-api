{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to AskProAI Documentation","text":"<p>Production Ready</p> <p>The system is 85% production ready with only 2 configurations needed to go live!</p>"},{"location":"#what-is-askproai","title":"\ud83d\ude80 What is AskProAI?","text":"<p>AskProAI is an AI-powered SaaS platform that automatically answers incoming customer calls and independently schedules appointments. Through the integration of phone AI (Retell.ai) and online calendar system (Cal.com), it creates a seamless end-to-end solution for appointment bookings.</p>"},{"location":"#key-metrics","title":"Key Metrics","text":"Metric Value Status Success Rate 99.3% \u2705 Excellent Avg Response Time 187ms \u2705 Fast Production Ready 85% \u26a1 Almost there MCP Servers 5 \u2705 Operational Database Tables 119 \u2192 25 \ud83d\udd27 Needs consolidation"},{"location":"#core-features","title":"\ud83c\udfaf Core Features","text":"- :material-phone-in-talk: **24/7 AI Phone Answering**      Never miss a call again. Our AI agents answer professionally in German and 30+ languages.  - :material-calendar-check: **Automatic Appointment Booking**      Seamlessly books appointments directly into Cal.com calendars during phone conversations.  - :material-office-building: **Multi-Tenant Architecture**      Supports multiple businesses with complete data isolation and customization.  - :material-brain: **Advanced MCP Integration**      5 specialized MCP servers orchestrate the entire booking process with 99.3% reliability.  - :material-shield-check: **GDPR Compliant**      Full GDPR/DSGVO compliance with data export, deletion, and encryption features.  - :material-chart-line: **Analytics &amp; ROI Tracking**      Comprehensive analytics dashboard with ROI calculation and performance metrics."},{"location":"#system-architecture-overview","title":"\ud83d\udcca System Architecture Overview","text":"<pre><code>graph TB\n    subgraph \"Customer Interface\"\n        PHONE[\ud83d\udcde Phone Call]\n        WEB[\ud83d\udcbb Web Portal]\n        WHATSAPP[\ud83d\udcf1 WhatsApp]\n    end\n\n    subgraph \"AI Layer\"\n        RETELL[Retell.ai Agent]\n        MCP[MCP Orchestrator]\n    end\n\n    subgraph \"Business Logic\"\n        BOOKING[Booking Service]\n        CUSTOMER[Customer Service]\n        CALENDAR[Calendar Service]\n    end\n\n    subgraph \"External Services\"\n        CALCOM[Cal.com]\n        STRIPE[Stripe]\n        SMS[SMS Gateway]\n    end\n\n    subgraph \"Data Layer\"\n        DB[(MySQL)]\n        REDIS[(Redis)]\n    end\n\n    PHONE --&gt; RETELL\n    RETELL --&gt; MCP\n    MCP --&gt; BOOKING\n    BOOKING --&gt; CALENDAR\n    CALENDAR --&gt; CALCOM\n    BOOKING --&gt; CUSTOMER\n    CUSTOMER --&gt; DB\n    MCP --&gt; REDIS\n    BOOKING --&gt; STRIPE\n    WHATSAPP -.-&gt;|Coming Soon| MCP\n    WEB --&gt; CUSTOMER</code></pre>"},{"location":"#quick-start","title":"\ud83d\udd25 Quick Start","text":"<p>Only 2 Configurations Needed!</p> <ol> <li>Set <code>branches.calcom_event_type_id</code> </li> <li>Set <code>phone_numbers.retell_agent_id</code></li> </ol> <p>That's it! The system handles everything else automatically.</p>"},{"location":"#minimal-setup-steps","title":"Minimal Setup Steps","text":"<ol> <li> <p>Clone the repository <pre><code>git clone https://github.com/askproai/api-gateway.git\ncd api-gateway\n</code></pre></p> </li> <li> <p>Install dependencies <pre><code>composer install\nnpm install\n</code></pre></p> </li> <li> <p>Configure environment <pre><code>cp .env.example .env\nphp artisan key:generate\n</code></pre></p> </li> <li> <p>Run migrations <pre><code>php artisan migrate --seed\n</code></pre></p> </li> <li> <p>Configure the 2 critical values <pre><code>-- Set Cal.com Event Type\nUPDATE branches SET calcom_event_type_id = YOUR_EVENT_TYPE_ID WHERE id = 1;\n\n-- Set Retell Agent\nUPDATE phone_numbers SET retell_agent_id = 'YOUR_AGENT_ID' WHERE number = '+YOUR_PHONE';\n</code></pre></p> </li> <li> <p>Start the services <pre><code>php artisan serve\nphp artisan horizon\nnpm run dev\n</code></pre></p> </li> </ol>"},{"location":"#critical-security-notes","title":"\ud83d\udea8 Critical Security Notes","text":"<p>Immediate Action Required</p> <p>The following security issues were discovered during analysis:</p> <ul> <li>Remove all debug routes from production</li> <li>Remove webhook bypass middleware </li> <li>Secure metrics endpoints with authentication</li> <li>Remove hardcoded credentials from routes/web.php</li> </ul> <p>See Security Audit for details.</p>"},{"location":"#documentation-sections","title":"\ud83d\udcda Documentation Sections","text":""},{"location":"#for-developers","title":"For Developers","text":"<ul> <li>System Architecture - Understand the system design</li> <li>API Reference - Complete API documentation</li> <li>Development Setup - Get started with development</li> </ul>"},{"location":"#for-operations","title":"For Operations","text":"<ul> <li>Deployment Guide - Deploy to production</li> <li>Monitoring - Monitor system health</li> <li>Troubleshooting - Fix common issues</li> </ul>"},{"location":"#for-business-users","title":"For Business Users","text":"<ul> <li>Feature Overview - What AskProAI can do</li> <li>ROI Calculator - Calculate your return on investment</li> <li>GDPR Compliance - Data protection features</li> </ul>"},{"location":"#hidden-features-discovered","title":"\ud83c\udf89 Hidden Features Discovered","text":"<p>During our exhaustive analysis, we found several powerful features that were not documented:</p> <ul> <li>Knowledge Base System - AI-powered documentation with markdown enhancement</li> <li>WhatsApp Integration - Ready but not activated</li> <li>Customer Self-Service Portal - Partially implemented</li> <li>Advanced Analytics - Quantum monitoring dashboard</li> <li>Mobile App API - Endpoints ready for mobile apps</li> </ul>"},{"location":"#project-status","title":"\ud83d\udcc8 Project Status","text":""},{"location":"#whats-working-great","title":"What's Working Great \u2705","text":"<ul> <li>Core booking flow (99.3% success rate)</li> <li>MCP orchestration system</li> <li>Multi-tenant architecture</li> <li>Stripe billing integration</li> <li>GDPR compliance features</li> </ul>"},{"location":"#what-needs-work","title":"What Needs Work \ud83d\udd27","text":"<ul> <li>Database consolidation (119 \u2192 25 tables)</li> <li>Service layer cleanup (12 \u2192 3 services)</li> <li>Security hardening</li> <li>Documentation updates</li> <li>Test coverage improvement</li> </ul>"},{"location":"#getting-help","title":"\ud83e\udd1d Getting Help","text":"<ul> <li>GitHub Issues: Report bugs or request features</li> <li>Documentation: You're reading it!</li> <li>API Status: Check System Status</li> </ul> <p>Last updated: {date}</p>"},{"location":"CALCOM_MCP_SERVER_API/","title":"CalcomMCPServer API Documentation","text":"<p>The CalcomMCPServer provides a robust interface to Cal.com with built-in caching, circuit breaker protection, and retry logic.</p>"},{"location":"CALCOM_MCP_SERVER_API/#features","title":"Features","text":"<ul> <li>Circuit Breaker Protection: Prevents cascading failures when Cal.com is unavailable</li> <li>Response Caching: Reduces API calls and improves performance</li> <li>Retry Logic: Automatic retry with exponential backoff for transient failures</li> <li>Idempotency: Prevents duplicate bookings with idempotency keys</li> <li>Alternative Slot Finder: Intelligent algorithm to find alternative time slots</li> </ul>"},{"location":"CALCOM_MCP_SERVER_API/#methods","title":"Methods","text":""},{"location":"CALCOM_MCP_SERVER_API/#checkavailabilityarray-params-array","title":"checkAvailability(array $params): array","text":"<p>Checks availability for a specific event type with caching.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>event_type_id</code> (required): Cal.com event type ID - <code>date_from</code> (optional): Start date (default: today) - <code>date_to</code> (optional): End date (default: +7 days) - <code>timezone</code> (optional): Timezone (default: Europe/Berlin)</p> <p>Response: <pre><code>{\n    \"success\": true,\n    \"available_slots\": [...],\n    \"date_range\": {\n        \"from\": \"2025-06-21\",\n        \"to\": \"2025-06-28\"\n    },\n    \"event_type_id\": 2026361,\n    \"timezone\": \"Europe/Berlin\",\n    \"cached_until\": \"2025-06-21T10:35:00+00:00\"\n}\n</code></pre></p>"},{"location":"CALCOM_MCP_SERVER_API/#createbookingarray-params-array","title":"createBooking(array $params): array","text":"<p>Creates a booking with retry logic and idempotency protection.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>event_type_id</code> (required): Cal.com event type ID - <code>start</code> (required): Start time (ISO 8601 format) - <code>end</code> (optional): End time (calculated from event type if not provided) - <code>name</code> (required): Customer name - <code>email</code> (required): Customer email - <code>phone</code> (optional): Customer phone - <code>notes</code> (optional): Booking notes - <code>timezone</code> (optional): Timezone (default: Europe/Berlin) - <code>metadata</code> (optional): Additional metadata</p> <p>Response: <pre><code>{\n    \"success\": true,\n    \"booking\": {\n        \"id\": 12345,\n        \"uid\": \"abc123\",\n        \"start\": \"2025-06-22T10:00:00Z\",\n        \"end\": \"2025-06-22T10:30:00Z\",\n        \"status\": \"ACCEPTED\",\n        \"event_type_id\": 2026361\n    },\n    \"message\": \"Booking created successfully\",\n    \"attempts\": 1\n}\n</code></pre></p>"},{"location":"CALCOM_MCP_SERVER_API/#updatebookingarray-params-array","title":"updateBooking(array $params): array","text":"<p>Updates an existing booking.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>booking_id</code> (required): Booking ID - <code>start</code> (optional): New start time - <code>end</code> (optional): New end time - <code>title</code> (optional): New title - <code>description</code> (optional): New description - <code>reschedule_reason</code> (optional): Reason for rescheduling</p> <p>Response: <pre><code>{\n    \"success\": true,\n    \"booking\": {...},\n    \"message\": \"Booking updated successfully\"\n}\n</code></pre></p>"},{"location":"CALCOM_MCP_SERVER_API/#cancelbookingarray-params-array","title":"cancelBooking(array $params): array","text":"<p>Cancels a booking.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>booking_id</code> (required): Booking ID - <code>cancellation_reason</code> (optional): Reason for cancellation</p> <p>Response: <pre><code>{\n    \"success\": true,\n    \"message\": \"Booking cancelled successfully\",\n    \"booking_id\": 12345,\n    \"cancelled_at\": \"2025-06-21T10:00:00+00:00\"\n}\n</code></pre></p>"},{"location":"CALCOM_MCP_SERVER_API/#findalternativeslotsarray-params-array","title":"findAlternativeSlots(array $params): array","text":"<p>Finds alternative time slots when the preferred slot is not available.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>event_type_id</code> (required): Cal.com event type ID - <code>preferred_start</code> (required): Preferred start time - <code>search_days</code> (optional): Days to search (default: 7) - <code>max_alternatives</code> (optional): Maximum alternatives to return (default: 5) - <code>timezone</code> (optional): Timezone (default: Europe/Berlin)</p> <p>Response: <pre><code>{\n    \"success\": true,\n    \"preferred_start\": \"2025-06-22T09:00:00+00:00\",\n    \"alternatives\": [\n        {\n            \"start\": \"2025-06-22T10:00:00Z\",\n            \"end\": \"2025-06-22T10:30:00Z\",\n            \"date\": \"2025-06-22\",\n            \"time\": \"10:00\",\n            \"day_of_week\": \"Saturday\",\n            \"days_from_preferred\": 0\n        }\n    ],\n    \"search_period\": {\n        \"from\": \"2025-06-22\",\n        \"to\": \"2025-06-29\"\n    },\n    \"total_available\": 15,\n    \"message\": \"Alternative slots found\"\n}\n</code></pre></p>"},{"location":"CALCOM_MCP_SERVER_API/#circuit-breaker-states","title":"Circuit Breaker States","text":"<p>The circuit breaker has three states:</p> <ol> <li>CLOSED: Normal operation, all requests go through</li> <li>OPEN: Service is down, requests fail fast with fallback</li> <li>HALF_OPEN: Testing if service is back up</li> </ol> <p>Configuration: - Failure threshold: 5 failures - Success threshold: 2 successes to close - Timeout: 60 seconds - Half-open requests: 3 test requests</p>"},{"location":"CALCOM_MCP_SERVER_API/#caching-strategy","title":"Caching Strategy","text":"<ul> <li>Event types: Cached for 5 minutes</li> <li>Availability: Cached for 5 minutes with smart key generation</li> <li>Bookings: Idempotency cache for 24 hours</li> <li>Cache is automatically cleared on updates</li> </ul>"},{"location":"CALCOM_MCP_SERVER_API/#error-handling","title":"Error Handling","text":"<p>All methods return a consistent error format:</p> <pre><code>{\n    \"success\": false,\n    \"error\": \"error_type\",\n    \"message\": \"Human readable error message\",\n    \"circuit_breaker_open\": true // When circuit is open\n}\n</code></pre> <p>Error types: - <code>validation_error</code>: Invalid input parameters - <code>configuration_error</code>: Company or Cal.com not configured - <code>service_unavailable</code>: Circuit breaker is open - <code>booking_failed</code>: Booking creation failed - <code>update_failed</code>: Update operation failed - <code>cancellation_failed</code>: Cancellation failed - <code>exception</code>: General exception occurred</p>"},{"location":"CALCOM_MCP_SERVER_API/#usage-example","title":"Usage Example","text":"<pre><code>use App\\Services\\MCP\\CalcomMCPServer;\n\n$mcpServer = new CalcomMCPServer();\n\n// Check availability\n$availability = $mcpServer-&gt;checkAvailability([\n    'company_id' =&gt; 1,\n    'event_type_id' =&gt; 2026361,\n    'date_from' =&gt; '2025-06-21',\n    'date_to' =&gt; '2025-06-28'\n]);\n\n// Create booking\nif ($availability['success']) {\n    $booking = $mcpServer-&gt;createBooking([\n        'company_id' =&gt; 1,\n        'event_type_id' =&gt; 2026361,\n        'start' =&gt; '2025-06-22T10:00:00Z',\n        'name' =&gt; 'John Doe',\n        'email' =&gt; 'john@example.com',\n        'phone' =&gt; '+49 30 12345678'\n    ]);\n}\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/","title":"Cal.com V2 API Integration Documentation","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#overview","title":"Overview","text":"<p>This document describes the production-ready Cal.com V2 API integration for AskProAI. The integration provides a robust, scalable, and fault-tolerant solution for managing calendar bookings through Cal.com's latest API version.</p>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#key-features","title":"Key Features","text":"<ul> <li>\u2705 Full V2 API Support: All major endpoints implemented</li> <li>\u2705 Circuit Breaker Pattern: Automatic fault tolerance</li> <li>\u2705 Retry Logic: Exponential backoff for transient failures</li> <li>\u2705 Response Caching: Redis-based caching for performance</li> <li>\u2705 Type Safety: DTOs for all API responses</li> <li>\u2705 Structured Logging: Comprehensive request/response logging</li> <li>\u2705 Error Handling: Custom exceptions for different error types</li> <li>\u2705 Health Monitoring: Built-in health check endpoint</li> <li>\u2705 Metrics Collection: Performance and reliability metrics</li> </ul>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#architecture","title":"Architecture","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#core-components","title":"Core Components","text":"<ol> <li>CalcomV2Client: Low-level API client with all HTTP operations</li> <li>CalcomV2Service: High-level service integrating with domain models</li> <li>DTOs: Type-safe data transfer objects</li> <li>Exceptions: Specific exception classes for error handling</li> <li>Controllers: HTTP endpoints for health checks</li> </ol>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#class-structure","title":"Class Structure","text":"<pre><code>app/Services/Calcom/\n\u251c\u2500\u2500 CalcomV2Client.php          # Core API client\n\u251c\u2500\u2500 CalcomV2Service.php         # Business logic service\n\u251c\u2500\u2500 DTOs/\n\u2502   \u251c\u2500\u2500 BaseDTO.php            # Base DTO class\n\u2502   \u251c\u2500\u2500 EventTypeDTO.php       # Event type data\n\u2502   \u251c\u2500\u2500 SlotDTO.php            # Available slot data\n\u2502   \u251c\u2500\u2500 BookingDTO.php         # Booking data\n\u2502   \u251c\u2500\u2500 AttendeeDTO.php        # Attendee data\n\u2502   \u2514\u2500\u2500 ScheduleDTO.php        # Schedule data\n\u2514\u2500\u2500 Exceptions/\n    \u251c\u2500\u2500 CalcomApiException.php          # Base exception\n    \u251c\u2500\u2500 CalcomAuthenticationException.php\n    \u251c\u2500\u2500 CalcomRateLimitException.php\n    \u2514\u2500\u2500 CalcomValidationException.php\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#api-endpoints","title":"API Endpoints","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#event-types","title":"Event Types","text":"<pre><code>// Get all event types\n$client-&gt;getEventTypes(array $filters = []): array\n\n// Filters:\n// - userId: Filter by user ID\n// - teamId: Filter by team ID\n// - active: Filter active/inactive\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#schedules","title":"Schedules","text":"<pre><code>// Get all schedules\n$client-&gt;getSchedules(array $filters = []): array\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#available-slots","title":"Available Slots","text":"<pre><code>// Get available time slots\n$client-&gt;getAvailableSlots(array $params): array\n\n// Required params:\n// - startTime: ISO 8601 datetime\n// - endTime: ISO 8601 datetime\n// - eventTypeId OR eventTypeSlug\n// \n// Optional params:\n// - timeZone: Timezone for slots (default: UTC)\n// - duration: Override event type duration\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#bookings","title":"Bookings","text":"<pre><code>// Create a new booking\n$client-&gt;createBooking(array $data): BookingDTO\n\n// Required data:\n// - start: ISO 8601 datetime\n// - eventTypeId: Event type ID\n// - responses: Array with name and email\n// - metadata: Additional metadata\n//\n// Optional data:\n// - timeZone: Attendee timezone\n// - language: Preferred language\n// - location: Meeting location\n\n// Get all bookings\n$client-&gt;getBookings(array $filters = []): array\n\n// Get single booking\n$client-&gt;getBooking(string $uid): BookingDTO\n\n// Reschedule booking\n$client-&gt;rescheduleBooking(string $uid, array $data): BookingDTO\n\n// Cancel booking\n$client-&gt;cancelBooking(string $uid, array $data = []): array\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#usage-examples","title":"Usage Examples","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#basic-usage","title":"Basic Usage","text":"<pre><code>use App\\Services\\Calcom\\CalcomV2Client;\n\n// Initialize client\n$client = new CalcomV2Client('your-api-key');\n\n// Get event types\n$eventTypes = $client-&gt;getEventTypes();\n\n// Get available slots\n$slots = $client-&gt;getAvailableSlots([\n    'startTime' =&gt; '2024-01-15T00:00:00Z',\n    'endTime' =&gt; '2024-01-16T00:00:00Z',\n    'eventTypeId' =&gt; 123\n]);\n\n// Create booking\n$booking = $client-&gt;createBooking([\n    'start' =&gt; '2024-01-15T10:00:00Z',\n    'eventTypeId' =&gt; 123,\n    'responses' =&gt; [\n        'name' =&gt; 'John Doe',\n        'email' =&gt; 'john@example.com',\n        'phone' =&gt; '+1234567890'\n    ],\n    'metadata' =&gt; [\n        'source' =&gt; 'askproai'\n    ]\n]);\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#service-layer-usage","title":"Service Layer Usage","text":"<pre><code>use App\\Services\\Calcom\\CalcomV2Service;\nuse App\\Models\\Company;\n\n// Initialize service with company\n$company = Company::find(1);\n$service = new CalcomV2Service($company);\n\n// Get event types as DTOs\n$eventTypes = $service-&gt;getEventTypes();\n\n// Check availability\n$isAvailable = $service-&gt;checkAvailability(\n    eventTypeId: 123,\n    requestedTime: now()-&gt;addDay()-&gt;setTime(10, 0),\n    staffId: 456\n);\n\n// Create booking from appointment\n$booking = $service-&gt;createBookingFromAppointment($appointment);\n\n// Sync bookings from Cal.com\n$syncedCount = $service-&gt;syncBookings(\n    from: now()-&gt;subDays(7),\n    to: now()-&gt;addDays(30)\n);\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#error-handling","title":"Error Handling","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#exception-types","title":"Exception Types","text":"<ol> <li>CalcomApiException: Base exception for all API errors</li> <li>CalcomAuthenticationException: 401 authentication failures</li> <li>CalcomRateLimitException: 429 rate limit errors</li> <li>CalcomValidationException: 422 validation errors</li> </ol>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#error-handling-example","title":"Error Handling Example","text":"<pre><code>try {\n    $booking = $client-&gt;createBooking($data);\n} catch (CalcomAuthenticationException $e) {\n    // Handle authentication error\n    Log::error('Cal.com authentication failed: ' . $e-&gt;getMessage());\n} catch (CalcomValidationException $e) {\n    // Handle validation errors\n    $errors = $e-&gt;getErrorMessages();\n    Log::error('Validation failed: ' . implode(', ', $errors));\n} catch (CalcomRateLimitException $e) {\n    // Handle rate limiting\n    $retryAfter = $e-&gt;getRetryAfter();\n    Log::warning(\"Rate limited. Retry after {$retryAfter} seconds\");\n} catch (CalcomApiException $e) {\n    // Handle other API errors\n    Log::error('Cal.com API error: ' . $e-&gt;getMessage());\n}\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#caching","title":"Caching","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#cache-configuration","title":"Cache Configuration","text":"<ul> <li>Event Types: 5 minutes TTL</li> <li>Schedules: 5 minutes TTL</li> <li>Available Slots: 1 minute TTL</li> <li>Bookings: No caching (always fresh)</li> </ul>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#cache-management","title":"Cache Management","text":"<pre><code>// Cache is automatically managed by the client\n// Manual cache clearing:\nCache::tags(['calcom_slots'])-&gt;flush();\n\n// Cache warmup command:\nphp artisan calcom:cache-warmup\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#circuit-breaker","title":"Circuit Breaker","text":"<p>The circuit breaker protects against cascading failures:</p> <ul> <li>Closed State: Normal operation</li> <li>Open State: Fails fast after threshold exceeded</li> <li>Half-Open State: Limited requests to test recovery</li> </ul>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#configuration","title":"Configuration","text":"<pre><code>// Default thresholds\nconst FAILURE_THRESHOLD = 5;     // Failures before opening\nconst SUCCESS_THRESHOLD = 2;     // Successes to close\nconst TIMEOUT = 60;              // Seconds before half-open\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#health-monitoring","title":"Health Monitoring","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#health-check-endpoint","title":"Health Check Endpoint","text":"<pre><code>GET /api/health/calcom\n</code></pre> <p>Response: <pre><code>{\n    \"service\": \"cal.com\",\n    \"status\": \"healthy\",\n    \"timestamp\": \"2024-01-15T10:00:00Z\",\n    \"details\": {\n        \"response_time_ms\": 245,\n        \"circuit_breaker\": {\n            \"state\": \"closed\",\n            \"failure_count\": 0,\n            \"success_count\": 150\n        },\n        \"api_version\": \"2024-08-13\",\n        \"cache_ttls\": {\n            \"event_types_ttl\": 300,\n            \"schedules_ttl\": 300,\n            \"slots_ttl\": 60\n        }\n    }\n}\n</code></pre></p>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#metrics","title":"Metrics","text":"<pre><code>// Get client metrics\n$metrics = $client-&gt;getMetrics();\n\n// Returns:\n[\n    'circuit_breaker' =&gt; [\n        'state' =&gt; 'closed',\n        'failure_count' =&gt; 0,\n        'success_count' =&gt; 1000,\n        'last_failure_time' =&gt; null\n    ],\n    'cache' =&gt; [\n        'event_types_ttl' =&gt; 300,\n        'schedules_ttl' =&gt; 300,\n        'slots_ttl' =&gt; 60\n    ],\n    'api_version' =&gt; '2024-08-13'\n]\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#testing","title":"Testing","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#unit-tests","title":"Unit Tests","text":"<pre><code># Run Cal.com V2 client tests\nphp artisan test --filter CalcomV2ClientTest\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#integration-tests","title":"Integration Tests","text":"<pre><code># Run integration tests\nphp artisan test --filter CalcomV2ClientIntegrationTest --group integration\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#test-coverage","title":"Test Coverage","text":"<ul> <li>\u2705 All API endpoints</li> <li>\u2705 Error handling scenarios</li> <li>\u2705 Circuit breaker behavior</li> <li>\u2705 Caching functionality</li> <li>\u2705 Concurrent booking handling</li> <li>\u2705 Timezone conversions</li> <li>\u2705 Pagination support</li> </ul>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#migration-from-v1","title":"Migration from V1","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#key-differences","title":"Key Differences","text":"<ol> <li>API Version: Uses V2 endpoints exclusively</li> <li>Response Format: Responses wrapped in <code>data</code> key</li> <li>Booking Creation: Different parameter structure</li> <li>Error Responses: Standardized error format</li> </ol>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#migration-steps","title":"Migration Steps","text":"<ol> <li> <p>Update service initialization: <pre><code>// Old\n$service = new CalcomService();\n\n// New\n$service = new CalcomV2Service();\n</code></pre></p> </li> <li> <p>Update booking creation: <pre><code>// Old\n$service-&gt;createBooking($eventTypeId, $start, $end, $attendee);\n\n// New\n$service-&gt;createBookingFromAppointment($appointment);\n</code></pre></p> </li> <li> <p>Update error handling to use new exception types</p> </li> </ol>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#performance-optimization","title":"Performance Optimization","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#best-practices","title":"Best Practices","text":"<ol> <li>Use Caching: Leverage built-in caching for repeated queries</li> <li>Batch Operations: Group related API calls</li> <li>Async Processing: Use queues for non-critical operations</li> <li>Monitor Metrics: Track circuit breaker state and response times</li> </ol>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#cache-warmup","title":"Cache Warmup","text":"<pre><code># Warm up caches for all companies\nphp artisan calcom:cache-warmup\n\n# Warm up specific company\nphp artisan calcom:cache-warmup --company=1\n</code></pre>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#security","title":"Security","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#api-key-management","title":"API Key Management","text":"<ul> <li>Store API keys encrypted in database</li> <li>Use environment variables for defaults</li> <li>Rotate keys regularly</li> <li>Monitor for authentication failures</li> </ul>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#request-sanitization","title":"Request Sanitization","text":"<p>Sensitive data is automatically redacted in logs: - Email addresses - Phone numbers - Personal notes</p>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#troubleshooting","title":"Troubleshooting","text":""},{"location":"CALCOM_V2_API_DOCUMENTATION/#common-issues","title":"Common Issues","text":"<ol> <li>Authentication Failures</li> <li>Check API key validity</li> <li>Verify Cal.com account status</li> <li> <p>Check rate limits</p> </li> <li> <p>Booking Failures</p> </li> <li>Validate required fields</li> <li>Check slot availability</li> <li> <p>Verify event type configuration</p> </li> <li> <p>Circuit Breaker Open</p> </li> <li>Check Cal.com API status</li> <li>Review error logs</li> <li>Wait for timeout period</li> </ol>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#debug-mode","title":"Debug Mode","text":"<p>Enable detailed logging: <pre><code>// In CalcomV2Client\n$this-&gt;logger-&gt;setLevel('debug');\n</code></pre></p>"},{"location":"CALCOM_V2_API_DOCUMENTATION/#support","title":"Support","text":"<p>For issues or questions: 1. Check error logs in <code>storage/logs/laravel.log</code> 2. Review health check endpoint 3. Monitor metrics dashboard 4. Contact system administrator</p>"},{"location":"DASHBOARD_REDESIGN_README/","title":"Dashboard Redesign - Technical Documentation","text":""},{"location":"DASHBOARD_REDESIGN_README/#overview","title":"Overview","text":"<p>This document describes the complete redesign of the AskProAI Filament admin dashboard pages for Appointments (Termine), Calls (Anrufe), and Customers (Kunden). The redesign focuses on delivering enterprise-grade KPIs, real-time filtering, and exceptional performance.</p>"},{"location":"DASHBOARD_REDESIGN_README/#architecture","title":"Architecture","text":""},{"location":"DASHBOARD_REDESIGN_README/#component-structure","title":"Component Structure","text":"<pre><code>app/Filament/Admin/\n\u251c\u2500\u2500 Widgets/\n\u2502   \u251c\u2500\u2500 UniversalKpiWidget.php          # Base class for all KPI widgets\n\u2502   \u251c\u2500\u2500 GlobalFilterWidget.php          # Cross-widget filter synchronization\n\u2502   \u251c\u2500\u2500 AppointmentKpiWidget.php        # Appointment-specific KPIs\n\u2502   \u251c\u2500\u2500 CallKpiWidget.php               # Call-specific KPIs\n\u2502   \u251c\u2500\u2500 CustomerKpiWidget.php           # Customer-specific KPIs\n\u2502   \u251c\u2500\u2500 AppointmentTrendWidget.php      # Revenue trend chart\n\u2502   \u251c\u2500\u2500 CallDurationHistogramWidget.php # Call duration distribution\n\u2502   \u251c\u2500\u2500 CustomerFunnelWidget.php        # Conversion funnel\n\u2502   \u2514\u2500\u2500 CustomerSourceWidget.php        # Customer acquisition sources\n\u251c\u2500\u2500 Traits/\n\u2502   \u2514\u2500\u2500 HasGlobalFilters.php           # Filter state management trait\n\u2514\u2500\u2500 Resources/\n    \u251c\u2500\u2500 AppointmentResource.php         # Enhanced with dashboard widgets\n    \u251c\u2500\u2500 CallResource.php                # Enhanced with dashboard widgets\n    \u2514\u2500\u2500 CustomerResource.php            # Enhanced with dashboard widgets\n\napp/Services/Dashboard/\n\u2514\u2500\u2500 DashboardMetricsService.php        # Centralized KPI calculation service\n</code></pre>"},{"location":"DASHBOARD_REDESIGN_README/#key-design-patterns","title":"Key Design Patterns","text":""},{"location":"DASHBOARD_REDESIGN_README/#1-universal-widget-system","title":"1. Universal Widget System","text":"<p>All KPI widgets extend <code>UniversalKpiWidget</code> which provides: - Consistent formatting and styling - Error handling and graceful degradation - Trend calculation and visualization - Responsive layout support</p>"},{"location":"DASHBOARD_REDESIGN_README/#2-global-filter-synchronization","title":"2. Global Filter Synchronization","text":"<p>The <code>HasGlobalFilters</code> trait enables: - Cross-widget filter state sharing via Livewire events - Session persistence for filter preferences - Real-time updates without page refresh</p>"},{"location":"DASHBOARD_REDESIGN_README/#3-service-oriented-architecture","title":"3. Service-Oriented Architecture","text":"<p><code>DashboardMetricsService</code> centralizes: - All KPI calculations in one place - Multi-level caching strategy - Query optimization - Consistent data formatting</p>"},{"location":"DASHBOARD_REDESIGN_README/#kpis-implemented","title":"KPIs Implemented","text":""},{"location":"DASHBOARD_REDESIGN_README/#appointment-kpis","title":"Appointment KPIs","text":"<ol> <li>Revenue (Gesamt-Umsatz)</li> <li>Current period revenue with trend</li> <li>Comparison to previous period</li> <li> <p>Service-based calculation</p> </li> <li> <p>Occupancy Rate (Auslastung)</p> </li> <li>Booked vs. available time slots</li> <li>Branch and staff filtering</li> <li> <p>Real-time updates</p> </li> <li> <p>Conversion Rate (Conversion)</p> </li> <li>Calls to appointments ratio</li> <li>Funnel visualization</li> <li> <p>Period comparisons</p> </li> <li> <p>No-Show Rate</p> </li> <li>Missed appointments tracking</li> <li>Customer reliability metrics</li> <li>Prevention insights</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#call-kpis","title":"Call KPIs","text":"<ol> <li>Total Calls (Anzahl Anrufe)</li> <li>Volume tracking with trends</li> <li>Peak time analysis</li> <li> <p>Duration distribution</p> </li> <li> <p>Success Rate (Erfolgsquote)</p> </li> <li>Calls resulting in appointments</li> <li>Agent performance metrics</li> <li> <p>Conversion optimization</p> </li> <li> <p>Average Duration (\u00d8 Dauer)</p> </li> <li>Call length analysis</li> <li>Service time optimization</li> <li> <p>Quality indicators</p> </li> <li> <p>Cost Analysis (Kosten)</p> </li> <li>Per-call cost calculation</li> <li>ROI metrics</li> <li>Budget tracking</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#customer-kpis","title":"Customer KPIs","text":"<ol> <li>New Customers (Neue Kunden)</li> <li>Acquisition tracking</li> <li>Growth metrics</li> <li> <p>Source analysis</p> </li> <li> <p>Customer Lifetime Value (CLV)</p> </li> <li>Revenue per customer</li> <li>Retention metrics</li> <li> <p>Profitability analysis</p> </li> <li> <p>Returning Rate (Wiederkehrrate)</p> </li> <li>Customer loyalty metrics</li> <li>Service satisfaction indicators</li> <li> <p>Retention strategies</p> </li> <li> <p>Top Customers (Top-Kunden Anteil)</p> </li> <li>Revenue concentration</li> <li>VIP identification</li> <li>Risk assessment</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#performance-optimizations","title":"Performance Optimizations","text":""},{"location":"DASHBOARD_REDESIGN_README/#database-indexes","title":"Database Indexes","text":"<p>Created specialized indexes for dashboard queries: <pre><code>-- Appointments\nidx_appointments_revenue_calc (company_id, status, starts_at, service_id)\nidx_appointments_conversion_track (company_id, call_id, created_at)\nidx_appointments_branch_date (company_id, branch_id, starts_at)\n\n-- Calls\nidx_calls_company_date (company_id, created_at)\nidx_calls_status_duration (company_id, call_status, duration_sec)\n\n-- Customers\nidx_customers_company_phone (company_id, phone)\nidx_customers_company_created (company_id, created_at)\n</code></pre></p>"},{"location":"DASHBOARD_REDESIGN_README/#caching-strategy","title":"Caching Strategy","text":"<p>Three-tier caching approach: - 60s TTL: Live data (current day stats) - 300s TTL: Recent data (week/month stats) - 3600s TTL: Historical data (quarter/year stats)</p>"},{"location":"DASHBOARD_REDESIGN_README/#query-optimization","title":"Query Optimization","text":"<ul> <li>Eager loading for relationships</li> <li>Subquery optimization for aggregates</li> <li>Chunked processing for large datasets</li> <li>Query result caching</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#filter-system","title":"Filter System","text":""},{"location":"DASHBOARD_REDESIGN_README/#available-filters","title":"Available Filters","text":"<ol> <li>Period Selection</li> <li>Today, Yesterday</li> <li>This/Last Week</li> <li>This/Last Month</li> <li>This Quarter, This Year</li> <li> <p>Custom Date Range</p> </li> <li> <p>Dimension Filters</p> </li> <li>Branch/Location</li> <li>Staff Member</li> <li>Service Type</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#filter-persistence","title":"Filter Persistence","text":"<ul> <li>Session-based storage</li> <li>URL parameter support</li> <li>Cross-widget synchronization</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#mobile-responsiveness","title":"Mobile Responsiveness","text":""},{"location":"DASHBOARD_REDESIGN_README/#breakpoint-strategy","title":"Breakpoint Strategy","text":"<ul> <li>Mobile (&lt;640px): Single column, stacked widgets</li> <li>Tablet (640-1024px): 2-column grid</li> <li>Desktop (&gt;1024px): 3-4 column grid</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#touch-optimizations","title":"Touch Optimizations","text":"<ul> <li>Larger tap targets for filters</li> <li>Swipeable period selection</li> <li>Optimized chart interactions</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#testing","title":"Testing","text":""},{"location":"DASHBOARD_REDESIGN_README/#unit-tests","title":"Unit Tests","text":"<ul> <li><code>DashboardMetricsServiceTest</code>: Service layer testing</li> <li>KPI calculation verification</li> <li>Cache behavior testing</li> <li>Edge case handling</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#feature-tests","title":"Feature Tests","text":"<ul> <li><code>GlobalFilterSynchronizationTest</code>: Filter system testing</li> <li>Widget interaction testing</li> <li>Event broadcasting verification</li> <li>Session persistence testing</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#performance-testing","title":"Performance Testing","text":"<ul> <li><code>OptimizeDashboardPerformance</code> command</li> <li>Query analysis and optimization</li> <li>Cache warming strategies</li> <li>Index effectiveness verification</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#usage","title":"Usage","text":""},{"location":"DASHBOARD_REDESIGN_README/#basic-implementation","title":"Basic Implementation","text":"<pre><code>// In your Filament Resource\nprotected function getHeaderWidgets(): array\n{\n    return [\n        GlobalFilterWidget::class,\n        AppointmentKpiWidget::class,\n        AppointmentTrendWidget::class,\n    ];\n}\n</code></pre>"},{"location":"DASHBOARD_REDESIGN_README/#custom-kpi-widget","title":"Custom KPI Widget","text":"<pre><code>class CustomKpiWidget extends UniversalKpiWidget\n{\n    protected function getKpis(array $filters): array\n    {\n        return app(DashboardMetricsService::class)\n            -&gt;getCustomKpis($filters);\n    }\n\n    protected function getWidgetTitle(): string\n    {\n        return 'Custom KPIs';\n    }\n}\n</code></pre>"},{"location":"DASHBOARD_REDESIGN_README/#performance-monitoring","title":"Performance Monitoring","text":"<pre><code># Analyze query performance\nphp artisan dashboard:optimize --analyze\n\n# Warm up caches\nphp artisan dashboard:optimize --cache\n\n# Run tests\nphp artisan test --filter Dashboard\n</code></pre>"},{"location":"DASHBOARD_REDESIGN_README/#security-considerations","title":"Security Considerations","text":""},{"location":"DASHBOARD_REDESIGN_README/#multi-tenancy","title":"Multi-Tenancy","text":"<ul> <li>Automatic company_id scoping</li> <li>User permission checks</li> <li>Data isolation verification</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#input-validation","title":"Input Validation","text":"<ul> <li>Filter sanitization</li> <li>SQL injection prevention</li> <li>XSS protection in charts</li> </ul>"},{"location":"DASHBOARD_REDESIGN_README/#future-enhancements","title":"Future Enhancements","text":""},{"location":"DASHBOARD_REDESIGN_README/#planned-features","title":"Planned Features","text":"<ol> <li>Export Functionality</li> <li>PDF reports</li> <li>Excel exports</li> <li> <p>Scheduled reports</p> </li> <li> <p>Advanced Analytics</p> </li> <li>Predictive metrics</li> <li>Anomaly detection</li> <li> <p>Trend forecasting</p> </li> <li> <p>Customization</p> </li> <li>User-defined KPIs</li> <li>Widget arrangement</li> <li>Custom date ranges</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#performance-roadmap","title":"Performance Roadmap","text":"<ol> <li>Real-time Updates</li> <li>WebSocket integration</li> <li>Live data streaming</li> <li> <p>Push notifications</p> </li> <li> <p>Advanced Caching</p> </li> <li>Redis clustering</li> <li>Edge caching</li> <li>Predictive pre-loading</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#troubleshooting","title":"Troubleshooting","text":""},{"location":"DASHBOARD_REDESIGN_README/#common-issues","title":"Common Issues","text":""},{"location":"DASHBOARD_REDESIGN_README/#slow-performance","title":"Slow Performance","text":"<ol> <li>Check missing indexes: <code>php artisan dashboard:optimize --analyze</code></li> <li>Clear stale caches: <code>php artisan cache:clear</code></li> <li>Review query log for N+1 issues</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#filter-not-working","title":"Filter Not Working","text":"<ol> <li>Check session configuration</li> <li>Verify Livewire events are firing</li> <li>Ensure trait is properly mounted</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#missing-data","title":"Missing Data","text":"<ol> <li>Verify user has company_id</li> <li>Check tenant scoping</li> <li>Review date range filters</li> </ol>"},{"location":"DASHBOARD_REDESIGN_README/#support","title":"Support","text":"<p>For issues or questions: 1. Check logs: <code>storage/logs/laravel.log</code> 2. Run diagnostics: <code>php artisan dashboard:optimize --analyze</code> 3. Review test coverage: <code>php artisan test --coverage</code></p>"},{"location":"DATABASE_SAFETY_GUIDELINES/","title":"Database Safety Guidelines","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#overview","title":"Overview","text":"<p>Following the data loss incident of June 17, 2025, these guidelines establish mandatory practices for database operations to prevent future data loss.</p>"},{"location":"DATABASE_SAFETY_GUIDELINES/#critical-rules","title":"Critical Rules","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#1-never-drop-tables-without-verification","title":"1. NEVER Drop Tables Without Verification","text":"<ul> <li>Count records before dropping</li> <li>Check last modification dates</li> <li>Verify table is truly unused</li> <li>Document why table is being dropped</li> </ul>"},{"location":"DATABASE_SAFETY_GUIDELINES/#2-always-create-backups-before-destructive-operations","title":"2. ALWAYS Create Backups Before Destructive Operations","text":"<pre><code># Before ANY migration that drops tables or columns\nmysqldump -u root -p askproai_db | gzip &gt; /var/backups/mysql/askproai_db_$(date +%Y-%m-%d_%H-%M-%S)_pre_migration.sql.gz\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#3-use-safedestructivemigration-base-class","title":"3. Use SafeDestructiveMigration Base Class","text":"<pre><code>use App\\Database\\Migrations\\SafeDestructiveMigration;\n\nclass DropUnusedTables extends SafeDestructiveMigration\n{\n    protected function getTablesToDrop(): array\n    {\n        return ['old_table1', 'old_table2'];\n    }\n\n    protected function executeDestructiveOperation(): void\n    {\n        Schema::dropIfExists('old_table1');\n        Schema::dropIfExists('old_table2');\n    }\n}\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#migration-best-practices","title":"Migration Best Practices","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#before-creating-a-migration","title":"Before Creating a Migration","text":"<ol> <li> <p>Analyze Impact <pre><code>-- Check table usage\nSELECT COUNT(*) FROM table_name;\nSELECT MAX(updated_at) FROM table_name;\n\n-- Check foreign key dependencies\nSELECT \n    TABLE_NAME,\n    COLUMN_NAME,\n    CONSTRAINT_NAME,\n    REFERENCED_TABLE_NAME,\n    REFERENCED_COLUMN_NAME\nFROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE\nWHERE REFERENCED_TABLE_NAME = 'table_name';\n</code></pre></p> </li> <li> <p>Document Decision</p> </li> <li>Why is this change needed?</li> <li>What data will be affected?</li> <li>Is there a rollback plan?</li> </ol>"},{"location":"DATABASE_SAFETY_GUIDELINES/#safe-migration-patterns","title":"Safe Migration Patterns","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#adding-columns-safe","title":"Adding Columns (Safe)","text":"<pre><code>Schema::table('users', function (Blueprint $table) {\n    $table-&gt;string('new_column')-&gt;nullable()-&gt;after('existing_column');\n});\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#dropping-columns-caution-required","title":"Dropping Columns (Caution Required)","text":"<pre><code>// First migration: deprecate the column\nSchema::table('users', function (Blueprint $table) {\n    $table-&gt;string('old_column')-&gt;nullable()-&gt;comment('DEPRECATED: Will be removed in 30 days');\n});\n\n// After 30 days: drop the column\nSchema::table('users', function (Blueprint $table) {\n    $table-&gt;dropColumn('old_column');\n});\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#renaming-tables-safe-with-backward-compatibility","title":"Renaming Tables (Safe with Backward Compatibility)","text":"<pre><code>// Create view for backward compatibility\nSchema::rename('old_table', 'new_table');\nDB::statement('CREATE VIEW old_table AS SELECT * FROM new_table');\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#emergency-procedures","title":"Emergency Procedures","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#if-you-accidentally-drop-data","title":"If You Accidentally Drop Data","text":"<ol> <li>STOP - Don't run any more migrations</li> <li>Check Backups <pre><code>ls -lah /var/backups/mysql/askproai_db_*.sql.gz\n</code></pre></li> <li>Restore Immediately <pre><code>./scripts/emergency_database_restore.sh\n</code></pre></li> </ol>"},{"location":"DATABASE_SAFETY_GUIDELINES/#daily-backup-verification","title":"Daily Backup Verification","text":"<p>Add to crontab: <pre><code># Daily backup verification at 4 AM\n0 4 * * * /var/www/api-gateway/scripts/verify_daily_backup.sh\n</code></pre></p>"},{"location":"DATABASE_SAFETY_GUIDELINES/#testing-requirements","title":"Testing Requirements","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#local-testing","title":"Local Testing","text":"<ol> <li>Run migration on local database first</li> <li>Verify data integrity</li> <li>Test rollback procedure</li> </ol>"},{"location":"DATABASE_SAFETY_GUIDELINES/#staging-testing","title":"Staging Testing","text":"<ol> <li>Copy production data to staging (sanitized)</li> <li>Run migration</li> <li>Full application test</li> <li>Document results</li> </ol>"},{"location":"DATABASE_SAFETY_GUIDELINES/#production-deployment","title":"Production Deployment","text":"<ol> <li>Schedule during low-traffic window</li> <li>Create fresh backup</li> <li>Run migration with monitoring</li> <li>Verify application functionality</li> <li>Keep backup for 30 days</li> </ol>"},{"location":"DATABASE_SAFETY_GUIDELINES/#monitoring","title":"Monitoring","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#post-migration-checks","title":"Post-Migration Checks","text":"<pre><code>// Add to health check endpoint\npublic function checkCriticalTables()\n{\n    $criticalTables = [\n        'appointments' =&gt; 1,  // Minimum expected records\n        'customers' =&gt; 1,\n        'companies' =&gt; 1,\n        'branches' =&gt; 1,\n        'staff' =&gt; 1,\n    ];\n\n    foreach ($criticalTables as $table =&gt; $minCount) {\n        $count = DB::table($table)-&gt;count();\n        if ($count &lt; $minCount) {\n            alert(\"CRITICAL: Table {$table} has only {$count} records!\");\n        }\n    }\n}\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#automated-alerts","title":"Automated Alerts","text":"<p>Set up monitoring for: - Tables with 0 records that shouldn't be empty - Sudden drop in record counts - Failed migrations - Backup age &gt; 24 hours</p>"},{"location":"DATABASE_SAFETY_GUIDELINES/#recovery-time-objectives","title":"Recovery Time Objectives","text":"<ul> <li>Detection: &lt; 5 minutes (automated monitoring)</li> <li>Decision: &lt; 15 minutes (assess impact)</li> <li>Recovery: &lt; 30 minutes (restore from backup)</li> <li>Verification: &lt; 1 hour (full system check)</li> </ul>"},{"location":"DATABASE_SAFETY_GUIDELINES/#approval-process","title":"Approval Process","text":"<p>For any migration that: - Drops tables - Drops columns - Truncates data - Modifies primary keys</p> <p>Requires: 1. Code review by senior developer 2. Backup verification 3. Rollback plan documentation 4. Staging environment test results</p>"},{"location":"DATABASE_SAFETY_GUIDELINES/#tools-and-scripts","title":"Tools and Scripts","text":""},{"location":"DATABASE_SAFETY_GUIDELINES/#check-table-usage","title":"Check Table Usage","text":"<pre><code>php artisan db:table-usage {table_name}\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#safe-migration-generator","title":"Safe Migration Generator","text":"<pre><code>php artisan make:migration:safe {migration_name}\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#backup-before-migration","title":"Backup Before Migration","text":"<pre><code>php artisan migrate --backup\n</code></pre>"},{"location":"DATABASE_SAFETY_GUIDELINES/#contact-for-database-emergencies","title":"Contact for Database Emergencies","text":"<ul> <li>Primary DBA: root@server</li> <li>Backup Location: /var/backups/mysql/</li> <li>Recovery Scripts: /var/www/api-gateway/scripts/</li> <li>On-Call: [Phone Number]</li> </ul> <p>Remember: It's better to delay a migration than to lose data. When in doubt, don't drop out!</p>"},{"location":"DEPLOYMENT_GUIDE/","title":"AskProAI Deployment Guide","text":"<p>Version: 1.0 Date: 2025-06-18 Status: Production Ready</p>"},{"location":"DEPLOYMENT_GUIDE/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Overview</li> <li>Pre-Deployment Checklist</li> <li>Deployment Process</li> <li>Rollback Procedures</li> <li>Monitoring &amp; Verification</li> <li>Backup &amp; Recovery</li> <li>Troubleshooting</li> <li>Emergency Contacts</li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#overview","title":"Overview","text":"<p>This guide provides step-by-step instructions for deploying AskProAI to production. The deployment process is designed to be zero-downtime with automatic rollback capabilities.</p>"},{"location":"DEPLOYMENT_GUIDE/#key-features","title":"Key Features","text":"<ul> <li>Zero-downtime deployment using maintenance mode</li> <li>Automatic health checks after deployment</li> <li>Rollback capability with automated backup</li> <li>Comprehensive monitoring during and after deployment</li> <li>Automated backup system with retention policies</li> </ul>"},{"location":"DEPLOYMENT_GUIDE/#pre-deployment-checklist","title":"Pre-Deployment Checklist","text":""},{"location":"DEPLOYMENT_GUIDE/#1-run-pre-deployment-check-script","title":"1. Run Pre-Deployment Check Script","text":"<pre><code>cd /var/www/api-gateway\n./deploy/pre-deploy-check.sh\n</code></pre> <p>This script verifies: - \u2705 Environment requirements (PHP, Node, Redis, MySQL) - \u2705 Application configuration - \u2705 Database connectivity and migrations - \u2705 External service availability - \u2705 File permissions - \u2705 Security settings</p>"},{"location":"DEPLOYMENT_GUIDE/#2-manual-verifications","title":"2. Manual Verifications","text":"<ul> <li>[ ] Recent backup exists (check <code>/var/backups/askproai/</code>)</li> <li>[ ] Team is notified of deployment window</li> <li>[ ] No critical alerts in monitoring</li> <li>[ ] Recent commits are tested in staging</li> <li>[ ] Database migrations reviewed</li> <li>[ ] Rollback plan communicated</li> </ul>"},{"location":"DEPLOYMENT_GUIDE/#3-environment-variables","title":"3. Environment Variables","text":"<p>Ensure these are set in <code>.env.production</code>:</p> <pre><code>APP_ENV=production\nAPP_DEBUG=false\nAPP_URL=https://api.askproai.de\n\n# Database\nDB_CONNECTION=mysql\nDB_HOST=localhost\nDB_DATABASE=askproai\nDB_USERNAME=askproai_user\nDB_PASSWORD=&lt;secure-password&gt;\n\n# Redis\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=&lt;redis-password&gt;\n\n# Cal.com Integration\nDEFAULT_CALCOM_API_KEY=&lt;api-key&gt;\nDEFAULT_CALCOM_TEAM_SLUG=&lt;team-slug&gt;\n\n# Retell.ai Integration\nDEFAULT_RETELL_API_KEY=&lt;api-key&gt;\nDEFAULT_RETELL_AGENT_ID=&lt;agent-id&gt;\n\n# Queue Configuration\nQUEUE_CONNECTION=redis\nHORIZON_PREFIX=horizon:askproai\n</code></pre>"},{"location":"DEPLOYMENT_GUIDE/#deployment-process","title":"Deployment Process","text":""},{"location":"DEPLOYMENT_GUIDE/#step-1-connect-to-production-server","title":"Step 1: Connect to Production Server","text":"<pre><code>ssh deploy@production-server\ncd /var/www/api-gateway\n</code></pre>"},{"location":"DEPLOYMENT_GUIDE/#step-2-run-deployment-script","title":"Step 2: Run Deployment Script","text":"<pre><code>./deploy/production-deploy.sh\n</code></pre> <p>The script automatically: 1. Checks disk space and services 2. Creates backup 3. Enables maintenance mode 4. Pulls latest code 5. Installs dependencies 6. Runs migrations 7. Optimizes application 8. Restarts services 9. Runs health checks 10. Disables maintenance mode 11. Monitors for 5 minutes</p>"},{"location":"DEPLOYMENT_GUIDE/#step-3-monitor-deployment","title":"Step 3: Monitor Deployment","text":"<p>Watch the deployment output. Key indicators: - <code>[\u2713] Health check passed</code> - <code>[\u2713] Cal.com integration healthy</code> - <code>[\u2713] Queue workers running</code> - <code>[\u2713] Cache warmed up</code></p>"},{"location":"DEPLOYMENT_GUIDE/#manual-deployment-if-automated-fails","title":"Manual Deployment (If Automated Fails)","text":"<pre><code># 1. Enable maintenance mode\nphp artisan down\n\n# 2. Pull latest code\ngit pull origin main\n\n# 3. Install dependencies\ncomposer install --no-dev --optimize-autoloader\nnpm ci --production\n\n# 4. Run migrations\nphp artisan migrate --force\n\n# 5. Clear and optimize caches\nphp artisan optimize:clear\nphp artisan optimize\n\n# 6. Restart queue workers\nphp artisan horizon:terminate\nsleep 5\nphp artisan horizon\n\n# 7. Disable maintenance mode\nphp artisan up\n</code></pre>"},{"location":"DEPLOYMENT_GUIDE/#rollback-procedures","title":"Rollback Procedures","text":""},{"location":"DEPLOYMENT_GUIDE/#automatic-rollback","title":"Automatic Rollback","text":"<p>The deployment script automatically rolls back if: - Migration fails - Health check fails after deployment - Critical error during deployment</p>"},{"location":"DEPLOYMENT_GUIDE/#manual-rollback","title":"Manual Rollback","text":"<pre><code># Quick rollback to latest backup\n./deploy/rollback.sh\n\n# Rollback to specific backup\n./deploy/rollback.sh /var/backups/askproai/backup-20250618-120000.tar.gz\n</code></pre>"},{"location":"DEPLOYMENT_GUIDE/#rollback-steps","title":"Rollback Steps","text":"<ol> <li> <p>Immediate Actions <pre><code># Enable maintenance mode\nphp artisan down\n\n# Stop services\nphp artisan horizon:terminate\n</code></pre></p> </li> <li> <p>Restore from Backup <pre><code># The rollback script handles this automatically\n./deploy/rollback.sh\n</code></pre></p> </li> <li> <p>Verify Rollback <pre><code># Check application version\ngit log -1 --oneline\n\n# Run health check\ncurl http://localhost/api/health\n</code></pre></p> </li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#monitoring-verification","title":"Monitoring &amp; Verification","text":""},{"location":"DEPLOYMENT_GUIDE/#health-check-endpoints","title":"Health Check Endpoints","text":"<ol> <li>Main Health Check <pre><code>curl https://api.askproai.de/api/health\n</code></pre></li> </ol> <p>Expected response:    <pre><code>{\n  \"status\": \"healthy\",\n  \"checks\": {\n    \"database\": {\"status\": \"healthy\"},\n    \"cache\": {\"status\": \"healthy\"},\n    \"queue\": {\"status\": \"healthy\"}\n  }\n}\n</code></pre></p> <ol> <li> <p>Cal.com Integration Health <pre><code>curl https://api.askproai.de/api/health/calcom\n</code></pre></p> </li> <li> <p>Metrics Endpoint <pre><code>curl https://api.askproai.de/api/metrics\n</code></pre></p> </li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#post-deployment-verification","title":"Post-Deployment Verification","text":"<ol> <li>Test Critical Flows</li> <li>Make test phone call</li> <li>Verify appointment creation</li> <li>Check webhook processing</li> <li> <p>Confirm email delivery</p> </li> <li> <p>Monitor Logs <pre><code># Application logs\ntail -f storage/logs/laravel.log\n\n# Queue logs\nphp artisan horizon:status\n\n# Nginx logs\ntail -f /var/log/nginx/access.log\n</code></pre></p> </li> <li> <p>Check Metrics</p> </li> <li>Response times &lt; 200ms</li> <li>Error rate &lt; 1%</li> <li>Queue size &lt; 100</li> <li>Memory usage stable</li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#backup-recovery","title":"Backup &amp; Recovery","text":""},{"location":"DEPLOYMENT_GUIDE/#automated-backups","title":"Automated Backups","text":"<p>Backups run automatically via cron: - Daily: 2:00 AM - Weekly: Sunday 3:00 AM - Monthly: 1st day 4:00 AM</p>"},{"location":"DEPLOYMENT_GUIDE/#manual-backup","title":"Manual Backup","text":"<pre><code>./deploy/backup-automation.sh daily\n</code></pre>"},{"location":"DEPLOYMENT_GUIDE/#backup-contents","title":"Backup Contents","text":"<ul> <li>Database dump (compressed)</li> <li>Application files (excluding vendor/node_modules)</li> <li>Environment configuration</li> <li>Backup manifest with checksums</li> </ul>"},{"location":"DEPLOYMENT_GUIDE/#recovery-process","title":"Recovery Process","text":"<ol> <li> <p>List Available Backups <pre><code>ls -la /var/backups/askproai/\n</code></pre></p> </li> <li> <p>Verify Backup Integrity <pre><code>gunzip -t /var/backups/askproai/db-daily-*.sql.gz\ntar -tzf /var/backups/askproai/app-daily-*.tar.gz\n</code></pre></p> </li> <li> <p>Restore Database <pre><code>gunzip &lt; backup.sql.gz | mysql -u root -p askproai\n</code></pre></p> </li> <li> <p>Restore Application <pre><code>cd /\ntar -xzf /var/backups/askproai/app-daily-*.tar.gz\n</code></pre></p> </li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#troubleshooting","title":"Troubleshooting","text":""},{"location":"DEPLOYMENT_GUIDE/#common-issues","title":"Common Issues","text":"<ol> <li> <p>Migration Fails <pre><code># Check migration status\nphp artisan migrate:status\n\n# Rollback last batch\nphp artisan migrate:rollback\n</code></pre></p> </li> <li> <p>Queue Workers Not Starting <pre><code># Check Horizon status\nphp artisan horizon:status\n\n# Clear failed jobs\nphp artisan queue:flush\n\n# Restart manually\nphp artisan horizon\n</code></pre></p> </li> <li> <p>Cache Issues <pre><code># Clear all caches\nphp artisan optimize:clear\n\n# Rebuild caches\nphp artisan optimize\n</code></pre></p> </li> <li> <p>Permission Issues <pre><code># Fix permissions\nchown -R deploy:www-data /var/www/api-gateway\nfind storage -type d -exec chmod 775 {} \\;\nfind storage -type f -exec chmod 664 {} \\;\n</code></pre></p> </li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#debug-mode","title":"Debug Mode","text":"<p>For emergency debugging: <pre><code># Temporarily enable debug mode\nAPP_DEBUG=true php artisan serve\n</code></pre></p> <p>Warning: Never leave debug mode enabled in production!</p>"},{"location":"DEPLOYMENT_GUIDE/#log-locations","title":"Log Locations","text":"<ul> <li>Application: <code>/var/www/api-gateway/storage/logs/</code></li> <li>Nginx: <code>/var/log/nginx/</code></li> <li>PHP-FPM: <code>/var/log/php8.2-fpm.log</code></li> <li>MySQL: <code>/var/log/mysql/error.log</code></li> <li>Redis: <code>/var/log/redis/redis-server.log</code></li> </ul>"},{"location":"DEPLOYMENT_GUIDE/#emergency-contacts","title":"Emergency Contacts","text":""},{"location":"DEPLOYMENT_GUIDE/#escalation-path","title":"Escalation Path","text":"<ol> <li>Level 1 - DevOps Team</li> <li>Primary: [DevOps Lead]</li> <li>Secondary: [DevOps Engineer]</li> <li> <p>Response Time: 15 minutes</p> </li> <li> <p>Level 2 - Development Team</p> </li> <li>Primary: [Tech Lead]</li> <li>Secondary: [Senior Developer]</li> <li> <p>Response Time: 30 minutes</p> </li> <li> <p>Level 3 - Management</p> </li> <li>CTO: [CTO Contact]</li> <li>Response Time: 1 hour</li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#external-services","title":"External Services","text":"<ul> <li>Cal.com Support: support@cal.com</li> <li>Retell.ai Support: support@retellai.com</li> <li>Hosting Provider: [Provider emergency line]</li> </ul>"},{"location":"DEPLOYMENT_GUIDE/#best-practices","title":"Best Practices","text":"<ol> <li>Always deploy during low-traffic periods</li> <li>Test deployment in staging first</li> <li>Keep deployment windows under 30 minutes</li> <li>Monitor for at least 1 hour post-deployment</li> <li>Document any issues or changes</li> <li>Update this guide with lessons learned</li> </ol>"},{"location":"DEPLOYMENT_GUIDE/#deployment-schedule","title":"Deployment Schedule","text":"<p>Recommended deployment windows: - Regular Updates: Tuesday/Thursday 2:00-4:00 AM CET - Emergency Fixes: As needed with approval - Major Releases: Saturday 2:00-6:00 AM CET</p> <p>Last Updated: 2025-06-18 Maintained by: DevOps Team Review Cycle: Monthly</p>"},{"location":"ENHANCED_BOOKING_SERVICE/","title":"Enhanced Booking Service Documentation","text":""},{"location":"ENHANCED_BOOKING_SERVICE/#overview","title":"Overview","text":"<p>The <code>EnhancedBookingService</code> is a robust, production-ready booking system that implements the patterns specified in TECHNICAL_SPECIFICATION_V2_FINAL.md. It provides:</p> <ul> <li>Race condition prevention using TimeSlotLockManager</li> <li>Circuit breaker pattern for external API calls</li> <li>Comprehensive logging with correlation IDs</li> <li>Async processing for notifications and calendar sync</li> <li>Graceful degradation when external services fail</li> <li>Structured result objects for consistent API responses</li> </ul>"},{"location":"ENHANCED_BOOKING_SERVICE/#key-features","title":"Key Features","text":""},{"location":"ENHANCED_BOOKING_SERVICE/#1-time-slot-locking","title":"1. Time Slot Locking","text":"<p>Prevents double bookings by acquiring exclusive locks on time slots before creating appointments.</p>"},{"location":"ENHANCED_BOOKING_SERVICE/#2-circuit-breaker-protection","title":"2. Circuit Breaker Protection","text":"<p>Protects against cascading failures when Cal.com or other external services are down.</p>"},{"location":"ENHANCED_BOOKING_SERVICE/#3-structured-logging","title":"3. Structured Logging","text":"<p>Every operation is logged with correlation IDs for complete traceability.</p>"},{"location":"ENHANCED_BOOKING_SERVICE/#4-async-processing","title":"4. Async Processing","text":"<ul> <li>Calendar sync happens asynchronously with retry logic</li> <li>Notifications are sent via queued jobs</li> <li>Failed operations are automatically retried</li> </ul>"},{"location":"ENHANCED_BOOKING_SERVICE/#5-transaction-safety","title":"5. Transaction Safety","text":"<p>All database operations are wrapped in transactions with proper rollback handling.</p>"},{"location":"ENHANCED_BOOKING_SERVICE/#usage","title":"Usage","text":""},{"location":"ENHANCED_BOOKING_SERVICE/#basic-appointment-creation","title":"Basic Appointment Creation","text":"<pre><code>use App\\Services\\Booking\\EnhancedBookingService;\n\n$bookingService = app(EnhancedBookingService::class);\n\n$result = $bookingService-&gt;createAppointment([\n    'staff_id' =&gt; 'uuid-here',\n    'service_id' =&gt; 123,\n    'start_time' =&gt; '2025-06-20 10:00:00',\n    'customer' =&gt; [\n        'name' =&gt; 'John Doe',\n        'phone' =&gt; '+491234567890',\n        'email' =&gt; 'john@example.com',\n        'company_id' =&gt; 'company-uuid',\n    ],\n    'source' =&gt; 'phone',\n    'notes' =&gt; 'Customer requested morning appointment',\n]);\n\nif ($result-&gt;isSuccess()) {\n    $appointment = $result-&gt;getAppointment();\n    echo \"Appointment booked: \" . $appointment-&gt;id;\n} else {\n    echo \"Booking failed: \" . $result-&gt;getMessage();\n    echo \"Error code: \" . $result-&gt;getErrorCode();\n}\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#booking-from-phone-call","title":"Booking from Phone Call","text":"<pre><code>$result = $bookingService-&gt;bookFromPhoneCall([\n    'datum' =&gt; '20.06.2025',\n    'uhrzeit' =&gt; '14:30',\n    'name' =&gt; 'Hans M\u00fcller',\n    'telefonnummer' =&gt; '+491234567890',\n    'email' =&gt; 'hans@mueller.de',\n    'dienstleistung' =&gt; 'Haarschnitt',\n    'mitarbeiter_wunsch' =&gt; 'Maria',\n]);\n\n// Check for warnings (e.g., calendar sync pending)\nif ($result-&gt;hasWarnings()) {\n    foreach ($result-&gt;getWarnings() as $warning) {\n        echo \"Warning: \" . $warning;\n    }\n}\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#api-controller-example","title":"API Controller Example","text":"<pre><code>class BookingController extends Controller\n{\n    public function store(Request $request, EnhancedBookingService $bookingService)\n    {\n        $validated = $request-&gt;validate([\n            'staff_id' =&gt; 'required|exists:staff,id',\n            'service_id' =&gt; 'required|exists:services,id',\n            'start_time' =&gt; 'required|date|after:now',\n            'customer.name' =&gt; 'required|string',\n            'customer.phone' =&gt; 'required|string',\n        ]);\n\n        $result = $bookingService-&gt;createAppointment($validated);\n\n        return response()-&gt;json(\n            $result-&gt;toArray(),\n            $result-&gt;getStatusCode()\n        );\n    }\n}\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#configuration","title":"Configuration","text":""},{"location":"ENHANCED_BOOKING_SERVICE/#environment-variables","title":"Environment Variables","text":"<pre><code># Circuit Breaker Settings\nCIRCUIT_BREAKER_FAILURE_THRESHOLD=5\nCIRCUIT_BREAKER_SUCCESS_THRESHOLD=2\nCIRCUIT_BREAKER_TIMEOUT=60\n\n# Service-specific Circuit Breakers\nCALCOM_CIRCUIT_BREAKER_THRESHOLD=3\nCALCOM_CIRCUIT_BREAKER_TIMEOUT=30\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#service-provider-registration","title":"Service Provider Registration","text":"<p>Add to <code>config/app.php</code>:</p> <pre><code>'providers' =&gt; [\n    // ...\n    App\\Providers\\EnhancedBookingServiceProvider::class,\n],\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#database-migrations","title":"Database Migrations","text":"<p>Run the following migrations:</p> <pre><code>php artisan migrate --path=database/migrations/2025_06_17_create_booking_flow_logs_table.php\nphp artisan migrate --path=database/migrations/2025_06_17_create_notification_logs_table.php\nphp artisan migrate --path=database/migrations/2025_06_17_create_circuit_breaker_metrics_table.php\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#queue-configuration","title":"Queue Configuration","text":"<p>The service uses different queues for optimal processing:</p> <ul> <li><code>calendar-sync</code> - For Cal.com synchronization</li> <li><code>notifications</code> - For sending emails/SMS</li> <li><code>webhooks</code> - For webhook processing</li> </ul> <p>Configure in <code>config/queue.php</code> or use Horizon.</p>"},{"location":"ENHANCED_BOOKING_SERVICE/#monitoring","title":"Monitoring","text":""},{"location":"ENHANCED_BOOKING_SERVICE/#circuit-breaker-status","title":"Circuit Breaker Status","text":"<pre><code>use App\\Services\\CircuitBreaker\\CircuitBreaker;\n\n$status = CircuitBreaker::getStatus();\n// Returns:\n// [\n//     'calcom' =&gt; ['state' =&gt; 'closed', 'failures' =&gt; 0],\n//     'retell' =&gt; ['state' =&gt; 'open', 'failures' =&gt; 5],\n// ]\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#booking-flow-logs","title":"Booking Flow Logs","text":"<p>Query the <code>booking_flow_logs</code> table to trace any booking:</p> <pre><code>SELECT * FROM booking_flow_logs \nWHERE correlation_id = 'uuid-here'\nORDER BY created_at;\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#failed-appointments","title":"Failed Appointments","text":"<pre><code>SELECT a.*, blf.context\nFROM appointments a\nJOIN booking_flow_logs blf ON a.id = blf.appointment_id\nWHERE a.metadata-&gt;&gt;'calendar_sync_failed' = 'true'\nORDER BY a.created_at DESC;\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#error-handling","title":"Error Handling","text":"<p>The service returns structured <code>AppointmentResult</code> objects with specific error codes:</p> <ul> <li><code>slot_unavailable</code> - Time slot is already booked</li> <li><code>invalid_data</code> - Validation error</li> <li><code>missing_required_field</code> - Required data missing</li> <li><code>service_unavailable</code> - External service down</li> <li><code>general_error</code> - Unexpected error</li> </ul>"},{"location":"ENHANCED_BOOKING_SERVICE/#testing","title":"Testing","text":"<p>Run the test suite:</p> <pre><code>php artisan test --filter EnhancedBookingServiceTest\n</code></pre>"},{"location":"ENHANCED_BOOKING_SERVICE/#troubleshooting","title":"Troubleshooting","text":""},{"location":"ENHANCED_BOOKING_SERVICE/#calcom-sync-failures","title":"Cal.com Sync Failures","text":"<ol> <li>Check circuit breaker status</li> <li>Review <code>api_call_logs</code> table for error details</li> <li>Check <code>appointments</code> metadata for sync status</li> <li>Monitor the <code>calendar-sync</code> queue</li> </ol>"},{"location":"ENHANCED_BOOKING_SERVICE/#race-conditions","title":"Race Conditions","text":"<ol> <li>Check <code>appointment_locks</code> table for active locks</li> <li>Review correlation IDs in logs</li> <li>Ensure lock timeout is appropriate for your use case</li> </ol>"},{"location":"ENHANCED_BOOKING_SERVICE/#performance-issues","title":"Performance Issues","text":"<ol> <li>Monitor queue processing times</li> <li>Check database query performance</li> <li>Review circuit breaker metrics</li> <li>Ensure proper indexes exist</li> </ol>"},{"location":"KNOWLEDGE_MCP_SERVER/","title":"Knowledge MCP Server Documentation","text":""},{"location":"KNOWLEDGE_MCP_SERVER/#overview","title":"Overview","text":"<p>The <code>KnowledgeMCPServer</code> provides a comprehensive knowledge management system for the AskProAI platform. It enables companies to maintain their own knowledge base, which can be used by AI agents to provide accurate, company-specific responses to customer inquiries.</p>"},{"location":"KNOWLEDGE_MCP_SERVER/#features","title":"Features","text":""},{"location":"KNOWLEDGE_MCP_SERVER/#1-multi-tenant-knowledge-management","title":"1. Multi-Tenant Knowledge Management","text":"<ul> <li>Each company has its own isolated knowledge base</li> <li>Documents are automatically filtered by <code>company_id</code></li> <li>Support for company-specific customization</li> </ul>"},{"location":"KNOWLEDGE_MCP_SERVER/#2-industry-templates","title":"2. Industry Templates","text":"<p>Pre-configured templates for different industries: - Medical: Appointment booking guides, FAQs - Beauty: Service descriptions, treatment information - Veterinary: Pet care instructions, appointment guidelines - Legal: Consultation information, fee structures</p>"},{"location":"KNOWLEDGE_MCP_SERVER/#3-document-versioning","title":"3. Document Versioning","text":"<ul> <li>Automatic version tracking for all document changes</li> <li>Complete history of modifications</li> <li>Rollback capabilities (future enhancement)</li> </ul>"},{"location":"KNOWLEDGE_MCP_SERVER/#4-ai-context-generation","title":"4. AI Context Generation","text":"<ul> <li>Automatically selects relevant documents for AI conversations</li> <li>Combines company-specific and industry-standard knowledge</li> <li>Optimized context length for efficient AI processing</li> </ul>"},{"location":"KNOWLEDGE_MCP_SERVER/#5-full-text-search","title":"5. Full-Text Search","text":"<ul> <li>MySQL full-text search capabilities</li> <li>Relevance scoring</li> <li>Search highlighting</li> <li>Analytics tracking</li> </ul>"},{"location":"KNOWLEDGE_MCP_SERVER/#6-caching-layer","title":"6. Caching Layer","text":"<ul> <li>Redis-based caching for performance</li> <li>Configurable TTL (default: 1 hour)</li> <li>Automatic cache invalidation on updates</li> </ul>"},{"location":"KNOWLEDGE_MCP_SERVER/#available-methods","title":"Available Methods","text":""},{"location":"KNOWLEDGE_MCP_SERVER/#getcompanyknowledgearray-params","title":"<code>getCompanyKnowledge(array $params)</code>","text":"<p>Retrieves all knowledge documents for a specific company.</p> <p>Parameters: - <code>company_id</code> (required): The company ID - <code>category</code>: Filter by category slug - <code>status</code>: Document status (default: 'published') - <code>limit</code>: Maximum documents to return (default: 20, max: 100) - <code>offset</code>: Pagination offset</p> <p>Example: <pre><code>$result = $mcp-&gt;getCompanyKnowledge([\n    'company_id' =&gt; 1,\n    'category' =&gt; 'appointments',\n    'limit' =&gt; 10\n]);\n</code></pre></p>"},{"location":"KNOWLEDGE_MCP_SERVER/#searchknowledgearray-params","title":"<code>searchKnowledge(array $params)</code>","text":"<p>Search across knowledge documents using full-text search.</p> <p>Parameters: - <code>query</code> (required): Search query (min 3 characters) - <code>company_id</code>: Filter by company - <code>categories</code>: Array of category slugs - <code>tags</code>: Array of tag slugs - <code>limit</code>: Maximum results (default: 20, max: 50)</p> <p>Example: <pre><code>$result = $mcp-&gt;searchKnowledge([\n    'query' =&gt; 'Terminvereinbarung',\n    'company_id' =&gt; 1,\n    'tags' =&gt; ['appointments', 'booking']\n]);\n</code></pre></p>"},{"location":"KNOWLEDGE_MCP_SERVER/#updateknowledgearray-params","title":"<code>updateKnowledge(array $params)</code>","text":"<p>Update an existing knowledge document.</p> <p>Parameters: - <code>document_id</code> (required): Document to update - <code>company_id</code> (required): Company ID for verification - <code>user_id</code>: User making the update - <code>title</code>: New title - <code>content</code>: New content - <code>excerpt</code>: New excerpt - <code>status</code>: New status - <code>tags</code>: Array of tag names</p> <p>Example: <pre><code>$result = $mcp-&gt;updateKnowledge([\n    'document_id' =&gt; 123,\n    'company_id' =&gt; 1,\n    'user_id' =&gt; 5,\n    'content' =&gt; 'Updated content here...',\n    'tags' =&gt; ['updated', 'important']\n]);\n</code></pre></p>"},{"location":"KNOWLEDGE_MCP_SERVER/#getcontextforaiarray-params","title":"<code>getContextForAI(array $params)</code>","text":"<p>Generate optimized context for AI conversations.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>context</code>: Current conversation context - <code>industry</code>: Industry type for template selection - <code>max_documents</code>: Maximum documents to include (default: 5, max: 10)</p> <p>Example: <pre><code>$result = $mcp-&gt;getContextForAI([\n    'company_id' =&gt; 1,\n    'context' =&gt; 'Customer wants to book appointment',\n    'industry' =&gt; 'medical',\n    'max_documents' =&gt; 3\n]);\n</code></pre></p>"},{"location":"KNOWLEDGE_MCP_SERVER/#getcategoryknowledgearray-params","title":"<code>getCategoryKnowledge(array $params)</code>","text":"<p>Get all documents in a specific category.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>category_slug</code> (required): Category slug - <code>include_subcategories</code>: Include documents from subcategories (default: true)</p> <p>Example: <pre><code>$result = $mcp-&gt;getCategoryKnowledge([\n    'company_id' =&gt; 1,\n    'category_slug' =&gt; 'services',\n    'include_subcategories' =&gt; true\n]);\n</code></pre></p>"},{"location":"KNOWLEDGE_MCP_SERVER/#createfromtemplatearray-params","title":"<code>createFromTemplate(array $params)</code>","text":"<p>Create a new document from an industry template.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>template_id</code>: Specific template ID - <code>industry</code>: Industry type (if not using template_id) - <code>custom_data</code>: Custom values for personalization</p> <p>Example: <pre><code>$result = $mcp-&gt;createFromTemplate([\n    'company_id' =&gt; 1,\n    'industry' =&gt; 'medical',\n    'custom_data' =&gt; [\n        'title' =&gt; 'Our Appointment Process',\n        'category_id' =&gt; 5\n    ]\n]);\n</code></pre></p>"},{"location":"KNOWLEDGE_MCP_SERVER/#getstatisticsarray-params","title":"<code>getStatistics(array $params)</code>","text":"<p>Get comprehensive statistics about knowledge usage.</p> <p>Parameters: - <code>company_id</code> (required): Company ID - <code>period</code>: Time period ('7days', '30days', '90days', 'year')</p> <p>Example: <pre><code>$result = $mcp-&gt;getStatistics([\n    'company_id' =&gt; 1,\n    'period' =&gt; '30days'\n]);\n</code></pre></p>"},{"location":"KNOWLEDGE_MCP_SERVER/#database-schema","title":"Database Schema","text":""},{"location":"KNOWLEDGE_MCP_SERVER/#knowledge_documents","title":"knowledge_documents","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>company_id</code>: Tenant identifier</li> <li><code>title</code>: Document title</li> <li><code>slug</code>: URL-friendly identifier</li> <li><code>content</code>: Processed content (HTML)</li> <li><code>raw_content</code>: Original content (Markdown)</li> <li><code>excerpt</code>: Short description</li> <li><code>category_id</code>: Category reference</li> <li><code>status</code>: draft/published/archived</li> <li><code>order</code>: Display order</li> <li><code>metadata</code>: JSON additional data</li> <li><code>view_count</code>: Number of views</li> <li><code>helpful_count</code>: Positive feedback count</li> <li><code>not_helpful_count</code>: Negative feedback count</li> </ul>"},{"location":"KNOWLEDGE_MCP_SERVER/#knowledge_versions","title":"knowledge_versions","text":"<ul> <li><code>id</code>: Primary key</li> <li><code>document_id</code>: Reference to document</li> <li><code>version_number</code>: Sequential version</li> <li><code>title</code>: Title at time of version</li> <li><code>content</code>: Content at time of version</li> <li><code>created_by</code>: User who created version</li> <li><code>change_summary</code>: Description of changes</li> </ul>"},{"location":"KNOWLEDGE_MCP_SERVER/#configuration","title":"Configuration","text":"<p>Add to <code>config/knowledge.php</code>:</p> <pre><code>return [\n    'cache' =&gt; [\n        'ttl' =&gt; 3600, // 1 hour\n        'prefix' =&gt; 'mcp:knowledge'\n    ],\n    'search' =&gt; [\n        'min_length' =&gt; 3,\n        'max_results' =&gt; 50\n    ],\n    'ai' =&gt; [\n        'max_context_documents' =&gt; 10,\n        'max_context_length' =&gt; 4000\n    ]\n];\n</code></pre>"},{"location":"KNOWLEDGE_MCP_SERVER/#usage-in-retell-ai-integration","title":"Usage in Retell AI Integration","text":"<p>The Knowledge MCP Server can be integrated with Retell AI to provide context-aware responses:</p> <pre><code>// In your Retell webhook handler\n$knowledgeMCP = new KnowledgeMCPServer();\n\n// Get AI context based on customer query\n$context = $knowledgeMCP-&gt;getContextForAI([\n    'company_id' =&gt; $company-&gt;id,\n    'context' =&gt; $customerQuery,\n    'industry' =&gt; $company-&gt;industry\n]);\n\n// Pass context to Retell AI\n$retellResponse = $retellService-&gt;generateResponse([\n    'query' =&gt; $customerQuery,\n    'context' =&gt; $context['documents'],\n    'company_info' =&gt; $context['company_context']\n]);\n</code></pre>"},{"location":"KNOWLEDGE_MCP_SERVER/#best-practices","title":"Best Practices","text":"<ol> <li>Document Organization</li> <li>Use clear, descriptive titles</li> <li>Assign appropriate categories</li> <li>Tag with relevant keywords</li> <li> <p>Keep content concise and focused</p> </li> <li> <p>AI Optimization</p> </li> <li>Tag documents with 'ai-context' for AI priority</li> <li>Use structured content (headings, lists)</li> <li>Include common questions and answers</li> <li> <p>Keep critical information at the beginning</p> </li> <li> <p>Performance</p> </li> <li>Documents are cached for 1 hour</li> <li>Use pagination for large result sets</li> <li> <p>Consider indexing frequently searched fields</p> </li> <li> <p>Multi-Tenancy</p> </li> <li>Always include company_id in queries</li> <li>Verify company ownership before updates</li> <li>Use tenant-specific categories and tags</li> </ol>"},{"location":"KNOWLEDGE_MCP_SERVER/#testing","title":"Testing","text":"<p>Run the test script to verify functionality:</p> <pre><code>php test-knowledge-mcp.php\n</code></pre> <p>This will: - Create sample documents from templates - Test search functionality - Demonstrate AI context generation - Show statistics capabilities</p>"},{"location":"KNOWLEDGE_MCP_SERVER/#future-enhancements","title":"Future Enhancements","text":"<ol> <li>Markdown Processing</li> <li>Convert Markdown to HTML</li> <li>Syntax highlighting for code blocks</li> <li> <p>Table of contents generation</p> </li> <li> <p>Advanced Search</p> </li> <li>Elasticsearch integration</li> <li>Fuzzy matching</li> <li> <p>Synonym support</p> </li> <li> <p>Collaboration</p> </li> <li>Document comments</li> <li>Change approval workflow</li> <li> <p>Team notifications</p> </li> <li> <p>Analytics</p> </li> <li>Detailed usage reports</li> <li>Search term analysis</li> <li>Content gap identification</li> </ol>"},{"location":"MCP_COMPLETE_OVERVIEW/","title":"\ud83d\ude80 AskProAI MCP System - Komplette \u00dcbersicht","text":""},{"location":"MCP_COMPLETE_OVERVIEW/#was-sind-mcps-und-warum-brauchen-wir-sie","title":"\ud83d\udccb Was sind MCPs und warum brauchen wir sie?","text":"<p>MCP (Model Context Protocol) erm\u00f6glicht es Claude, direkt mit Ihrer Anwendung zu kommunizieren. Statt manuell Logs zu durchsuchen oder SQL-Queries zu schreiben, k\u00f6nnen Sie Claude einfach fragen: \"Warum ist die Buchung fehlgeschlagen?\"</p>"},{"location":"MCP_COMPLETE_OVERVIEW/#verfugbare-mcp-server","title":"\ud83c\udfaf Verf\u00fcgbare MCP Server","text":""},{"location":"MCP_COMPLETE_OVERVIEW/#1-database-mcp","title":"1. Database MCP \ud83d\uddc4\ufe0f","text":"<p>Zweck: Datenbank-Analyse ohne SQL-Kenntnisse</p> <p>Claude kann f\u00fcr Sie: - \"Zeige alle fehlgeschlagenen Termine heute\" - \"Wie viele Kunden haben wir in Berlin?\" - \"Suche nach Kunde mit Telefonnummer 0170...\"</p> <p>Endpoints: - <code>GET /api/mcp/database/schema</code> - Datenbankstruktur - <code>POST /api/mcp/database/query</code> - SQL ausf\u00fchren - <code>POST /api/mcp/database/search</code> - Textsuche - <code>GET /api/mcp/database/failed-appointments</code> - Fehlerhafte Termine - <code>GET /api/mcp/database/call-stats</code> - Anrufstatistiken</p>"},{"location":"MCP_COMPLETE_OVERVIEW/#2-calcom-mcp","title":"2. Cal.com MCP \ud83d\udcc5","text":"<p>Zweck: Kalender-System verwalten</p> <p>Claude kann f\u00fcr Sie: - \"Synchronisiere alle Event Types\" - \"Welche Termine sind morgen frei?\" - \"Zeige mir die Buchungen dieser Woche\" - \"Welcher Mitarbeiter kann welchen Service?\"</p> <p>Endpoints: - <code>GET /api/mcp/calcom/event-types</code> - Event Types anzeigen - <code>POST /api/mcp/calcom/availability</code> - Verf\u00fcgbarkeit pr\u00fcfen - <code>GET /api/mcp/calcom/bookings</code> - Buchungen abrufen - <code>POST /api/mcp/calcom/sync</code> - Synchronisieren - <code>GET /api/mcp/calcom/test/{id}</code> - Verbindung testen</p>"},{"location":"MCP_COMPLETE_OVERVIEW/#3-retellai-mcp","title":"3. Retell.ai MCP \ud83d\udcde","text":"<p>Zweck: Telefon-AI System \u00fcberwachen</p> <p>Claude kann f\u00fcr Sie: - \"Wie viele Anrufe hatten wir heute?\" - \"Zeige Details zum letzten Anruf\" - \"Welche Telefonnummern sind aktiv?\" - \"Analysiere die Anrufqualit\u00e4t\"</p> <p>Endpoints: - <code>GET /api/mcp/retell/agent/{id}</code> - Agent-Details - <code>GET /api/mcp/retell/call-stats</code> - Anrufstatistiken - <code>GET /api/mcp/retell/recent-calls</code> - Letzte Anrufe - <code>GET /api/mcp/retell/phone-numbers/{id}</code> - Telefonnummern</p>"},{"location":"MCP_COMPLETE_OVERVIEW/#4-sentry-mcp","title":"4. Sentry MCP \ud83d\udc1b","text":"<p>Zweck: Fehler analysieren und beheben</p> <p>Claude kann f\u00fcr Sie: - \"Welche Fehler treten h\u00e4ufig auf?\" - \"Zeige mir den Stack Trace f\u00fcr Fehler XYZ\" - \"Gibt es Performance-Probleme?\"</p> <p>Endpoints: - <code>GET /api/mcp/sentry/issues</code> - Aktuelle Fehler - <code>GET /api/mcp/sentry/issues/{id}</code> - Fehlerdetails - <code>GET /api/mcp/sentry/performance</code> - Performance-Daten</p>"},{"location":"MCP_COMPLETE_OVERVIEW/#5-queue-mcp","title":"5. Queue MCP \ud83d\udccb","text":"<p>Zweck: Queue-System und Jobs \u00fcberwachen</p> <p>Claude kann f\u00fcr Sie: - \"Wie viele Jobs sind fehlgeschlagen?\" - \"Zeige mir die letzten Webhook-Jobs\" - \"Warum ist Job XYZ fehlgeschlagen?\" - \"Wie ist die Queue-Performance?\" - \"Starte fehlgeschlagenen Job neu\"</p> <p>Endpoints: - <code>GET /api/mcp/queue/overview</code> - Queue-\u00dcbersicht - <code>GET /api/mcp/queue/failed-jobs</code> - Fehlgeschlagene Jobs - <code>GET /api/mcp/queue/recent-jobs</code> - Letzte Jobs - <code>GET /api/mcp/queue/job/{id}</code> - Job-Details - <code>POST /api/mcp/queue/job/{id}/retry</code> - Job neu starten - <code>GET /api/mcp/queue/metrics</code> - Performance-Metriken - <code>GET /api/mcp/queue/workers</code> - Worker-Status - <code>POST /api/mcp/queue/search</code> - Jobs suchen</p>"},{"location":"MCP_COMPLETE_OVERVIEW/#6-laravel-loop","title":"6. Laravel Loop \ud83d\udd04","text":"<p>Zweck: Direkte Laravel-Kontrolle</p> <p>Claude kann f\u00fcr Sie: - \"F\u00fchre php artisan queue:monitor aus\" - \"Zeige alle Routes\" - \"L\u00f6sche den Cache\" - \"Welche Jobs sind in der Queue?\"</p>"},{"location":"MCP_COMPLETE_OVERVIEW/#typische-anwendungsfalle","title":"\ud83c\udfa8 Typische Anwendungsf\u00e4lle","text":""},{"location":"MCP_COMPLETE_OVERVIEW/#fehlersuche-bei-gescheiterten-buchungen","title":"\ud83d\udd0d Fehlersuche bei gescheiterten Buchungen","text":"<pre><code>Sie: \"Claude, warum ist die Buchung f\u00fcr Kunde Schmidt heute fehlgeschlagen?\"\n\nClaude nutzt automatisch:\n1. Database MCP \u2192 Sucht nach Kunde Schmidt\n2. Database MCP \u2192 Findet fehlerhafte Appointments\n3. Retell MCP \u2192 Pr\u00fcft zugeh\u00f6rige Anrufe\n4. Sentry MCP \u2192 Sucht nach Fehlern im Zeitraum\n5. Cal.com MCP \u2192 Pr\u00fcft Kalenderstatus\n\nAntwort: \"Die Buchung ist fehlgeschlagen, weil...\"\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#taglicher-status-check","title":"\ud83d\udcca T\u00e4glicher Status-Check","text":"<pre><code>Sie: \"Claude, gib mir einen \u00dcberblick \u00fcber heute\"\n\nClaude nutzt automatisch:\n1. Database MCP \u2192 Appointments &amp; Calls heute\n2. Retell MCP \u2192 Anrufstatistiken\n3. Cal.com MCP \u2192 Buchungsstatus\n4. Sentry MCP \u2192 Neue Fehler\n\nAntwort: \"Heute: 47 Anrufe, 23 Buchungen, 2 Fehler...\"\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#system-wartung","title":"\ud83d\udee0\ufe0f System-Wartung","text":"<pre><code>Sie: \"Claude, optimiere das System\"\n\nClaude nutzt automatisch:\n1. Laravel Loop \u2192 Cache leeren\n2. Queue MCP \u2192 Queue-Status und Failed Jobs pr\u00fcfen\n3. Database MCP \u2192 Langsame Queries finden\n4. Sentry MCP \u2192 Performance-Bottlenecks\n5. Queue MCP \u2192 Worker-Status \u00fcberpr\u00fcfen\n\nAntwort: \"Optimierungen durchgef\u00fchrt: ...\"\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#webhook-probleme-debuggen","title":"\ud83d\udd04 Webhook-Probleme debuggen","text":"<pre><code>Sie: \"Claude, warum werden Webhooks nicht verarbeitet?\"\n\nClaude nutzt automatisch:\n1. Queue MCP \u2192 Failed Jobs suchen\n2. Queue MCP \u2192 Job Details abrufen\n3. Sentry MCP \u2192 Fehler analysieren\n4. Database MCP \u2192 Webhook Events pr\u00fcfen\n5. Queue MCP \u2192 Jobs neu starten\n\nAntwort: \"Die Webhooks schlagen fehl wegen...\"\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#mcp-auswahl-matrix","title":"\ud83d\udea6 MCP Auswahl-Matrix","text":"Problem Prim\u00e4rer MCP Sekund\u00e4re MCPs Buchung fehlgeschlagen Database Retell, Cal.com, Sentry, Queue Keine Anrufe kommen an Retell Database, Sentry, Queue Kalender nicht synchron Cal.com Database, Queue System langsam Laravel Loop Sentry, Database, Queue Kunde beschwert sich Database Retell, Cal.com Fehler im Admin Panel Sentry Laravel Loop Webhook nicht verarbeitet Queue Database, Sentry Jobs schlagen fehl Queue Sentry, Database Horizon l\u00e4uft nicht Queue Laravel Loop"},{"location":"MCP_COMPLETE_OVERVIEW/#fehlende-mcps-roadmap","title":"\ud83d\udd27 Fehlende MCPs (Roadmap)","text":""},{"location":"MCP_COMPLETE_OVERVIEW/#1-customer-intelligence-mcp-prioritat-hoch","title":"1. Customer Intelligence MCP (PRIORIT\u00c4T: HOCH)","text":"<ul> <li>Kundenverhalten analysieren</li> <li>Duplikate finden</li> <li>Kommunikationshistorie</li> </ul>"},{"location":"MCP_COMPLETE_OVERVIEW/#3-business-analytics-mcp","title":"3. Business Analytics MCP","text":"<ul> <li>Umsatzanalyse</li> <li>Conversion-Trichter</li> <li>ROI-Berechnungen</li> </ul>"},{"location":"MCP_COMPLETE_OVERVIEW/#4-integration-health-mcp","title":"4. Integration Health MCP","text":"<ul> <li>Alle APIs \u00fcberwachen</li> <li>Circuit Breaker Status</li> <li>Webhook-Verarbeitung</li> </ul>"},{"location":"MCP_COMPLETE_OVERVIEW/#quick-reference","title":"\ud83d\udcda Quick Reference","text":""},{"location":"MCP_COMPLETE_OVERVIEW/#mcp-token-erstellen","title":"MCP Token erstellen:","text":"<pre><code>php artisan mcp:create-token admin@askproai.de\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#verbindung-testen","title":"Verbindung testen:","text":"<pre><code>php artisan mcp:test YOUR_TOKEN\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#laravel-loop-starten","title":"Laravel Loop starten:","text":"<pre><code>php artisan loop:mcp:start\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#cache-leeren","title":"Cache leeren:","text":"<pre><code>curl -X POST -H \"Authorization: Bearer TOKEN\" \\\n  https://api.askproai.de/api/mcp/database/cache/clear\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#best-practices","title":"\ud83c\udfaf Best Practices","text":"<ol> <li>Immer Company Context angeben</li> <li>\u2705 \"Fehler f\u00fcr Firma ABC\"</li> <li> <p>\u274c \"Alle Fehler\"</p> </li> <li> <p>Zeitr\u00e4ume begrenzen</p> </li> <li>\u2705 \"Anrufe der letzten 24 Stunden\"</li> <li> <p>\u274c \"Alle Anrufe\"</p> </li> <li> <p>Spezifisch fragen</p> </li> <li>\u2705 \"Warum ist Buchung #123 fehlgeschlagen?\"</li> <li> <p>\u274c \"Was l\u00e4uft falsch?\"</p> </li> <li> <p>MCPs kombinieren</p> </li> <li>Bei Buchungsproblemen: Database + Cal.com + Retell + Queue</li> <li>Bei Performance: Laravel Loop + Sentry + Queue</li> <li>Bei Kundenproblemen: Database + Retell</li> <li>Bei Webhook-Problemen: Queue + Database + Sentry</li> </ol>"},{"location":"MCP_COMPLETE_OVERVIEW/#wichtige-befehle-fur-notfalle","title":"\ud83d\udea8 Wichtige Befehle f\u00fcr Notf\u00e4lle","text":"<pre><code># System-Status pr\u00fcfen\nphp artisan mcp:test TOKEN --endpoint=all\n\n# Alle Caches leeren\nphp artisan optimize:clear\n\n# Queue neustarten\nphp artisan queue:restart\n\n# Fehler der letzten Stunde\ncurl -H \"Authorization: Bearer TOKEN\" \\\n  \"https://api.askproai.de/api/mcp/sentry/issues?query=created_at:&gt;1h\"\n\n# Queue-Status pr\u00fcfen\ncurl -H \"Authorization: Bearer TOKEN\" \\\n  https://api.askproai.de/api/mcp/queue/overview\n\n# Fehlgeschlagene Jobs anzeigen\ncurl -H \"Authorization: Bearer TOKEN\" \\\n  https://api.askproai.de/api/mcp/queue/failed-jobs\n\n# Job neu starten\ncurl -X POST -H \"Authorization: Bearer TOKEN\" \\\n  https://api.askproai.de/api/mcp/queue/job/JOB_ID/retry\n</code></pre>"},{"location":"MCP_COMPLETE_OVERVIEW/#monitoring","title":"\ud83d\udcc8 Monitoring","text":"<p>\u00dcberwachen Sie die MCP-Nutzung: <pre><code>-- Top MCP Endpoints\nSELECT endpoint, COUNT(*) as calls, AVG(response_time_ms) as avg_ms\nFROM api_call_logs\nWHERE endpoint LIKE '/api/mcp/%'\nAND created_at &gt; NOW() - INTERVAL 24 HOUR\nGROUP BY endpoint\nORDER BY calls DESC;\n</code></pre></p> <p>Tipp: Speichern Sie diese \u00dcbersicht als Lesezeichen. Bei Problemen k\u00f6nnen Sie Claude einfach sagen: \"Nutze die MCP \u00dcbersicht und l\u00f6se Problem X\"</p>"},{"location":"MCP_EVOLUTION_SYSTEM/","title":"MCP Discovery &amp; Evolution System","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#overview","title":"Overview","text":"<p>The MCP Discovery &amp; Evolution System is a comprehensive framework for AskProAI that automatically discovers, evaluates, and integrates new Model Context Protocol (MCP) capabilities. This system ensures AskProAI stays at the forefront of AI-assisted development by continuously monitoring and adopting relevant MCPs.</p>"},{"location":"MCP_EVOLUTION_SYSTEM/#architecture","title":"Architecture","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#1-mcp-discovery-service","title":"1. MCP Discovery Service","text":"<p>Located at: <code>app/Services/MCP/Discovery/MCPDiscoveryService.php</code></p> <p>Key Features: - Multi-source discovery (Anthropic Registry, GitHub, NPM, Community) - Relevance scoring based on AskProAI's needs - Automatic catalog maintenance - Smart filtering for German market focus</p> <p>Configuration: <code>config/mcp-discovery.php</code></p>"},{"location":"MCP_EVOLUTION_SYSTEM/#2-uiux-best-practices-mcp","title":"2. UI/UX Best Practices MCP","text":"<p>Located at: <code>app/Services/MCP/UIUXBestPracticesMCP.php</code></p> <p>Capabilities: - Laravel/Filament best practices monitoring - Performance analysis - Accessibility scoring - Responsive design checking - Trend monitoring</p> <p>Configuration: <code>config/mcp-uiux.php</code></p>"},{"location":"MCP_EVOLUTION_SYSTEM/#3-safe-deployment-system","title":"3. Safe Deployment System","text":"<p>Located at: <code>app/Services/Deployment/SafeDeploymentService.php</code></p> <p>Features: - Zero-downtime deployments - Automatic rollback on failure - Comprehensive pre/post checks - Blue-green deployment support - Health monitoring</p> <p>Configuration: <code>config/deployment.php</code></p>"},{"location":"MCP_EVOLUTION_SYSTEM/#4-continuous-improvement-engine","title":"4. Continuous Improvement Engine","text":"<p>Located at: <code>app/Services/ContinuousImprovement/ImprovementEngine.php</code></p> <p>Capabilities: - Performance bottleneck detection - Pattern recognition - Predictive analysis - Automatic optimization suggestions - Real-time monitoring</p> <p>Configuration: <code>config/improvement-engine.php</code></p>"},{"location":"MCP_EVOLUTION_SYSTEM/#usage","title":"Usage","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#command-line-interface","title":"Command Line Interface","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#1-discover-new-mcps","title":"1. Discover New MCPs","text":"<pre><code># Discover MCPs from all sources\nphp artisan mcp:discover\n\n# Discover from specific source\nphp artisan mcp:discover --source=github\n\n# Auto-install highly relevant MCPs\nphp artisan mcp:discover --install\n\n# Dry run to see what would be discovered\nphp artisan mcp:discover --dry-run\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#2-analyze-uiux","title":"2. Analyze UI/UX","text":"<pre><code># Full UI/UX analysis\nphp artisan uiux:analyze\n\n# Analyze specific component\nphp artisan uiux:analyze --component=AppointmentResource\n\n# Generate improvement suggestions\nphp artisan uiux:analyze --suggest\n\n# Monitor UI/UX trends\nphp artisan uiux:analyze --monitor\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#3-safe-deployment","title":"3. Safe Deployment","text":"<pre><code># Deploy with all safety checks\nphp artisan deploy:safe\n\n# Deploy specific branch\nphp artisan deploy:safe --branch=feature/new-feature\n\n# Skip tests (not recommended)\nphp artisan deploy:safe --skip-tests\n\n# Disable automatic rollback\nphp artisan deploy:safe --no-rollback\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#4-continuous-improvement","title":"4. Continuous Improvement","text":"<pre><code># Run system analysis\nphp artisan improvement:analyze\n\n# Apply specific optimization\nphp artisan improvement:analyze --apply=query_optimization_123\n\n# Start continuous monitoring\nphp artisan improvement:analyze --monitor\n\n# Generate detailed report\nphp artisan improvement:analyze --report\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#mcp-relevance-scoring","title":"MCP Relevance Scoring","text":"<p>The system evaluates MCPs based on:</p>"},{"location":"MCP_EVOLUTION_SYSTEM/#priority-categories-40-weight","title":"Priority Categories (40% weight)","text":"<ul> <li>Calendar/Scheduling</li> <li>Appointment/Booking</li> <li>Telephony/Voice</li> <li>AI/Conversation</li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#secondary-categories-30-weight","title":"Secondary Categories (30% weight)","text":"<ul> <li>CRM/Customer</li> <li>Business/Automation</li> <li>Monitoring/Analytics</li> <li>Performance</li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#keywords-20-weight","title":"Keywords (20% weight)","text":"<ul> <li>High Priority: laravel, filament, calcom, retell, german, gdpr</li> <li>Medium Priority: php, mysql, webhook, multi-tenant, saas</li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#popularity-maintenance-10-weight","title":"Popularity &amp; Maintenance (10% weight)","text":"<ul> <li>GitHub stars</li> <li>NPM downloads</li> <li>Last update date</li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#deployment-safety-features","title":"Deployment Safety Features","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#pre-deployment-checks","title":"Pre-Deployment Checks","text":"<ol> <li>Database Connectivity - Ensures database is accessible</li> <li>Pending Migrations - Identifies migrations to run</li> <li>Test Suite - Runs all tests</li> <li>Disk Space - Verifies sufficient space</li> <li>External Services - Checks Cal.com, Retell.ai availability</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#zero-downtime-strategy","title":"Zero-Downtime Strategy","text":"<ol> <li>Blue-Green Deployment</li> <li>Deploy to inactive environment</li> <li>Run health checks</li> <li> <p>Switch traffic atomically</p> </li> <li> <p>Rolling Deployment</p> </li> <li>Update instances gradually</li> <li>Monitor each instance</li> <li>Automatic rollback on failure</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#rollback-mechanism","title":"Rollback Mechanism","text":"<ul> <li>Automatic database backup before deployment</li> <li>Code snapshot creation</li> <li>Configuration preservation</li> <li>One-command rollback: <code>php artisan deploy:rollback</code></li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#continuous-improvement-metrics","title":"Continuous Improvement Metrics","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#performance-tracking","title":"Performance Tracking","text":"<ul> <li>Response times (API, Web, Database)</li> <li>Throughput (requests/second)</li> <li>Error rates</li> <li>Resource utilization</li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#bottleneck-detection","title":"Bottleneck Detection","text":"<ul> <li>Database: Slow queries, lock waits, connection exhaustion</li> <li>API: High latency, timeouts, error spikes</li> <li>Queue: Processing delays, growing backlogs</li> <li>Resources: CPU/Memory/Disk constraints</li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#optimization-types","title":"Optimization Types","text":"<ol> <li>Query Optimization</li> <li>Missing index detection</li> <li>N+1 query identification</li> <li> <p>Query rewriting suggestions</p> </li> <li> <p>Cache Optimization</p> </li> <li>Hit rate improvement</li> <li>Cache warming strategies</li> <li> <p>TTL optimization</p> </li> <li> <p>Architecture Optimization</p> </li> <li>Horizontal scaling recommendations</li> <li>Service decomposition</li> <li>Load balancing improvements</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#integration-with-askproai","title":"Integration with AskProAI","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#automatic-scheduling","title":"Automatic Scheduling","text":"<pre><code># config/schedule.php\n$schedule-&gt;command('mcp:discover')-&gt;daily();\n$schedule-&gt;command('uiux:analyze')-&gt;weekly();\n$schedule-&gt;command('improvement:analyze')-&gt;hourly();\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#dashboard-integration","title":"Dashboard Integration","text":"<p>Access real-time metrics at: <code>/admin/system-improvements</code></p>"},{"location":"MCP_EVOLUTION_SYSTEM/#notification-channels","title":"Notification Channels","text":"<ul> <li>Slack webhooks for critical alerts</li> <li>Email summaries for weekly reports</li> <li>Dashboard notifications for new discoveries</li> </ul>"},{"location":"MCP_EVOLUTION_SYSTEM/#best-practices","title":"Best Practices","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#mcp-discovery","title":"MCP Discovery","text":"<ol> <li>Review discovered MCPs weekly</li> <li>Test in staging before production</li> <li>Document integration decisions</li> <li>Monitor MCP performance impact</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#uiux-improvements","title":"UI/UX Improvements","text":"<ol> <li>Implement high-priority suggestions first</li> <li>A/B test major UI changes</li> <li>Monitor user feedback</li> <li>Maintain accessibility standards</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#deployments","title":"Deployments","text":"<ol> <li>Always deploy during low-traffic periods</li> <li>Monitor for 15 minutes post-deployment</li> <li>Keep rollback scripts updated</li> <li>Document deployment decisions</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#continuous-improvement","title":"Continuous Improvement","text":"<ol> <li>Review recommendations weekly</li> <li>Prioritize based on impact vs effort</li> <li>Test optimizations in staging</li> <li>Monitor optimization results</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#troubleshooting","title":"Troubleshooting","text":""},{"location":"MCP_EVOLUTION_SYSTEM/#mcp-discovery-issues","title":"MCP Discovery Issues","text":"<pre><code># Clear discovery cache\nphp artisan cache:clear --tags=mcp-discovery\n\n# Re-scan all sources\nphp artisan mcp:discover --force\n\n# Check discovery logs\ntail -f storage/logs/mcp-discovery.log\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#deployment-failures","title":"Deployment Failures","text":"<pre><code># Check deployment status\nphp artisan deploy:status\n\n# View deployment logs\ntail -f storage/logs/deployment.log\n\n# Manual rollback\nphp artisan deploy:rollback --deployment-id=xxx\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#performance-issues","title":"Performance Issues","text":"<pre><code># Run immediate analysis\nphp artisan improvement:analyze --module=performance\n\n# Check bottleneck details\nphp artisan improvement:bottlenecks --verbose\n\n# Export metrics for analysis\nphp artisan improvement:export --format=csv\n</code></pre>"},{"location":"MCP_EVOLUTION_SYSTEM/#security-considerations","title":"Security Considerations","text":"<ol> <li>MCP Verification</li> <li>All MCPs are scanned for security issues</li> <li>Code review required for auto-installations</li> <li> <p>Sandboxed testing environment</p> </li> <li> <p>Deployment Security</p> </li> <li>Encrypted backups</li> <li>Secure credential handling</li> <li> <p>Audit trail for all deployments</p> </li> <li> <p>Data Protection</p> </li> <li>GDPR compliance maintained</li> <li>No customer data in improvement metrics</li> <li>Anonymized performance tracking</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#future-enhancements","title":"Future Enhancements","text":"<ol> <li>AI-Powered Optimization</li> <li>Machine learning for pattern detection</li> <li>Predictive optimization timing</li> <li> <p>Automated A/B testing</p> </li> <li> <p>Advanced MCP Integration</p> </li> <li>Custom MCP development</li> <li>MCP marketplace integration</li> <li> <p>Community MCP sharing</p> </li> <li> <p>Enhanced Monitoring</p> </li> <li>Real-time performance dashboards</li> <li>Mobile app for monitoring</li> <li>Custom alert rules</li> </ol>"},{"location":"MCP_EVOLUTION_SYSTEM/#support","title":"Support","text":"<p>For issues or questions: 1. Check the troubleshooting guide above 2. Review logs in <code>storage/logs/</code> 3. Contact the development team 4. Create an issue in the repository</p>"},{"location":"MCP_EVOLUTION_SYSTEM/#conclusion","title":"Conclusion","text":"<p>The MCP Discovery &amp; Evolution System ensures AskProAI remains cutting-edge by: - Automatically discovering new capabilities - Maintaining UI/UX excellence - Ensuring safe, reliable deployments - Continuously improving performance</p> <p>This system is designed to evolve with the platform, adapting to new technologies and requirements as they emerge.</p>"},{"location":"MCP_INTEGRATION_GUIDE/","title":"MCP (Model Context Protocol) Integration Guide f\u00fcr AskProAI","text":""},{"location":"MCP_INTEGRATION_GUIDE/#ubersicht","title":"\u00dcbersicht","text":"<p>Diese Anleitung beschreibt die Nutzung der MCP Server Integration in AskProAI. MCP erm\u00f6glicht es AI-Assistenten wie Claude, direkt mit Ihrer Anwendung zu interagieren.</p>"},{"location":"MCP_INTEGRATION_GUIDE/#verfugbare-mcp-server","title":"Verf\u00fcgbare MCP Server","text":""},{"location":"MCP_INTEGRATION_GUIDE/#1-database-mcp-server","title":"1. Database MCP Server","text":"<p>Erm\u00f6glicht Read-Only Zugriff auf die Datenbank f\u00fcr Debugging und Analyse.</p> <p>Endpoints: - <code>GET /api/mcp/database/schema</code> - Datenbankschema abrufen - <code>POST /api/mcp/database/query</code> - SQL-Abfragen ausf\u00fchren (nur SELECT) - <code>POST /api/mcp/database/search</code> - Suche in Tabellen - <code>GET /api/mcp/database/failed-appointments</code> - Fehlgeschlagene Termine - <code>GET /api/mcp/database/call-stats</code> - Anrufstatistiken - <code>GET /api/mcp/database/tenant-stats</code> - Mandanten-Statistiken</p> <p>Beispiel-Anfragen an Claude: - \"Zeige mir alle fehlgeschlagenen Termine der letzten 24 Stunden\" - \"Wie viele Anrufe hatten wir diese Woche?\" - \"Suche nach Kunden mit der Telefonnummer 0170...\"</p>"},{"location":"MCP_INTEGRATION_GUIDE/#2-calcom-mcp-server","title":"2. Cal.com MCP Server","text":"<p>Integration mit Cal.com f\u00fcr Kalender-Management.</p> <p>Endpoints: - <code>GET /api/mcp/calcom/event-types?company_id=XXX</code> - Event Types abrufen - <code>POST /api/mcp/calcom/availability</code> - Verf\u00fcgbarkeit pr\u00fcfen - <code>GET /api/mcp/calcom/bookings?company_id=XXX</code> - Buchungen abrufen - <code>GET /api/mcp/calcom/assignments/{companyId}</code> - Event Type Zuordnungen - <code>POST /api/mcp/calcom/sync</code> - Event Types synchronisieren - <code>GET /api/mcp/calcom/test/{companyId}</code> - Verbindung testen</p> <p>Beispiel-Anfragen an Claude: - \"Synchronisiere die Event Types f\u00fcr Firma XYZ\" - \"Zeige mir die verf\u00fcgbaren Termine f\u00fcr morgen\" - \"Welche Mitarbeiter sind welchen Event Types zugeordnet?\"</p>"},{"location":"MCP_INTEGRATION_GUIDE/#3-retellai-mcp-server","title":"3. Retell.ai MCP Server","text":"<p>Integration mit Retell.ai f\u00fcr Telefon-AI Management.</p> <p>Endpoints: - <code>GET /api/mcp/retell/agent/{companyId}</code> - Agent-Informationen - <code>GET /api/mcp/retell/agents/{companyId}</code> - Alle Agents auflisten - <code>GET /api/mcp/retell/call-stats?company_id=XXX</code> - Anrufstatistiken - <code>GET /api/mcp/retell/recent-calls?company_id=XXX</code> - Letzte Anrufe - <code>GET /api/mcp/retell/call/{callId}</code> - Anrufdetails - <code>POST /api/mcp/retell/search-calls</code> - Anrufe suchen - <code>GET /api/mcp/retell/phone-numbers/{companyId}</code> - Telefonnummern - <code>GET /api/mcp/retell/test/{companyId}</code> - Verbindung testen</p> <p>Beispiel-Anfragen an Claude: - \"Wie viele Anrufe hatten wir heute?\" - \"Zeige mir Details zum letzten Anruf\" - \"Welche Telefonnummern sind konfiguriert?\"</p>"},{"location":"MCP_INTEGRATION_GUIDE/#4-sentry-mcp-server-bereits-implementiert","title":"4. Sentry MCP Server (bereits implementiert)","text":"<p>Error-Tracking und Performance-Monitoring.</p> <p>Endpoints: - <code>GET /api/mcp/sentry/issues</code> - Aktuelle Fehler - <code>GET /api/mcp/sentry/issues/{issueId}</code> - Fehlerdetails - <code>POST /api/mcp/sentry/issues/search</code> - Fehler suchen - <code>GET /api/mcp/sentry/performance</code> - Performance-Daten</p>"},{"location":"MCP_INTEGRATION_GUIDE/#authentifizierung","title":"Authentifizierung","text":"<p>Alle MCP Endpoints sind durch Sanctum Authentication gesch\u00fctzt. Sie ben\u00f6tigen ein g\u00fcltiges API Token.</p>"},{"location":"MCP_INTEGRATION_GUIDE/#nutzung-mit-claude","title":"Nutzung mit Claude","text":""},{"location":"MCP_INTEGRATION_GUIDE/#in-claude-desktop","title":"In Claude Desktop","text":"<ol> <li>\u00d6ffnen Sie Claude Desktop</li> <li>Navigieren Sie zu den MCP Server Einstellungen</li> <li>F\u00fcgen Sie die AskProAI MCP Server URL hinzu: <code>https://api.askproai.de/api/mcp</code></li> <li>Konfigurieren Sie Ihr API Token</li> </ol>"},{"location":"MCP_INTEGRATION_GUIDE/#beispiel-konversationen","title":"Beispiel-Konversationen","text":"<p>Fehleranalyse: <pre><code>Claude: \"Was sind die h\u00e4ufigsten Fehler beim Booking Flow?\"\n\u2192 MCP nutzt Database + Sentry Server f\u00fcr Analyse\n</code></pre></p> <p>Status-Check: <pre><code>Claude: \"Wie ist der aktuelle System-Status?\"\n\u2192 MCP pr\u00fcft Cal.com + Retell.ai Verbindungen\n</code></pre></p> <p>Debugging: <pre><code>Claude: \"Warum ist der Termin f\u00fcr Kunde Schmidt fehlgeschlagen?\"\n\u2192 MCP durchsucht Calls, Appointments und Error Logs\n</code></pre></p>"},{"location":"MCP_INTEGRATION_GUIDE/#sicherheit","title":"Sicherheit","text":""},{"location":"MCP_INTEGRATION_GUIDE/#read-only-zugriff","title":"Read-Only Zugriff","text":"<ul> <li>Database MCP erlaubt nur SELECT Queries</li> <li>Keine Daten\u00e4nderungen m\u00f6glich</li> <li>Sensitive Spalten (Passw\u00f6rter etc.) werden gefiltert</li> </ul>"},{"location":"MCP_INTEGRATION_GUIDE/#tenant-isolation","title":"Tenant Isolation","text":"<ul> <li>Alle Abfragen beachten die Multi-Tenancy</li> <li>Company ID muss bei relevanten Anfragen angegeben werden</li> </ul>"},{"location":"MCP_INTEGRATION_GUIDE/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>API Endpoints haben Rate Limits</li> <li>Cache wird f\u00fcr h\u00e4ufige Anfragen genutzt</li> </ul>"},{"location":"MCP_INTEGRATION_GUIDE/#erweiterte-nutzung","title":"Erweiterte Nutzung","text":""},{"location":"MCP_INTEGRATION_GUIDE/#custom-queries","title":"Custom Queries","text":"<p>Sie k\u00f6nnen eigene SQL-Abfragen ausf\u00fchren: <pre><code>POST /api/mcp/database/query\n{\n    \"sql\": \"SELECT COUNT(*) as total FROM appointments WHERE status = ?\",\n    \"bindings\": [\"completed\"]\n}\n</code></pre></p>"},{"location":"MCP_INTEGRATION_GUIDE/#cache-management","title":"Cache Management","text":"<p>Cache f\u00fcr jeden Service kann geleert werden: <pre><code>POST /api/mcp/{service}/cache/clear\n</code></pre> Verf\u00fcgbare Services: database, calcom, retell, sentry</p>"},{"location":"MCP_INTEGRATION_GUIDE/#troubleshooting","title":"Troubleshooting","text":""},{"location":"MCP_INTEGRATION_GUIDE/#company-not-found","title":"\"Company not found\"","text":"<ul> <li>Stellen Sie sicher, dass die company_id korrekt ist</li> <li>Pr\u00fcfen Sie, ob der API Key Zugriff auf diese Company hat</li> </ul>"},{"location":"MCP_INTEGRATION_GUIDE/#only-select-queries-are-allowed","title":"\"Only SELECT queries are allowed\"","text":"<ul> <li>Database MCP erlaubt nur lesende Zugriffe</li> <li>F\u00fcr \u00c4nderungen nutzen Sie die regul\u00e4re API</li> </ul>"},{"location":"MCP_INTEGRATION_GUIDE/#calcom-not-configured","title":"\"Cal.com not configured\"","text":"<ul> <li>Pr\u00fcfen Sie, ob die Company einen Cal.com API Key hat</li> <li>Testen Sie die Verbindung mit <code>/api/mcp/calcom/test/{companyId}</code></li> </ul>"},{"location":"MCP_INTEGRATION_GUIDE/#best-practices","title":"Best Practices","text":"<ol> <li>Nutzen Sie spezifische Fragen: \"Zeige Fehler der letzten 24 Stunden\" statt \"Zeige alle Fehler\"</li> <li>Kombinieren Sie MCP Server: Nutzen Sie Database + Sentry f\u00fcr vollst\u00e4ndige Fehleranalyse</li> <li>Cache beachten: Daten werden 5 Minuten gecacht - bei Bedarf Cache leeren</li> <li>Company Context: Geben Sie immer die company_id an f\u00fcr mandanten-spezifische Daten</li> </ol>"},{"location":"MCP_INTEGRATION_GUIDE/#zukunftige-erweiterungen","title":"Zuk\u00fcnftige Erweiterungen","text":"<ul> <li>Redis MCP: Cache und Queue Monitoring</li> <li>Horizon MCP: Queue Job Details</li> <li>Stripe MCP: Billing und Payment Informationen</li> <li>Custom Business Logic MCP: Spezifische Gesch\u00e4ftslogik-Operationen</li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/","title":"MCP (Model Context Protocol) Setup Guide f\u00fcr AskProAI","text":""},{"location":"MCP_SETUP_COMPLETE_GUIDE/#vollstandige-einrichtungsanleitung","title":"\ud83d\ude80 Vollst\u00e4ndige Einrichtungsanleitung","text":""},{"location":"MCP_SETUP_COMPLETE_GUIDE/#1-voraussetzungen","title":"1. Voraussetzungen \u2705","text":"<ul> <li>PHP 8.3 installiert</li> <li>Laravel Loop installiert</li> <li>Custom MCP Server implementiert</li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#2-api-token-fur-mcp-erstellen","title":"2. API Token f\u00fcr MCP erstellen","text":"<p>Erstellen Sie ein API Token f\u00fcr die MCP-Authentifizierung:</p> <pre><code>php artisan tinker\n</code></pre> <p>In Tinker: <pre><code>$user = User::where('email', 'admin@askproai.de')-&gt;first();\n$token = $user-&gt;createToken('mcp-access', ['*'])-&gt;plainTextToken;\necho \"Ihr MCP Token: \" . $token;\n</code></pre></p>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#3-claude-code-konfigurieren","title":"3. Claude Code konfigurieren","text":""},{"location":"MCP_SETUP_COMPLETE_GUIDE/#option-a-laravel-loop-empfohlen","title":"Option A: Laravel Loop (Empfohlen)","text":"<pre><code>claude mcp add laravel-loop-mcp php /var/www/api-gateway/artisan loop:mcp:start\n</code></pre>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#option-b-http-mcp-server","title":"Option B: HTTP MCP Server","text":"<p>F\u00fcgen Sie in Claude Code hinzu: <pre><code>{\n  \"mcpServers\": {\n    \"askproai\": {\n      \"url\": \"https://api.askproai.de/api/mcp\",\n      \"headers\": {\n        \"Authorization\": \"Bearer YOUR_MCP_TOKEN\",\n        \"Accept\": \"application/json\"\n      }\n    }\n  }\n}\n</code></pre></p>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#4-verfugbare-mcp-funktionen","title":"4. Verf\u00fcgbare MCP Funktionen","text":""},{"location":"MCP_SETUP_COMPLETE_GUIDE/#database-mcp","title":"Database MCP","text":"<ul> <li>Schema abrufen: <code>GET /api/mcp/database/schema</code></li> <li>Query ausf\u00fchren: <code>POST /api/mcp/database/query</code></li> <li>Suchen: <code>POST /api/mcp/database/search</code></li> <li>Fehlerhafte Termine: <code>GET /api/mcp/database/failed-appointments</code></li> <li>Anrufstatistiken: <code>GET /api/mcp/database/call-stats</code></li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#calcom-mcp","title":"Cal.com MCP","text":"<ul> <li>Event Types: <code>GET /api/mcp/calcom/event-types?company_id=XXX</code></li> <li>Verf\u00fcgbarkeit: <code>POST /api/mcp/calcom/availability</code></li> <li>Buchungen: <code>GET /api/mcp/calcom/bookings?company_id=XXX</code></li> <li>Synchronisieren: <code>POST /api/mcp/calcom/sync</code></li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#retellai-mcp","title":"Retell.ai MCP","text":"<ul> <li>Agent Info: <code>GET /api/mcp/retell/agent/{companyId}</code></li> <li>Anrufstatistiken: <code>GET /api/mcp/retell/call-stats</code></li> <li>Letzte Anrufe: <code>GET /api/mcp/retell/recent-calls</code></li> <li>Telefonnummern: <code>GET /api/mcp/retell/phone-numbers/{companyId}</code></li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#sentry-mcp","title":"Sentry MCP","text":"<ul> <li>Fehler anzeigen: <code>GET /api/mcp/sentry/issues</code></li> <li>Fehlerdetails: <code>GET /api/mcp/sentry/issues/{issueId}</code></li> <li>Performance: <code>GET /api/mcp/sentry/performance</code></li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#5-beispiel-anfragen-an-claude","title":"5. Beispiel-Anfragen an Claude","text":"<p>Mit den MCP Servern k\u00f6nnen Sie Claude fragen:</p> <p>System-Status: <pre><code>\"Claude, wie ist der aktuelle System-Status?\"\n\"Zeige mir alle fehlgeschlagenen Termine der letzten 24 Stunden\"\n\"Wie viele Anrufe hatten wir heute?\"\n</code></pre></p> <p>Debugging: <pre><code>\"Warum ist die Buchung f\u00fcr Kunde Schmidt fehlgeschlagen?\"\n\"Analysiere die Performance der letzten Woche\"\n\"Zeige mir alle Fehler im Booking Flow\"\n</code></pre></p> <p>Management: <pre><code>\"Synchronisiere die Cal.com Event Types\"\n\"\u00dcberpr\u00fcfe die Retell.ai Verbindung\"\n\"Liste alle konfigurierten Telefonnummern\"\n</code></pre></p>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#6-laravel-loop-befehle","title":"6. Laravel Loop Befehle","text":"<p>Mit Laravel Loop k\u00f6nnen Sie direkt Artisan Commands ausf\u00fchren:</p> <pre><code>\"Claude, f\u00fchre php artisan queue:monitor aus\"\n\"Zeige mir alle Routes mit php artisan route:list\"\n\"L\u00f6sche den Cache\"\n\"F\u00fchre die Migrations aus\"\n</code></pre>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#7-sicherheit","title":"7. Sicherheit","text":""},{"location":"MCP_SETUP_COMPLETE_GUIDE/#api-token-management","title":"API Token Management","text":"<ul> <li>Tokens regelm\u00e4\u00dfig rotieren</li> <li>Nur notwendige Permissions vergeben</li> <li>Tokens niemals im Code committen</li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>API hat automatisches Rate Limiting</li> <li>Cache wird f\u00fcr h\u00e4ufige Anfragen genutzt</li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#logging","title":"Logging","text":"<ul> <li>Alle MCP Anfragen werden geloggt</li> <li>Monitoring \u00fcber Sentry verf\u00fcgbar</li> </ul>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#8-troubleshooting","title":"8. Troubleshooting","text":"<p>\"Unauthorized\" Fehler: - Pr\u00fcfen Sie das API Token - Stellen Sie sicher, dass der User die richtigen Permissions hat</p> <p>\"Company not found\": - \u00dcberpr\u00fcfen Sie die company_id - Stellen Sie sicher, dass der User Zugriff auf die Company hat</p> <p>Keine Daten: - Cache leeren: <code>POST /api/mcp/{service}/cache/clear</code> - Logs pr\u00fcfen: <code>storage/logs/laravel.log</code></p>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#9-best-practices","title":"9. Best Practices","text":"<ol> <li>Spezifische Fragen stellen</li> <li>\u2705 \"Fehler der letzten 24 Stunden\"</li> <li> <p>\u274c \"Alle Fehler\"</p> </li> <li> <p>Company Context angeben</p> </li> <li> <p>Immer company_id f\u00fcr mandanten-spezifische Daten</p> </li> <li> <p>Services kombinieren</p> </li> <li>Database + Sentry f\u00fcr vollst\u00e4ndige Fehleranalyse</li> <li> <p>Cal.com + Retell f\u00fcr Booking-Debugging</p> </li> <li> <p>Cache beachten</p> </li> <li>Daten werden 5 Minuten gecacht</li> <li>Bei Bedarf Cache explizit leeren</li> </ol>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#10-monitoring-logs","title":"10. Monitoring &amp; Logs","text":"<p>\u00dcberwachen Sie die MCP-Nutzung: <pre><code>-- MCP Anfragen der letzten 24 Stunden\nSELECT endpoint, COUNT(*) as requests, AVG(response_time_ms) as avg_ms\nFROM api_call_logs \nWHERE endpoint LIKE '/api/mcp/%'\nAND created_at &gt; NOW() - INTERVAL 24 HOUR\nGROUP BY endpoint\nORDER BY requests DESC;\n</code></pre></p>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#11-erweiterte-nutzung","title":"11. Erweiterte Nutzung","text":"<p>Custom Queries: <pre><code>POST /api/mcp/database/query\n{\n  \"sql\": \"SELECT * FROM appointments WHERE status = ? AND created_at &gt; ?\",\n  \"bindings\": [\"failed\", \"2024-01-01\"]\n}\n</code></pre></p> <p>Batch-Operationen: Kombinieren Sie mehrere MCP-Calls f\u00fcr komplexe Analysen.</p>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#12-nachste-schritte","title":"12. N\u00e4chste Schritte","text":"<ol> <li>\u2705 API Token erstellen</li> <li>\u2705 Claude Code konfigurieren</li> <li>\u2705 Erste Test-Anfragen durchf\u00fchren</li> <li>\u2705 Team schulen</li> <li>\u2705 Monitoring einrichten</li> </ol>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#quick-start-commands","title":"Quick Start Commands","text":"<pre><code># Laravel Loop starten\nphp artisan loop:mcp:start\n\n# Test MCP Endpoint\ncurl -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  https://api.askproai.de/api/mcp/info\n\n# Cache leeren\ncurl -X POST -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  https://api.askproai.de/api/mcp/database/cache/clear\n</code></pre>"},{"location":"MCP_SETUP_COMPLETE_GUIDE/#support","title":"Support","text":"<p>Bei Fragen oder Problemen: - Logs pr\u00fcfen: <code>tail -f storage/logs/laravel.log</code> - Sentry Dashboard checken - Laravel Loop Docs: https://github.com/kirschbaum-development/laravel-loop</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/","title":"Production Monitoring and Alerting Guide","text":"<p>This guide documents the comprehensive monitoring and alerting system implemented for the AskProAI platform, with a focus on the Stripe integration and customer portal.</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#overview","title":"Overview","text":"<p>The monitoring system provides: - Real-time health checks - Performance monitoring - Security tracking - Business metrics - Automated alerting - Prometheus/Grafana integration</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#architecture","title":"Architecture","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#core-components","title":"Core Components","text":"<ol> <li>Health Check Service (<code>HealthCheckService</code>)</li> <li>Database connectivity</li> <li>Redis availability</li> <li>Stripe API status</li> <li>Queue sizes</li> <li>Disk space</li> <li> <p>Memory usage</p> </li> <li> <p>Performance Monitor (<code>PerformanceMonitor</code>)</p> </li> <li>Transaction tracking</li> <li>API call monitoring</li> <li>Query performance</li> <li> <p>Slow transaction detection</p> </li> <li> <p>Security Monitor (<code>SecurityMonitor</code>)</p> </li> <li>Failed login tracking</li> <li>Suspicious activity detection</li> <li>API key usage monitoring</li> <li>Rate limit violations</li> <li> <p>IP blocking</p> </li> <li> <p>Alerting Service (<code>AlertingService</code>)</p> </li> <li>Multi-channel alerts (Email, Slack, SMS)</li> <li>Threshold-based triggering</li> <li>Alert throttling</li> <li>Active alert management</li> </ol>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#configuration","title":"Configuration","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#environment-variables","title":"Environment Variables","text":"<pre><code># Monitoring\nMONITORING_ENABLED=true\n\n# Sentry Error Tracking\nSENTRY_LARAVEL_DSN=your-sentry-dsn\nSENTRY_ENVIRONMENT=production\nSENTRY_TRACES_SAMPLE_RATE=0.1\nSENTRY_PROFILES_SAMPLE_RATE=0.1\n\n# Alert Recipients\nALERT_EMAIL_RECIPIENTS=admin@example.com,ops@example.com\nALERT_SLACK_WEBHOOK=https://hooks.slack.com/services/xxx\nALERT_SMS_RECIPIENTS=+1234567890\n\n# Health Check Secret\nHEALTH_CHECK_SECRET=your-secret-key\nMETRICS_SECRET=your-metrics-secret\n\n# Log Levels\nLOG_LEVEL_MONITORING=debug\nLOG_LEVEL_SECURITY=warning\nLOG_LEVEL_PERFORMANCE=info\nLOG_LEVEL_STRIPE=info\nLOG_LEVEL_PORTAL=info\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#configuration-file","title":"Configuration File","text":"<p>The main configuration is in <code>config/monitoring.php</code>:</p> <pre><code>return [\n    'enabled' =&gt; true,\n    'sentry' =&gt; [...],\n    'apm' =&gt; [...],\n    'health_checks' =&gt; [...],\n    'alerts' =&gt; [...],\n    'logging' =&gt; [...],\n    'metrics' =&gt; [...],\n    'security' =&gt; [...],\n];\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#health-checks","title":"Health Checks","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#endpoint","title":"Endpoint","text":"<pre><code>GET /api/health\nX-Health-Check-Secret: your-secret-key\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#response-example","title":"Response Example","text":"<pre><code>{\n  \"status\": \"healthy\",\n  \"timestamp\": \"2025-06-19T10:00:00Z\",\n  \"checks\": [\n    {\n      \"name\": \"database\",\n      \"critical\": true,\n      \"status\": \"ok\",\n      \"message\": \"Database connection is healthy\",\n      \"duration\": 5.23\n    },\n    {\n      \"name\": \"stripe_api\",\n      \"critical\": true,\n      \"status\": \"ok\",\n      \"message\": \"Stripe API connection is healthy\",\n      \"meta\": {\n        \"mode\": \"test\"\n      },\n      \"duration\": 145.67\n    }\n  ]\n}\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#critical-vs-warning-checks","title":"Critical vs Warning Checks","text":"<ul> <li>Critical: System marked as unhealthy if these fail</li> <li>Database</li> <li>Redis</li> <li> <p>Stripe API</p> </li> <li> <p>Warning: System operational but degraded</p> </li> <li>Queue size &gt; 1000</li> <li>Disk usage &gt; 90%</li> <li>Memory usage &gt; 85%</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#performance-monitoring","title":"Performance Monitoring","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#transaction-monitoring","title":"Transaction Monitoring","text":"<pre><code>// In your controller or service\n$monitor = app(PerformanceMonitor::class);\n$monitor-&gt;startTransaction('stripe_webhook');\n\n// Your code here...\n\n$monitor-&gt;endTransaction('stripe_webhook', [\n    'status_code' =&gt; 200,\n    'webhook_type' =&gt; 'payment_intent.succeeded'\n]);\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#api-call-monitoring","title":"API Call Monitoring","text":"<pre><code>$result = $monitor-&gt;monitorApiCall('stripe', function () {\n    return \\Stripe\\PaymentIntent::create([...]);\n});\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#slow-query-detection","title":"Slow Query Detection","text":"<p>Queries slower than 100ms are automatically logged to <code>storage/logs/performance.log</code>.</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#security-monitoring","title":"Security Monitoring","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#events-tracked","title":"Events Tracked","text":"<ul> <li>Failed login attempts</li> <li>Suspicious activity</li> <li>API key usage patterns</li> <li>Privilege escalation attempts</li> <li>Large data exports</li> <li>Rate limit violations</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#automatic-ip-blocking","title":"Automatic IP Blocking","text":"<p>IPs are automatically blocked for 24 hours after: - 5 failed login attempts in 15 minutes - 20 security events in 1 hour - Excessive rate limit violations</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#security-logs","title":"Security Logs","text":"<p>All security events are logged to: - Database: <code>security_logs</code> table - File: <code>storage/logs/security.log</code></p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#alerting-rules","title":"Alerting Rules","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#payment-failures","title":"Payment Failures","text":"<ul> <li>Trigger: 3 failures in 5 minutes</li> <li>Severity: Critical</li> <li>Channels: Email, Slack, SMS</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#security-breach-attempts","title":"Security Breach Attempts","text":"<ul> <li>Trigger: 5 attempts in 1 minute</li> <li>Severity: Critical</li> <li>Channels: Email, Slack, SMS</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#stripe-webhook-failures","title":"Stripe Webhook Failures","text":"<ul> <li>Trigger: 5 failures in 5 minutes</li> <li>Severity: High</li> <li>Channels: Email, Slack</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#high-error-rate","title":"High Error Rate","text":"<ul> <li>Trigger: &gt; 5% error rate</li> <li>Severity: High</li> <li>Channels: Email, Slack</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#database-connection-failures","title":"Database Connection Failures","text":"<ul> <li>Trigger: 3 failures in 1 minute</li> <li>Severity: Critical</li> <li>Channels: Email, Slack, SMS</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#metrics-collection","title":"Metrics Collection","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#prometheus-endpoint","title":"Prometheus Endpoint","text":"<pre><code>GET /api/metrics\nX-Metrics-Secret: your-metrics-secret\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#available-metrics","title":"Available Metrics","text":"<pre><code># System\naskproai_up\naskproai_php_memory_usage_bytes\naskproai_php_memory_peak_bytes\n\n# HTTP\naskproai_http_requests_total\naskproai_http_request_duration_ms\naskproai_http_requests_errors_total\n\n# Queue\naskproai_queue_size{queue=\"default\"}\naskproai_queue_size{queue=\"webhooks\"}\naskproai_queue_size{queue=\"stripe\"}\n\n# Business\naskproai_subscriptions_created_total\naskproai_revenue_processed_cents\naskproai_portal_registrations_total\naskproai_portal_logins_total\n\n# Security\naskproai_failed_logins_total\naskproai_blocked_ips_total\naskproai_rate_limit_violations_total\n\n# External APIs\naskproai_external_api_calls_total{service=\"stripe\"}\naskproai_external_api_errors_total{service=\"stripe\"}\naskproai_external_api_duration_ms{service=\"stripe\"}\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#logging-strategy","title":"Logging Strategy","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#log-channels","title":"Log Channels","text":"<ol> <li>monitoring - General monitoring events</li> <li>security - Security-related events</li> <li>performance - Performance issues</li> <li>stripe - Stripe-specific logs</li> <li>portal - Customer portal logs</li> <li>webhooks - Webhook processing logs</li> </ol>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#structured-logging","title":"Structured Logging","text":"<p>All logs include: - Correlation ID - User/Company context - Request metadata - Timestamp</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#sensitive-data-masking","title":"Sensitive Data Masking","text":"<p>The following fields are automatically masked: - password - stripe_secret - api_key - token - card_number - cvv - ssn - tax_id</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#grafana-dashboards","title":"Grafana Dashboards","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#system-overview","title":"System Overview","text":"<ul> <li>Request rate</li> <li>Error rate</li> <li>Response times</li> <li>Queue sizes</li> <li>Active users</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#stripe-integration","title":"Stripe Integration","text":"<ul> <li>Payment success rate</li> <li>Webhook processing time</li> <li>Failed payments</li> <li>Dispute rate</li> <li>Revenue metrics</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#customer-portal","title":"Customer Portal","text":"<ul> <li>Registration rate</li> <li>Login frequency</li> <li>Page load times</li> <li>User actions</li> <li>Error tracking</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#security-dashboard","title":"Security Dashboard","text":"<ul> <li>Failed login attempts</li> <li>Blocked IPs</li> <li>Rate limit violations</li> <li>Suspicious activities</li> <li>Security trends</li> </ul>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#testing-monitoring","title":"Testing Monitoring","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#command-line-test","title":"Command Line Test","text":"<pre><code>php artisan monitoring:test --all\n</code></pre> <p>Options: - <code>--health</code> - Test health checks - <code>--alert</code> - Test alerting - <code>--performance</code> - Test performance monitoring - <code>--security</code> - Test security monitoring - <code>--all</code> - Test all components</p>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#manual-alert-test","title":"Manual Alert Test","text":"<pre><code>app(AlertingService::class)-&gt;alert('payment_failure', [\n    'count' =&gt; 5,\n    'window' =&gt; 5,\n]);\n</code></pre>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#production-deployment-checklist","title":"Production Deployment Checklist","text":"<ol> <li>Environment Configuration</li> <li>[ ] Set all monitoring environment variables</li> <li>[ ] Configure Sentry DSN</li> <li>[ ] Set up alert recipients</li> <li> <p>[ ] Configure health check secret</p> </li> <li> <p>External Services</p> </li> <li>[ ] Verify Sentry project exists</li> <li>[ ] Test Slack webhook</li> <li>[ ] Configure SMS provider (if using)</li> <li> <p>[ ] Set up Prometheus/Grafana</p> </li> <li> <p>Database</p> </li> <li>[ ] Run migration for security_logs table</li> <li> <p>[ ] Verify indexes are created</p> </li> <li> <p>Testing</p> </li> <li>[ ] Run <code>php artisan monitoring:test --all</code></li> <li>[ ] Verify health endpoint responds</li> <li>[ ] Test alert delivery</li> <li> <p>[ ] Check metrics endpoint</p> </li> <li> <p>Monitoring</p> </li> <li>[ ] Import Grafana dashboards</li> <li>[ ] Set up Prometheus scraping</li> <li>[ ] Configure alert rules in Grafana</li> <li>[ ] Test end-to-end monitoring flow</li> </ol>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#troubleshooting","title":"Troubleshooting","text":""},{"location":"MONITORING_AND_ALERTING_GUIDE/#health-check-failing","title":"Health Check Failing","text":"<ol> <li>Check logs: <code>tail -f storage/logs/monitoring.log</code></li> <li>Verify services: <code>php artisan monitoring:test --health</code></li> <li>Check connectivity to external services</li> </ol>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#alerts-not-sending","title":"Alerts Not Sending","text":"<ol> <li>Verify configuration: <code>php artisan config:cache</code></li> <li>Check alert channels are configured</li> <li>Test manually: <code>php artisan monitoring:test --alert</code></li> <li>Check logs: <code>tail -f storage/logs/laravel.log</code></li> </ol>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#performance-issues","title":"Performance Issues","text":"<ol> <li>Check slow query log: <code>tail -f storage/logs/performance.log</code></li> <li>Review metrics: <code>/api/metrics</code></li> <li>Check APM data in monitoring dashboard</li> <li>Enable query explain: <code>EXPLAIN_QUERIES=true</code></li> </ol>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#security-events","title":"Security Events","text":"<ol> <li>Review security log: <code>tail -f storage/logs/security.log</code></li> <li>Check blocked IPs: Query <code>security_logs</code> table</li> <li>Review rate limiting configuration</li> <li>Check for patterns in failed attempts</li> </ol>"},{"location":"MONITORING_AND_ALERTING_GUIDE/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Reviews</li> <li>Weekly review of security logs</li> <li>Daily check of critical alerts</li> <li> <p>Monthly performance analysis</p> </li> <li> <p>Alert Fatigue Prevention</p> </li> <li>Tune thresholds based on actual data</li> <li>Use appropriate severity levels</li> <li> <p>Implement smart throttling</p> </li> <li> <p>Documentation</p> </li> <li>Document all custom alerts</li> <li>Keep runbooks updated</li> <li> <p>Train team on monitoring tools</p> </li> <li> <p>Continuous Improvement</p> </li> <li>Monitor false positive rate</li> <li>Adjust thresholds quarterly</li> <li>Add new metrics as needed</li> <li>Regular disaster recovery drills</li> </ol>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/","title":"Performance Critical Indexes Migration","text":""},{"location":"PERFORMANCE_INDEXES_MIGRATION/#overview","title":"Overview","text":"<p>Diese Migration f\u00fcgt alle fehlenden Performance-kritischen Indizes zur Datenbank hinzu. Die Indizes wurden basierend auf einer Analyse der h\u00e4ufigsten Query-Patterns in der Anwendung identifiziert.</p>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#warum-diese-indizes-wichtig-sind","title":"Warum diese Indizes wichtig sind","text":""},{"location":"PERFORMANCE_INDEXES_MIGRATION/#1-tenant-isolation-company_id","title":"1. Tenant Isolation (company_id)","text":"<ul> <li>Grund: Fast jede Query verwendet <code>company_id</code> aufgrund des TenantScope</li> <li>Auswirkung: Ohne Index w\u00fcrde jede Query einen Full Table Scan durchf\u00fchren</li> <li>Betroffene Tabellen: Alle tenant-spezifischen Tabellen</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#2-zeitbasierte-queries","title":"2. Zeitbasierte Queries","text":"<ul> <li>Grund: Viele Features filtern nach Datum/Zeit (heute, kommende Termine, etc.)</li> <li>Auswirkung: Sortierung und Filterung nach Zeit ist extrem h\u00e4ufig</li> <li>Wichtige Felder: <code>starts_at</code>, <code>ends_at</code>, <code>created_at</code></li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#3-phone-number-lookups","title":"3. Phone Number Lookups","text":"<ul> <li>Grund: Kundenidentifikation bei eingehenden Anrufen</li> <li>Auswirkung: Ohne Index m\u00fcsste bei jedem Anruf die gesamte customers Tabelle durchsucht werden</li> <li>Felder: <code>phone</code> in customers, <code>from_number</code>/<code>to_number</code> in calls</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#4-status-filtering","title":"4. Status Filtering","text":"<ul> <li>Grund: Viele Views filtern nach Status (best\u00e4tigt, abgesagt, etc.)</li> <li>Auswirkung: H\u00e4ufig in Kombination mit anderen Filtern verwendet</li> <li>Felder: <code>status</code> in appointments und calls</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#5-composite-indexes","title":"5. Composite Indexes","text":"<ul> <li>Grund: Optimierung f\u00fcr h\u00e4ufige Query-Kombinationen</li> <li>Beispiele:</li> <li><code>(company_id, starts_at)</code> - Termine eines Unternehmens nach Zeit</li> <li><code>(status, starts_at)</code> - Best\u00e4tigte zuk\u00fcnftige Termine</li> <li><code>(company_id, phone)</code> - Duplicate Detection</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#migration-ausfuhren","title":"Migration ausf\u00fchren","text":"<pre><code># Migration ausf\u00fchren\nphp artisan migrate\n\n# Bei gro\u00dfen Datenbanken mit --force\nphp artisan migrate --force\n\n# Performance vorher/nachher analysieren\nphp artisan askproai:analyze-performance\n</code></pre>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#performance-verbesserungen","title":"Performance-Verbesserungen","text":""},{"location":"PERFORMANCE_INDEXES_MIGRATION/#erwartete-verbesserungen","title":"Erwartete Verbesserungen:","text":"<ul> <li>Appointment Listings: 50-90% schneller</li> <li>Customer Phone Lookup: 80-95% schneller</li> <li>Dashboard Statistics: 60-80% schneller</li> <li>Call History: 70-85% schneller</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#speicherplatz","title":"Speicherplatz:","text":"<ul> <li>Die Indizes ben\u00f6tigen zus\u00e4tzlichen Speicherplatz (ca. 20-30% der Tabellengr\u00f6\u00dfe)</li> <li>Bei 100k Appointments: ~10-15 MB zus\u00e4tzlich</li> <li>Bei 1M Calls: ~100-150 MB zus\u00e4tzlich</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#monitoring","title":"Monitoring","text":"<p>Nach der Migration sollten Sie folgende Metriken \u00fcberwachen:</p> <ol> <li> <p>Query Performance:    <pre><code>-- Slow Queries \u00fcberwachen\nSHOW VARIABLES LIKE 'slow_query_log';\nSET GLOBAL slow_query_log = 'ON';\nSET GLOBAL long_query_time = 1;\n</code></pre></p> </li> <li> <p>Index Usage:    <pre><code>-- Pr\u00fcfen ob Indizes verwendet werden\nEXPLAIN SELECT * FROM appointments \nWHERE company_id = 1 \nAND starts_at &gt; NOW() \nAND status = 'confirmed';\n</code></pre></p> </li> <li> <p>Table Statistics:    <pre><code># Mit dem Analyze Command\nphp artisan askproai:analyze-performance --show-queries\n</code></pre></p> </li> </ol>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#rollback","title":"Rollback","text":"<p>Falls Probleme auftreten:</p> <pre><code># Migration r\u00fcckg\u00e4ngig machen\nphp artisan migrate:rollback\n\n# Nur diese spezifische Migration\nphp artisan migrate:rollback --step=1\n</code></pre>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#best-practices","title":"Best Practices","text":"<ol> <li>F\u00fchren Sie die Migration au\u00dferhalb der Hauptgesch\u00e4ftszeiten aus</li> <li> <p>Index-Erstellung kann bei gro\u00dfen Tabellen Zeit in Anspruch nehmen</p> </li> <li> <p>Backup vor der Migration <pre><code>php artisan askproai:backup --type=full\n</code></pre></p> </li> <li> <p>\u00dcberwachen Sie die Performance nach der Migration</p> </li> <li> <p>Stellen Sie sicher, dass die Indizes wie erwartet funktionieren</p> </li> <li> <p>Regelm\u00e4\u00dfige Wartung <pre><code>-- Statistiken aktualisieren\nANALYZE TABLE appointments;\nANALYZE TABLE calls;\nANALYZE TABLE customers;\n</code></pre></p> </li> </ol>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#troubleshooting","title":"Troubleshooting","text":""},{"location":"PERFORMANCE_INDEXES_MIGRATION/#migration-dauert-zu-lange","title":"Migration dauert zu lange","text":"<ul> <li>Bei sehr gro\u00dfen Tabellen kann die Index-Erstellung Zeit ben\u00f6tigen</li> <li>Verwenden Sie <code>pt-online-schema-change</code> f\u00fcr Zero-Downtime-Migrationen</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#duplicate-key-errors","title":"Duplicate Key Errors","text":"<ul> <li>Die Migration pr\u00fcft bereits existierende Indizes</li> <li>Falls dennoch Fehler auftreten, pr\u00fcfen Sie manuell mit <code>SHOW INDEX FROM table_name</code></li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#performance-verschlechtert-sich","title":"Performance verschlechtert sich","text":"<ul> <li>Pr\u00fcfen Sie mit EXPLAIN ob die richtigen Indizes verwendet werden</li> <li>M\u00f6glicherweise m\u00fcssen Query Hints angepasst werden</li> </ul>"},{"location":"PERFORMANCE_INDEXES_MIGRATION/#weitere-optimierungen","title":"Weitere Optimierungen","text":"<p>Nach dieser Migration k\u00f6nnen Sie weitere Optimierungen in Betracht ziehen:</p> <ol> <li>Partitionierung: F\u00fcr sehr gro\u00dfe Tabellen (&gt;10M Zeilen)</li> <li>Read Replicas: F\u00fcr Read-Heavy Workloads</li> <li>Query Cache: F\u00fcr h\u00e4ufig identische Queries</li> <li>Denormalisierung: F\u00fcr komplexe Aggregationen</li> </ol>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/","title":"Queue MCP Implementation Complete \u2705","text":""},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#ubersicht","title":"\u00dcbersicht","text":"<p>Die Queue MCP Server-Implementierung wurde erfolgreich abgeschlossen und bietet umfassende Queue-\u00dcberwachung und -Management-Funktionen f\u00fcr AskProAI.</p>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#implementierte-features","title":"Implementierte Features","text":""},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#1-queue-mcp-server-appservicesmcpqueuemcpserverphp","title":"1. Queue MCP Server (<code>app/Services/MCP/QueueMCPServer.php</code>)","text":"<ul> <li>Vollst\u00e4ndige Horizon-Integration</li> <li>Failed Job Management</li> <li>Worker-\u00dcberwachung</li> <li>Performance-Metriken</li> <li>Job-Suche und -Filterung</li> </ul>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#2-api-endpoints-alle-unter-apimcpqueue","title":"2. API Endpoints (alle unter <code>/api/mcp/queue/</code>)","text":"<ul> <li><code>GET overview</code> - Komplette Queue-\u00dcbersicht</li> <li><code>GET failed-jobs</code> - Fehlgeschlagene Jobs anzeigen</li> <li><code>GET recent-jobs</code> - Letzte Jobs anzeigen</li> <li><code>GET job/{id}</code> - Job-Details abrufen</li> <li><code>POST job/{id}/retry</code> - Job neu starten</li> <li><code>GET metrics</code> - Performance-Metriken</li> <li><code>GET workers</code> - Worker-Status</li> <li><code>POST search</code> - Jobs durchsuchen</li> </ul>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#3-controller-updates-apphttpcontrollersapimcpcontrollerphp","title":"3. Controller Updates (<code>app/Http/Controllers/Api/MCPController.php</code>)","text":"<ul> <li>Alle Queue-Endpoints hinzugef\u00fcgt</li> <li>Dependency Injection f\u00fcr QueueMCPServer</li> <li>Cache-Management integriert</li> </ul>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#4-routing-routesapiphp","title":"4. Routing (<code>routes/api.php</code>)","text":"<ul> <li>Alle Queue-Routes unter MCP-Prefix registriert</li> <li>Sanctum-Authentifizierung aktiviert</li> </ul>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#verwendung","title":"Verwendung","text":""},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#beispiel-anfragen-an-claude","title":"Beispiel-Anfragen an Claude:","text":"<pre><code>\"Claude, zeige mir alle fehlgeschlagenen Webhook-Jobs\"\n\"Warum ist der letzte Retell-Webhook fehlgeschlagen?\"\n\"Starte alle fehlgeschlagenen Jobs der letzten Stunde neu\"\n\"Wie ist die Queue-Performance heute?\"\n</code></pre>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#api-beispiele","title":"API-Beispiele:","text":"<pre><code># Queue-Status abrufen\ncurl -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  https://api.askproai.de/api/mcp/queue/overview\n\n# Fehlgeschlagene Jobs anzeigen\ncurl -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  https://api.askproai.de/api/mcp/queue/failed-jobs?limit=10\n\n# Job neu starten\ncurl -X POST -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  https://api.askproai.de/api/mcp/queue/job/123/retry\n</code></pre>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#test-ergebnisse","title":"Test-Ergebnisse","text":"<p>\u2705 Queue Overview funktioniert \u2705 230 Failed Jobs erkannt \u2705 Worker-Status korrekt (7 aktive Worker) \u2705 Horizon-Status: running \u2705 Redis-Integration funktioniert</p>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#nachste-schritte","title":"N\u00e4chste Schritte","text":"<ol> <li>Dashboard-Widget f\u00fcr Queue-Status erstellen</li> <li>Alerting bei zu vielen Failed Jobs</li> <li>Auto-Retry Strategien implementieren</li> <li>Queue-Performance Optimierung</li> </ol>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#dokumentation-updates","title":"Dokumentation Updates","text":"<ul> <li>\u2705 <code>MCP_COMPLETE_OVERVIEW.md</code> - Queue MCP hinzugef\u00fcgt</li> <li>\u2705 MCP Selection Matrix erweitert</li> <li>\u2705 Use Cases f\u00fcr Webhook-Debugging hinzugef\u00fcgt</li> <li>\u2705 Emergency Commands f\u00fcr Queue-Management</li> </ul>"},{"location":"QUEUE_MCP_IMPLEMENTATION_COMPLETE/#offene-todos","title":"Offene TODOs","text":"<p>Die folgenden High-Priority MCPs sollten als n\u00e4chstes implementiert werden:</p> <ol> <li>Customer Intelligence MCP - Kundenanalyse und -verhalten</li> <li>Business Analytics MCP - Umsatz und Conversion-Analysen</li> <li>Integration Health MCP - API-\u00dcberwachung aller externen Services</li> </ol> <p>Status: \u2705 Production Ready Implementiert von: Claude Datum: 2025-06-20</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/","title":"Retell Webhook MCP Migration Guide","text":""},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#overview","title":"Overview","text":"<p>This guide documents the migration of the RetellWebhookController to use the MCP (Modular Component Pattern) architecture. The new implementation provides better modularity, error handling, and tenant isolation.</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#key-changes","title":"Key Changes","text":""},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#1-architecture-migration","title":"1. Architecture Migration","text":"<p>Old Architecture: - Direct service calls to WebhookProcessor, CalcomV2Service - Manual tenant resolution - Mixed concerns (webhook processing, booking, availability)</p> <p>New MCP Architecture: - Uses MCPOrchestrator for service routing - MCPContextResolver for company/branch resolution - MCPBookingOrchestrator for booking logic - Clear separation of concerns</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#2-dependency-injection","title":"2. Dependency Injection","text":"<p>Old Controller: <pre><code>public function __construct(\n    WebhookProcessor $webhookProcessor, \n    ApiRateLimiter $rateLimiter\n)\n</code></pre></p> <p>New MCP Controller: <pre><code>public function __construct(\n    MCPOrchestrator $mcpOrchestrator,\n    MCPContextResolver $contextResolver,\n    MCPBookingOrchestrator $bookingOrchestrator,\n    ApiRateLimiter $rateLimiter\n)\n</code></pre></p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#3-context-resolution","title":"3. Context Resolution","text":"<p>Old Approach: <pre><code>$toNumber = $callData['call_inbound']['to_number'] ?? null;\n$company = Company::where('phone_number', $toNumber)-&gt;first();\nif (!$company) {\n    $company = Company::first(); // Fallback\n}\n</code></pre></p> <p>New MCP Approach: <pre><code>$context = $this-&gt;contextResolver-&gt;resolveFromPhone($toNumber);\nif (!$context['success']) {\n    // Handle with proper error or fallback\n}\n$this-&gt;contextResolver-&gt;setTenantContext($context['company']['id']);\n</code></pre></p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#4-service-calls","title":"4. Service Calls","text":"<p>Old Direct Service Calls: <pre><code>$calcomService = new CalcomV2Service($company-&gt;calcom_api_key);\n$availabilityService = new CalcomAvailabilityService($calcomService);\n$isAvailable = $availabilityService-&gt;isTimeSlotAvailable(...);\n</code></pre></p> <p>New MCP Service Calls: <pre><code>$mcpRequest = new MCPRequest(\n    service: 'calcom',\n    operation: 'checkAvailability',\n    params: [...],\n    tenantId: $context['company']['id'],\n    correlationId: $correlationId\n);\n$mcpResponse = $this-&gt;mcpOrchestrator-&gt;route($mcpRequest);\n</code></pre></p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#5-error-handling","title":"5. Error Handling","text":"<p>Old Error Handling: <pre><code>try {\n    // Process webhook\n} catch (\\Exception $e) {\n    Log::error('Failed to process webhook', [...]);\n    // Return success to avoid retries\n    return response()-&gt;json(['success' =&gt; true], 200);\n}\n</code></pre></p> <p>New MCP Error Handling: <pre><code>try {\n    $response = $this-&gt;processThroughMCP($request, $correlationId);\n    return $this-&gt;successResponse($response, $correlationId);\n} catch (\\App\\Exceptions\\WebhookSignatureException $e) {\n    return $this-&gt;errorResponse('Invalid signature', 401, $correlationId);\n} catch (\\Exception $e) {\n    // Proper error logging with correlation ID\n    // Still return success but with error details in dev\n    return $this-&gt;successResponse([\n        'processed' =&gt; false,\n        'error' =&gt; app()-&gt;environment('local') ? $e-&gt;getMessage() : 'Internal error'\n    ], $correlationId);\n}\n</code></pre></p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#migration-steps","title":"Migration Steps","text":""},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#1-update-routes","title":"1. Update Routes","text":"<p>Add the new MCP routes to your API routes:</p> <pre><code>// In routes/api.php\nrequire __DIR__.'/api-mcp.php';\n</code></pre> <p>Or manually add:</p> <pre><code>Route::prefix('mcp/retell')-&gt;middleware([\n    'throttle:webhook',\n    VerifyRetellSignature::class\n])-&gt;group(function () {\n    Route::post('/webhook', [RetellWebhookMCPController::class, 'processWebhook']);\n});\n</code></pre>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#2-update-retellai-configuration","title":"2. Update Retell.ai Configuration","text":"<p>Update your webhook URL in Retell.ai dashboard: - Old: <code>https://api.askproai.de/api/retell/webhook</code> - New: <code>https://api.askproai.de/api/mcp/retell/webhook</code></p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#3-enable-migration-mode-optional","title":"3. Enable Migration Mode (Optional)","text":"<p>For gradual migration, enable migration mode in config:</p> <pre><code>// In config/features.php\n'mcp_migration_mode' =&gt; true,\n</code></pre> <p>This will forward old webhook URLs to the new MCP controller.</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#4-update-environment-variables","title":"4. Update Environment Variables","text":"<p>No new environment variables required. The MCP system uses existing configurations.</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#5-test-the-migration","title":"5. Test the Migration","text":"<p>Run these tests to verify the migration:</p> <pre><code># Test webhook signature verification\ncurl -X POST https://api.askproai.de/api/mcp/retell/webhook \\\n  -H \"x-retell-signature: YOUR_SIGNATURE\" \\\n  -H \"Content-Type: application/json\" \\\n  -d @test-webhook-payload.json\n\n# Check MCP health\nphp artisan mcp:health\n\n# Monitor MCP metrics\nphp artisan mcp:monitor\n</code></pre>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#benefits-of-mcp-migration","title":"Benefits of MCP Migration","text":""},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#1-better-error-handling","title":"1. Better Error Handling","text":"<ul> <li>Centralized error handling in MCPOrchestrator</li> <li>Proper error propagation with correlation IDs</li> <li>Circuit breaker pattern for external services</li> </ul>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#2-improved-tenant-isolation","title":"2. Improved Tenant Isolation","text":"<ul> <li>Automatic tenant context resolution</li> <li>Secure multi-tenant operations</li> <li>No accidental data leakage</li> </ul>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#3-enhanced-monitoring","title":"3. Enhanced Monitoring","text":"<ul> <li>Built-in metrics collection</li> <li>Performance tracking per service</li> <li>Real-time health monitoring</li> </ul>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#4-easier-testing","title":"4. Easier Testing","text":"<ul> <li>Mock MCP services for unit tests</li> <li>Isolated component testing</li> <li>Better integration test support</li> </ul>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#5-scalability","title":"5. Scalability","text":"<ul> <li>Service-based architecture</li> <li>Easy to add new services</li> <li>Built-in rate limiting and quotas</li> </ul>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#rollback-plan","title":"Rollback Plan","text":"<p>If issues arise, you can quickly rollback:</p> <ol> <li>Update Retell.ai webhook URL back to old endpoint</li> <li>Disable migration mode in config</li> <li>Monitor old endpoint for any issues</li> </ol> <p>The old controller remains functional and unchanged.</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#monitoring","title":"Monitoring","text":"<p>Monitor the migration using:</p> <pre><code># View MCP metrics\nphp artisan mcp:metrics\n\n# Check webhook processing\ntail -f storage/logs/laravel.log | grep \"MCP Retell\"\n\n# View circuit breaker status\nphp artisan circuit-breaker:status\n</code></pre>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#issue-service-webhook-not-found","title":"Issue: \"Service 'webhook' not found\"","text":"<p>Solution: Ensure MCPServiceProvider is registered and WebhookMCPServer is properly instantiated.</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#issue-unable-to-resolve-tenant-id","title":"Issue: \"Unable to resolve tenant ID\"","text":"<p>Solution: Check that phone numbers are properly associated with branches in the phone_numbers table.</p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#issue-circuit-breaker-open","title":"Issue: \"Circuit breaker open\"","text":"<p>Solution: Check external service health (Cal.com, Retell.ai). Reset circuit breaker if needed: <pre><code>php artisan circuit-breaker:reset calcom\n</code></pre></p>"},{"location":"RETELL_WEBHOOK_MCP_MIGRATION_GUIDE/#future-enhancements","title":"Future Enhancements","text":"<ol> <li>Async Processing: Move to fully async webhook processing</li> <li>Event Sourcing: Store all webhook events for replay</li> <li>Advanced Analytics: Track conversion rates, booking patterns</li> <li>A/B Testing: Test different booking flows through MCP</li> </ol>"},{"location":"SENTRY_MCP_INTEGRATION/","title":"Sentry MCP Integration for Claude Code","text":"<p>This document explains how to use the Sentry MCP (Model Context Protocol) Server integration with Claude Code to debug and solve errors more efficiently.</p>"},{"location":"SENTRY_MCP_INTEGRATION/#overview","title":"Overview","text":"<p>The Sentry MCP Server allows Claude Code to directly access error data from Sentry, making it easier to: - View recent errors and exceptions - Analyze stack traces - Understand error context and breadcrumbs - Search for specific error patterns - Monitor application performance</p>"},{"location":"SENTRY_MCP_INTEGRATION/#setup","title":"Setup","text":""},{"location":"SENTRY_MCP_INTEGRATION/#1-configure-sentry-credentials","title":"1. Configure Sentry Credentials","text":"<p>Add the following to your <code>.env</code> file:</p> <pre><code># Basic Sentry Configuration\nSENTRY_LARAVEL_DSN=https://YOUR_DSN@sentry.io/PROJECT_ID\nSENTRY_ENVIRONMENT=production\n\n# MCP Server Configuration\nSENTRY_ORGANIZATION=your-org-name\nSENTRY_PROJECT=your-project-name\nSENTRY_AUTH_TOKEN=your-sentry-auth-token\n</code></pre>"},{"location":"SENTRY_MCP_INTEGRATION/#2-generate-sentry-auth-token","title":"2. Generate Sentry Auth Token","text":"<ol> <li>Go to Sentry.io \u2192 Settings \u2192 Account \u2192 API \u2192 Auth Tokens</li> <li>Create a new token with the following scopes:</li> <li><code>project:read</code></li> <li><code>event:read</code></li> <li><code>org:read</code></li> </ol>"},{"location":"SENTRY_MCP_INTEGRATION/#3-test-the-integration","title":"3. Test the Integration","text":"<pre><code># Test MCP Server info endpoint\ncurl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\\n  https://your-domain.com/api/mcp/sentry/info\n\n# List recent issues\ncurl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\\n  https://your-domain.com/api/mcp/sentry/issues\n</code></pre>"},{"location":"SENTRY_MCP_INTEGRATION/#available-mcp-endpoints","title":"Available MCP Endpoints","text":""},{"location":"SENTRY_MCP_INTEGRATION/#1-server-information","title":"1. Server Information","text":"<p><pre><code>GET /api/mcp/sentry/info\n</code></pre> Returns MCP server capabilities and configuration.</p>"},{"location":"SENTRY_MCP_INTEGRATION/#2-list-issues","title":"2. List Issues","text":"<p><pre><code>GET /api/mcp/sentry/issues\n</code></pre> Query parameters: - <code>limit</code> (int): Number of issues to return (1-100) - <code>sort</code> (string): Sort order (date, priority, freq, new) - <code>query</code> (string): Search query</p>"},{"location":"SENTRY_MCP_INTEGRATION/#3-get-issue-details","title":"3. Get Issue Details","text":"<p><pre><code>GET /api/mcp/sentry/issues/{issueId}\n</code></pre> Returns detailed information about a specific issue.</p>"},{"location":"SENTRY_MCP_INTEGRATION/#4-get-latest-event","title":"4. Get Latest Event","text":"<p><pre><code>GET /api/mcp/sentry/issues/{issueId}/latest-event\n</code></pre> Returns the latest event for an issue, including full stack trace.</p>"},{"location":"SENTRY_MCP_INTEGRATION/#5-search-issues","title":"5. Search Issues","text":"<p><pre><code>POST /api/mcp/sentry/issues/search\n</code></pre> Body: <pre><code>{\n  \"query\": \"error message or exception type\",\n  \"limit\": 25\n}\n</code></pre></p>"},{"location":"SENTRY_MCP_INTEGRATION/#6-performance-data","title":"6. Performance Data","text":"<p><pre><code>GET /api/mcp/sentry/performance\n</code></pre> Returns performance metrics for the application.</p>"},{"location":"SENTRY_MCP_INTEGRATION/#7-clear-cache","title":"7. Clear Cache","text":"<p><pre><code>POST /api/mcp/sentry/cache/clear\n</code></pre> Clears the MCP cache to fetch fresh data.</p>"},{"location":"SENTRY_MCP_INTEGRATION/#using-with-claude-code","title":"Using with Claude Code","text":"<p>When debugging errors with Claude Code, you can ask questions like:</p> <ul> <li>\"What are the most recent errors in production?\"</li> <li>\"Show me the stack trace for error ID ABC123\"</li> <li>\"Search for all database connection errors\"</li> <li>\"What errors are happening in the booking flow?\"</li> <li>\"Show me performance issues in the last 24 hours\"</li> </ul> <p>Claude Code will use the MCP Server to fetch relevant data from Sentry and help you understand and fix the issues.</p>"},{"location":"SENTRY_MCP_INTEGRATION/#configuration-options","title":"Configuration Options","text":"<p>In <code>config/mcp-sentry.php</code>:</p> <pre><code>'filters' =&gt; [\n    // Only show errors from last N days\n    'days_back' =&gt; env('MCP_SENTRY_DAYS_BACK', 7),\n\n    // Minimum error level to show\n    'min_level' =&gt; env('MCP_SENTRY_MIN_LEVEL', 'warning'),\n\n    // Exclude certain error types\n    'exclude_types' =&gt; [\n        'Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\NotFoundHttpException',\n    ],\n],\n</code></pre>"},{"location":"SENTRY_MCP_INTEGRATION/#security-considerations","title":"Security Considerations","text":"<ol> <li>The MCP endpoints are protected by Sanctum authentication</li> <li>Sentry auth tokens should never be exposed to the frontend</li> <li>Consider limiting MCP access to admin users only</li> <li>Regularly rotate Sentry auth tokens</li> </ol>"},{"location":"SENTRY_MCP_INTEGRATION/#troubleshooting","title":"Troubleshooting","text":""},{"location":"SENTRY_MCP_INTEGRATION/#failed-to-fetch-issues-from-sentry","title":"\"Failed to fetch issues from Sentry\"","text":"<ul> <li>Check that <code>SENTRY_AUTH_TOKEN</code> is set correctly</li> <li>Verify the token has the required scopes</li> <li>Check <code>storage/logs/laravel.log</code> for detailed error messages</li> </ul>"},{"location":"SENTRY_MCP_INTEGRATION/#cache-not-clearing","title":"\"Cache not clearing\"","text":"<ul> <li>Ensure Redis is running: <code>redis-cli ping</code></li> <li>Check cache configuration in <code>config/cache.php</code></li> </ul>"},{"location":"SENTRY_MCP_INTEGRATION/#no-issues-returned","title":"\"No issues returned\"","text":"<ul> <li>Verify <code>SENTRY_ORGANIZATION</code> and <code>SENTRY_PROJECT</code> match your Sentry setup</li> <li>Check the date filter in <code>MCP_SENTRY_DAYS_BACK</code></li> <li>Try lowering <code>MCP_SENTRY_MIN_LEVEL</code> to include more error types</li> </ul>"},{"location":"SENTRY_MCP_INTEGRATION/#example-usage-in-code","title":"Example Usage in Code","text":"<pre><code>// In your controller or service\nuse App\\Services\\MCP\\SentryMCPServer;\n\npublic function debugError(SentryMCPServer $sentry)\n{\n    // List recent issues\n    $issues = $sentry-&gt;listIssues(['limit' =&gt; 10]);\n\n    // Get specific issue details\n    $issue = $sentry-&gt;getIssue('1234567890');\n\n    // Get stack trace\n    $event = $sentry-&gt;getLatestEvent('1234567890');\n\n    // Search for specific errors\n    $dbErrors = $sentry-&gt;searchIssues('database connection');\n}\n</code></pre>"},{"location":"SENTRY_MCP_INTEGRATION/#best-practices","title":"Best Practices","text":"<ol> <li>Use descriptive error messages in your code to make searching easier</li> <li>Add context to errors using Sentry's context features</li> <li>Tag errors appropriately (e.g., by feature, severity, user impact)</li> <li>Monitor performance alongside errors for complete visibility</li> <li>Set up alerts in Sentry for critical errors</li> </ol>"},{"location":"SENTRY_MCP_INTEGRATION/#integration-with-filament-admin","title":"Integration with Filament Admin","text":"<p>A Sentry dashboard widget is planned for the Filament admin panel to show: - Recent errors summary - Error trends graph - Quick links to Sentry issues - Performance metrics</p> <p>This will provide a unified view of application health within the admin interface.</p>"},{"location":"SERVICE_ARCHITECTURE/","title":"AskProAI Service Architecture Documentation","text":"<p>Last Updated: 2025-06-17</p>"},{"location":"SERVICE_ARCHITECTURE/#overview","title":"Overview","text":"<p>This document provides a comprehensive overview of all service classes in the AskProAI platform, their responsibilities, and how they interact.</p>"},{"location":"SERVICE_ARCHITECTURE/#service-categories","title":"Service Categories","text":""},{"location":"SERVICE_ARCHITECTURE/#1-calendar-integration-services-calcom","title":"1. Calendar Integration Services (Cal.com)","text":""},{"location":"SERVICE_ARCHITECTURE/#calcomservicephp","title":"CalcomService.php","text":"<ul> <li>Purpose: Primary V1 API integration with Cal.com</li> <li>Key Methods: </li> <li><code>createBooking()</code> - Creates appointments in Cal.com</li> <li><code>getAvailability()</code> - Checks available time slots</li> <li><code>getEventTypes()</code> - Retrieves available event types</li> <li>Used By: ProcessRetellCallEndedJob, CalendarProviderFactory</li> <li>Status: Active, will be migrated to V2</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#calcomv2servicephp-recommended","title":"CalcomV2Service.php \u2b50 [RECOMMENDED]","text":"<ul> <li>Purpose: Modern V2 API integration with Cal.com</li> <li>Key Methods:</li> <li><code>getEventTypes()</code> - Retrieves event types with enhanced data</li> <li><code>getAvailableSlots()</code> - Advanced availability checking</li> <li><code>createBooking()</code> - Creates bookings with V2 features</li> <li><code>getBookings()</code> - Retrieves booking list</li> <li>Used By: CalcomApiTest, future implementations</li> <li>Status: Active, target for all new features</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#calcomimportservicephp","title":"CalcomImportService.php","text":"<ul> <li>Purpose: Imports event types from Cal.com to local database</li> <li>Key Methods:</li> <li><code>importEventTypes()</code> - Bulk import of event types</li> <li><code>mapEventTypeData()</code> - Maps Cal.com data to local models</li> <li>Used By: ImportCalcomEventTypesController, Admin UI</li> <li>Status: Critical for onboarding</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#calcomsyncservicephp","title":"CalcomSyncService.php","text":"<ul> <li>Purpose: Synchronizes data between Cal.com and local database</li> <li>Key Methods:</li> <li><code>checkAvailability()</code> - Real-time availability checks</li> <li><code>syncBookings()</code> - Two-way booking synchronization</li> <li><code>updateEventType()</code> - Syncs event type changes</li> <li>Used By: Multiple controllers, background jobs</li> <li>Status: Critical for real-time operations</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#calcomeventtypesyncservicephp","title":"CalcomEventTypeSyncService.php","text":"<ul> <li>Purpose: Specialized service for event type synchronization</li> <li>Key Methods:</li> <li><code>syncEventTypesForCompany()</code> - Company-wide sync</li> <li><code>validateApiKey()</code> - API key validation</li> <li><code>fetchEventTypes()</code> - Retrieves and caches event types</li> <li>Used By: CompanyResource, setup wizards</li> <li>Status: Essential for multi-tenant operations</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#calcomv2migrationservicephp","title":"CalcomV2MigrationService.php","text":"<ul> <li>Purpose: Handles migration from V1 to V2 API</li> <li>Key Methods:</li> <li><code>migrateEventTypes()</code> - Converts V1 event types to V2</li> <li><code>migrateBookings()</code> - Updates booking format</li> <li>Used By: Registered in AppServiceProvider</li> <li>Status: Transition service</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#2-phone-ai-services-retellai","title":"2. Phone AI Services (Retell.ai)","text":""},{"location":"SERVICE_ARCHITECTURE/#retellservicephp","title":"RetellService.php","text":"<ul> <li>Purpose: Primary integration with Retell.ai</li> <li>Key Methods:</li> <li><code>createCall()</code> - Initiates AI phone calls</li> <li><code>updateCall()</code> - Updates call status</li> <li><code>getCallDetails()</code> - Retrieves call information</li> <li>Used By: RetellWebhookController, various commands</li> <li>Status: Active, being migrated to V2</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#retellv2servicephp-recommended","title":"RetellV2Service.php \u2b50 [RECOMMENDED]","text":"<ul> <li>Purpose: Enhanced V2 integration with Retell.ai</li> <li>Key Methods:</li> <li><code>handleWebhook()</code> - Processes all webhook events</li> <li><code>processCallEnded()</code> - Handles completed calls</li> <li><code>extractAppointmentData()</code> - AI data extraction</li> <li>Used By: ProcessRetellCallEndedJob</li> <li>Status: Active, target for new features</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#retellagentservicephp","title":"RetellAgentService.php","text":"<ul> <li>Purpose: Manages AI agents configuration</li> <li>Key Methods:</li> <li><code>createAgent()</code> - Creates new AI agents</li> <li><code>updateAgent()</code> - Updates agent settings</li> <li><code>assignAgentToBranch()</code> - Branch-agent mapping</li> <li>Used By: BranchResource</li> <li>Status: Critical for multi-branch setup</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#3-core-business-services","title":"3. Core Business Services","text":""},{"location":"SERVICE_ARCHITECTURE/#appointmentbookingservicephp-primary","title":"AppointmentBookingService.php \u2b50 [PRIMARY]","text":"<ul> <li>Purpose: Central orchestrator for appointment bookings</li> <li>Key Methods:</li> <li><code>bookAppointment()</code> - Complete booking flow</li> <li><code>checkAvailability()</code> - Unified availability checking</li> <li><code>confirmBooking()</code> - Booking confirmation process</li> <li>Used By: Webhooks, API controllers, jobs</li> <li>Status: Primary booking service</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#smartbookingservicephp","title":"SmartBookingService.php \ud83c\udd95","text":"<ul> <li>Purpose: AI-enhanced booking with smart features</li> <li>Key Methods:</li> <li><code>handleIncomingCall()</code> - End-to-end call processing</li> <li><code>findBestSlot()</code> - AI-powered slot recommendation</li> <li><code>autoReschedule()</code> - Intelligent rescheduling</li> <li>Used By: Future AI features</li> <li>Status: Next-generation service</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#phonenumberresolverphp","title":"PhoneNumberResolver.php","text":"<ul> <li>Purpose: Maps phone numbers to companies/branches</li> <li>Key Methods:</li> <li><code>resolveBranch()</code> - Phone to branch mapping</li> <li><code>resolveCompany()</code> - Phone to company mapping</li> <li><code>cacheResolution()</code> - Performance optimization</li> <li>Used By: All incoming call handlers</li> <li>Status: Critical for multi-tenancy</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#calldatarefresherphp","title":"CallDataRefresher.php","text":"<ul> <li>Purpose: Updates call data from Retell.ai</li> <li>Key Methods:</li> <li><code>refreshCallData()</code> - Updates call information</li> <li><code>syncTranscripts()</code> - Retrieves call transcripts</li> <li><code>updateCallMetrics()</code> - Analytics data update</li> <li>Used By: Background jobs, admin UI</li> <li>Status: Essential for call tracking</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#4-communication-services","title":"4. Communication Services","text":""},{"location":"SERVICE_ARCHITECTURE/#notificationservicephp","title":"NotificationService.php","text":"<ul> <li>Purpose: Handles all notifications (email, SMS, WhatsApp)</li> <li>Key Methods:</li> <li><code>sendAppointmentConfirmation()</code> - Booking confirmations</li> <li><code>sendReminder()</code> - Appointment reminders</li> <li><code>sendCancellation()</code> - Cancellation notices</li> <li>Used By: All booking-related processes</li> <li>Status: Active, SMS/WhatsApp pending</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#emailservicephp","title":"EmailService.php","text":"<ul> <li>Purpose: Email-specific functionality</li> <li>Key Methods:</li> <li><code>sendTransactionalEmail()</code> - Transactional emails</li> <li><code>sendBulkEmail()</code> - Marketing emails</li> <li><code>trackEmailStatus()</code> - Delivery tracking</li> <li>Used By: NotificationService</li> <li>Status: Fully functional</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#5-payment-billing-services","title":"5. Payment &amp; Billing Services","text":""},{"location":"SERVICE_ARCHITECTURE/#stripeservicephp","title":"StripeService.php","text":"<ul> <li>Purpose: Stripe payment integration</li> <li>Key Methods:</li> <li><code>createCustomer()</code> - Customer management</li> <li><code>createSubscription()</code> - Subscription handling</li> <li><code>processPayment()</code> - Payment processing</li> <li>Used By: Billing controllers</li> <li>Status: Basic implementation</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#pricingservicephp","title":"PricingService.php","text":"<ul> <li>Purpose: Dynamic pricing calculations</li> <li>Key Methods:</li> <li><code>calculatePrice()</code> - Price computation</li> <li><code>applyDiscounts()</code> - Discount logic</li> <li><code>getTierPricing()</code> - Tiered pricing</li> <li>Used By: Quote generation</li> <li>Status: Ready for expansion</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#service-interaction-patterns","title":"Service Interaction Patterns","text":""},{"location":"SERVICE_ARCHITECTURE/#appointment-booking-flow","title":"Appointment Booking Flow","text":"<pre><code>1. RetellWebhookController receives call\n   \u2193\n2. PhoneNumberResolver identifies branch\n   \u2193\n3. RetellV2Service processes call data\n   \u2193\n4. AppointmentBookingService orchestrates:\n   - CalcomSyncService checks availability\n   - Customer creation/lookup\n   - CalcomV2Service creates booking\n   \u2193\n5. NotificationService sends confirmation\n</code></pre>"},{"location":"SERVICE_ARCHITECTURE/#event-type-synchronization","title":"Event Type Synchronization","text":"<pre><code>1. Admin triggers sync in UI\n   \u2193\n2. CalcomEventTypeSyncService fetches from Cal.com\n   \u2193\n3. CalcomImportService imports to database\n   \u2193\n4. Staff assignments updated\n   \u2193\n5. Cache refreshed\n</code></pre>"},{"location":"SERVICE_ARCHITECTURE/#best-practices","title":"Best Practices","text":"<ol> <li>Use V2 Services: Prefer CalcomV2Service and RetellV2Service for new features</li> <li>Service Boundaries: Keep services focused on single responsibility</li> <li>Error Handling: All services should implement comprehensive error handling</li> <li>Logging: Use structured logging for debugging</li> <li>Caching: Implement caching for frequently accessed data</li> <li>Testing: Each service should have corresponding tests</li> </ol>"},{"location":"SERVICE_ARCHITECTURE/#migration-roadmap","title":"Migration Roadmap","text":""},{"location":"SERVICE_ARCHITECTURE/#short-term-1-2-weeks","title":"Short Term (1-2 weeks)","text":"<ul> <li>Complete migration from CalcomService to CalcomV2Service</li> <li>Unify RetellService and RetellV2Service</li> <li>Implement comprehensive logging</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#medium-term-1-month","title":"Medium Term (1 month)","text":"<ul> <li>Add SMS/WhatsApp to NotificationService</li> <li>Enhance StripeService for full billing</li> <li>Build automated agent provisioning</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#long-term-3-months","title":"Long Term (3 months)","text":"<ul> <li>Implement SmartBookingService AI features</li> <li>Add multi-language support</li> <li>Build customer self-service portal</li> </ul>"},{"location":"SERVICE_ARCHITECTURE/#monitoring-maintenance","title":"Monitoring &amp; Maintenance","text":"<ul> <li>All services log to <code>/storage/logs/services/</code></li> <li>Performance metrics tracked in database</li> <li>Health checks available via <code>/api/health</code></li> <li>Service status dashboard in admin panel</li> </ul> <p>For questions or updates to this documentation, contact: dev@askproai.de</p>"},{"location":"STRUCTURED_LOGGER_GUIDE/","title":"StructuredLogger Usage Guide","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#overview","title":"Overview","text":"<p>The StructuredLogger service provides a comprehensive logging solution for AskProAI that: - Automatically includes correlation IDs for request tracing - Logs API calls to the ApiCallLog model for monitoring - Provides structured logging for booking flows - Includes user, IP, and request context automatically - Supports different log channels for different purposes - Integrates seamlessly with the existing logging infrastructure</p>"},{"location":"STRUCTURED_LOGGER_GUIDE/#quick-start","title":"Quick Start","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#1-using-the-facade","title":"1. Using the Facade","text":"<pre><code>use App\\Facades\\StructuredLog;\n\n// Simple logging\nStructuredLog::info('Processing appointment request');\nStructuredLog::success('Appointment created successfully');\nStructuredLog::failure('Failed to create appointment');\nStructuredLog::warning('Slot almost fully booked');\n\n// Log with context\nStructuredLog::info('Customer lookup', [\n    'phone' =&gt; '+49123456789',\n    'method' =&gt; 'phone_number'\n]);\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#2-using-the-trait-in-services","title":"2. Using the Trait in Services","text":"<pre><code>use App\\Services\\Traits\\LogsStructured;\n\nclass MyService\n{\n    use LogsStructured;\n\n    public function processRequest()\n    {\n        $this-&gt;logInfo('Starting request processing');\n\n        try {\n            // Your logic here\n            $this-&gt;logSuccess('Request processed successfully');\n        } catch (\\Exception $e) {\n            $this-&gt;logError($e, ['context' =&gt; 'request_processing']);\n        }\n    }\n}\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#core-features","title":"Core Features","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#1-correlation-ids","title":"1. Correlation IDs","text":"<p>Every request automatically gets a correlation ID that's included in all logs:</p> <pre><code>// Get current correlation ID\n$correlationId = StructuredLog::getCorrelationId();\n\n// Set custom correlation ID (usually not needed)\nStructuredLog::setCorrelationId('custom-id-123');\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#2-booking-flow-logging","title":"2. Booking Flow Logging","text":"<p>Track every step of the booking process:</p> <pre><code>// Log booking steps\nStructuredLog::logBookingFlow('booking_initiated', [\n    'customer_id' =&gt; $customerId,\n    'service_id' =&gt; $serviceId,\n    'requested_time' =&gt; $requestedTime,\n]);\n\nStructuredLog::logBookingFlow('availability_checked', [\n    'available' =&gt; true,\n    'slots_found' =&gt; 5,\n]);\n\nStructuredLog::logBookingFlow('appointment_created', [\n    'appointment_id' =&gt; $appointment-&gt;id,\n    'confirmation_number' =&gt; $appointment-&gt;confirmation_number,\n]);\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#3-api-call-logging","title":"3. API Call Logging","text":"<p>Automatically log all external API calls with timing:</p> <pre><code>// Using the trait\n$apiLogger = $this-&gt;logApiCall('/v2/bookings', 'POST', [\n    'name' =&gt; 'John Doe',\n    'email' =&gt; 'john@example.com',\n    'eventTypeId' =&gt; 123,\n]);\n\ntry {\n    $response = Http::post('https://api.cal.com/v2/bookings', $data);\n\n    if ($response-&gt;successful()) {\n        $apiLogger-&gt;success($response);\n    } else {\n        $apiLogger-&gt;failure($response, 'API returned error');\n    }\n} catch (\\Exception $e) {\n    $apiLogger-&gt;exception($e);\n}\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#4-webhook-logging","title":"4. Webhook Logging","text":"<p>Log incoming webhooks with automatic context:</p> <pre><code>StructuredLog::logWebhook('retell', 'call_ended', $payload, [\n    'signature_valid' =&gt; true,\n    'call_duration' =&gt; 120,\n]);\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#5-performance-logging","title":"5. Performance Logging","text":"<p>Track performance metrics:</p> <pre><code>$startTime = microtime(true);\n\n// Do some work...\n\n$duration = microtime(true) - $startTime;\n\nStructuredLog::logPerformance('data_import', $duration, [\n    'records_processed' =&gt; 1000,\n    'records_per_second' =&gt; 1000 / $duration,\n]);\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#6-security-event-logging","title":"6. Security Event Logging","text":"<p>Log security-related events:</p> <pre><code>StructuredLog::logSecurity('invalid_api_key', 'warning', [\n    'api_key_prefix' =&gt; substr($apiKey, 0, 8) . '...',\n    'ip_address' =&gt; request()-&gt;ip(),\n]);\n\nStructuredLog::logSecurity('multiple_failed_logins', 'critical', [\n    'user_email' =&gt; $email,\n    'attempts' =&gt; 5,\n]);\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#log-channels","title":"Log Channels","text":"<p>The following channels are configured:</p> <ul> <li><code>booking_flow</code> - Booking process steps</li> <li><code>api</code> - General API calls</li> <li><code>calcom</code> - Cal.com specific logs</li> <li><code>retell</code> - Retell.ai specific logs</li> <li><code>webhooks</code> - Incoming webhooks</li> <li><code>critical</code> - Critical errors</li> <li><code>slow_queries</code> - Performance issues</li> </ul>"},{"location":"STRUCTURED_LOGGER_GUIDE/#database-storage","title":"Database Storage","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#apicalllog-model","title":"ApiCallLog Model","text":"<p>All API calls are automatically stored in the <code>api_call_logs</code> table:</p> <pre><code>// Query API call logs\nuse App\\Models\\ApiCallLog;\n\n// Get recent Cal.com errors\n$errors = ApiCallLog::forService('calcom')\n    -&gt;failed()\n    -&gt;latest()\n    -&gt;take(10)\n    -&gt;get();\n\n// Get statistics\n$stats = ApiCallLog::getServiceStats('calcom', now()-&gt;subDay(), now());\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#bookingflowlog-table","title":"BookingFlowLog Table","text":"<p>Booking flow steps are stored in <code>booking_flow_logs</code>:</p> <pre><code>SELECT step, COUNT(*) as count, AVG(JSON_EXTRACT(context, '$.duration_ms')) as avg_duration\nFROM booking_flow_logs\nWHERE company_id = ?\n  AND created_at &gt;= DATE_SUB(NOW(), INTERVAL 1 DAY)\nGROUP BY step;\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#middleware-setup","title":"Middleware Setup","text":"<p>The <code>CorrelationIdMiddleware</code> is automatically applied to all routes. To add it manually:</p> <pre><code>// In routes/api.php or specific route group\nRoute::middleware(['correlation.id'])-&gt;group(function () {\n    // Your routes\n});\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#best-practices","title":"Best Practices","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#1-always-include-context","title":"1. Always Include Context","text":"<pre><code>// Bad\nStructuredLog::info('User logged in');\n\n// Good\nStructuredLog::info('User logged in', [\n    'user_id' =&gt; $user-&gt;id,\n    'login_method' =&gt; 'email',\n    'ip_address' =&gt; request()-&gt;ip(),\n]);\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#2-use-appropriate-log-levels","title":"2. Use Appropriate Log Levels","text":"<ul> <li><code>debug</code> - Detailed debugging information</li> <li><code>info</code> - Interesting events (user logs in, appointment created)</li> <li><code>warning</code> - Exceptional occurrences that are not errors</li> <li><code>error</code> - Runtime errors that need attention</li> <li><code>critical</code> - Critical problems that need immediate action</li> </ul>"},{"location":"STRUCTURED_LOGGER_GUIDE/#3-sensitive-data-protection","title":"3. Sensitive Data Protection","text":"<p>The logger automatically masks sensitive fields: - password - api_key - token - secret - credit_card - authorization - bearer</p>"},{"location":"STRUCTURED_LOGGER_GUIDE/#4-performance-considerations","title":"4. Performance Considerations","text":"<pre><code>// For high-frequency operations, consider sampling\nif (rand(1, 100) === 1) { // Log 1% of requests\n    StructuredLog::logPerformance('high_frequency_operation', $duration);\n}\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#monitoring-and-debugging","title":"Monitoring and Debugging","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#finding-related-logs","title":"Finding Related Logs","text":"<pre><code>// Get all logs for a correlation ID\n$correlationId = 'abc-123-def';\n\n// In application\n$logs = DB::table('booking_flow_logs')\n    -&gt;where('correlation_id', $correlationId)\n    -&gt;orderBy('created_at')\n    -&gt;get();\n\n// In log files\ngrep \"abc-123-def\" storage/logs/*.log\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#creating-dashboards","title":"Creating Dashboards","text":"<pre><code>-- Booking funnel analysis\nSELECT \n    step,\n    COUNT(*) as total,\n    COUNT(DISTINCT correlation_id) as unique_sessions,\n    AVG(TIMESTAMPDIFF(SECOND, created_at, \n        LEAD(created_at) OVER (PARTITION BY correlation_id ORDER BY created_at)\n    )) as avg_seconds_to_next_step\nFROM booking_flow_logs\nWHERE created_at &gt;= DATE_SUB(NOW(), INTERVAL 1 DAY)\nGROUP BY step\nORDER BY total DESC;\n</code></pre>"},{"location":"STRUCTURED_LOGGER_GUIDE/#migration-guide","title":"Migration Guide","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#updating-existing-services","title":"Updating Existing Services","text":"<ol> <li> <p>Add the trait: <pre><code>use App\\Services\\Traits\\LogsStructured;\n\nclass YourService\n{\n    use LogsStructured;\n</code></pre></p> </li> <li> <p>Replace Log::info() calls: <pre><code>// Before\nLog::info('API call to Cal.com', ['endpoint' =&gt; '/bookings']);\n\n// After\n$this-&gt;logInfo('API call to Cal.com', ['endpoint' =&gt; '/bookings']);\n</code></pre></p> </li> <li> <p>Add API call logging: <pre><code>// Wrap API calls\n$apiLogger = $this-&gt;logApiCall('/bookings', 'POST', $data);\ntry {\n    $response = $this-&gt;makeApiCall($data);\n    $apiLogger-&gt;success($response);\n} catch (\\Exception $e) {\n    $apiLogger-&gt;exception($e);\n}\n</code></pre></p> </li> </ol>"},{"location":"STRUCTURED_LOGGER_GUIDE/#troubleshooting","title":"Troubleshooting","text":""},{"location":"STRUCTURED_LOGGER_GUIDE/#logs-not-appearing","title":"Logs not appearing","text":"<ol> <li>Check the channel configuration in <code>config/logging.php</code></li> <li>Verify permissions on log files</li> <li>Check if the channel exists: <code>config('logging.channels.your_channel')</code></li> </ol>"},{"location":"STRUCTURED_LOGGER_GUIDE/#performance-impact","title":"Performance impact","text":"<p>The logger is designed to be lightweight, but for high-traffic endpoints:</p> <ol> <li>Use async logging for non-critical logs</li> <li>Consider batching API call logs</li> <li>Implement log rotation policies</li> </ol>"},{"location":"STRUCTURED_LOGGER_GUIDE/#missing-correlation-ids","title":"Missing correlation IDs","text":"<p>Ensure the <code>CorrelationIdMiddleware</code> is registered:</p> <pre><code>// In app/Http/Kernel.php or bootstrap/app.php\n'api' =&gt; [\n    \\App\\Http\\Middleware\\CorrelationIdMiddleware::class,\n    // other middleware\n],\n</code></pre>"},{"location":"TESTING_STRATEGY/","title":"AskProAI Testing Strategy","text":""},{"location":"TESTING_STRATEGY/#overview","title":"Overview","text":"<p>This document outlines the comprehensive testing strategy for the AskProAI platform, covering unit tests, integration tests, E2E tests, and performance testing.</p>"},{"location":"TESTING_STRATEGY/#test-levels","title":"Test Levels","text":""},{"location":"TESTING_STRATEGY/#1-unit-tests","title":"1. Unit Tests","text":"<p>Focus on testing individual components in isolation.</p> <p>Coverage Areas: - Services (CalcomV2Service, RetellV2Service, etc.) - Models and their relationships - Utilities and helpers - Validators and formatters</p> <p>Key Test Files: - <code>tests/Unit/CalcomV2ServiceTest.php</code> - <code>tests/Unit/PhoneNumberValidatorTest.php</code> - <code>tests/Unit/MockRetellServiceTest.php</code> - <code>tests/Unit/CriticalFixesUnitTest.php</code></p> <p>Running Unit Tests: <pre><code>php artisan test --testsuite=Unit\nphp artisan test --testsuite=Unit --parallel\n</code></pre></p>"},{"location":"TESTING_STRATEGY/#2-integration-tests","title":"2. Integration Tests","text":"<p>Test interaction between multiple components.</p> <p>Coverage Areas: - Service interactions - Database transactions - External API mocking - Queue job processing</p> <p>Key Test Files: - <code>tests/Integration/BookingServiceIntegrationTest.php</code> - <code>tests/Integration/WebhookProcessingTest.php</code> - <code>tests/Integration/CalcomIntegrationTest.php</code></p> <p>Running Integration Tests: <pre><code>php artisan test --testsuite=Integration\n</code></pre></p>"},{"location":"TESTING_STRATEGY/#3-end-to-end-e2e-tests","title":"3. End-to-End (E2E) Tests","text":"<p>Test complete user workflows from start to finish.</p> <p>Coverage Areas: - Complete booking flow (phone \u2192 appointment) - Webhook processing chains - Multi-step processes - Error scenarios</p> <p>Key Test Files: - <code>tests/E2E/BookingFlowCalcomV2E2ETest.php</code> - <code>tests/E2E/PhoneToAppointmentFlowTest.php</code> - <code>tests/E2E/ConcurrentBookingStressTest.php</code></p> <p>Running E2E Tests: <pre><code>php artisan test --testsuite=E2E\n</code></pre></p>"},{"location":"TESTING_STRATEGY/#4-performance-tests","title":"4. Performance Tests","text":"<p>Ensure system meets performance requirements.</p> <p>Coverage Areas: - Concurrent request handling - Database query performance - API response times - Memory usage</p> <p>Key Test Files: - <code>tests/E2E/ConcurrentBookingStressTest.php</code> - Performance assertions in E2E tests</p> <p>Running Performance Tests: <pre><code>php artisan test --filter=performance\n</code></pre></p>"},{"location":"TESTING_STRATEGY/#test-data-strategy","title":"Test Data Strategy","text":""},{"location":"TESTING_STRATEGY/#1-factories","title":"1. Factories","text":"<p>Use Laravel factories for consistent test data generation.</p> <pre><code>// Create test company with branches\n$company = Company::factory()\n    -&gt;has(Branch::factory()-&gt;count(3))\n    -&gt;has(Staff::factory()-&gt;count(5))\n    -&gt;create();\n</code></pre>"},{"location":"TESTING_STRATEGY/#2-seeders","title":"2. Seeders","text":"<p>Special seeders for test environments: - <code>TestDataSeeder</code> - Basic test data - <code>PerformanceTestSeeder</code> - Large datasets - <code>E2ETestSeeder</code> - Complete scenarios</p>"},{"location":"TESTING_STRATEGY/#3-mock-services","title":"3. Mock Services","text":"<p>Replace external services with mocks: - <code>MockCalcomV2Client</code> - Cal.com API mock - <code>MockRetellService</code> - Retell.ai API mock - <code>Mail::fake()</code> - Email testing - <code>Queue::fake()</code> - Queue testing</p>"},{"location":"TESTING_STRATEGY/#test-environment-configuration","title":"Test Environment Configuration","text":""},{"location":"TESTING_STRATEGY/#phpunit-configuration","title":"PHPUnit Configuration","text":"<pre><code>&lt;phpunit&gt;\n    &lt;testsuites&gt;\n        &lt;testsuite name=\"Unit\"&gt;\n            &lt;directory&gt;tests/Unit&lt;/directory&gt;\n        &lt;/testsuite&gt;\n        &lt;testsuite name=\"Integration\"&gt;\n            &lt;directory&gt;tests/Integration&lt;/directory&gt;\n        &lt;/testsuite&gt;\n        &lt;testsuite name=\"Feature\"&gt;\n            &lt;directory&gt;tests/Feature&lt;/directory&gt;\n        &lt;/testsuite&gt;\n        &lt;testsuite name=\"E2E\"&gt;\n            &lt;directory&gt;tests/E2E&lt;/directory&gt;\n        &lt;/testsuite&gt;\n    &lt;/testsuites&gt;\n    &lt;php&gt;\n        &lt;env name=\"APP_ENV\" value=\"testing\"/&gt;\n        &lt;env name=\"DB_CONNECTION\" value=\"sqlite\"/&gt;\n        &lt;env name=\"DB_DATABASE\" value=\":memory:\"/&gt;\n        &lt;env name=\"QUEUE_CONNECTION\" value=\"sync\"/&gt;\n        &lt;env name=\"CACHE_DRIVER\" value=\"array\"/&gt;\n    &lt;/php&gt;\n&lt;/phpunit&gt;\n</code></pre>"},{"location":"TESTING_STRATEGY/#test-database","title":"Test Database","text":"<ul> <li>SQLite in-memory for speed</li> <li>Migrations run before each test</li> <li>Transaction rollback after each test</li> </ul>"},{"location":"TESTING_STRATEGY/#mock-strategy","title":"Mock Strategy","text":""},{"location":"TESTING_STRATEGY/#external-apis","title":"External APIs","text":"<p>All external APIs should be mocked in tests:</p> <pre><code>// Mock Cal.com API\n$this-&gt;app-&gt;bind(CalcomV2Client::class, function () {\n    return new MockCalcomV2Client();\n});\n\n// Mock Retell API\n$this-&gt;app-&gt;bind(RetellV2Service::class, function () {\n    return new MockRetellService();\n});\n</code></pre>"},{"location":"TESTING_STRATEGY/#time-based-testing","title":"Time-based Testing","text":"<p>Use Carbon's test helpers:</p> <pre><code>// Freeze time\nCarbon::setTestNow('2024-01-15 10:00:00');\n\n// Travel to future\n$this-&gt;travel(5)-&gt;minutes();\n</code></pre>"},{"location":"TESTING_STRATEGY/#continuous-integration","title":"Continuous Integration","text":""},{"location":"TESTING_STRATEGY/#github-actions-workflow","title":"GitHub Actions Workflow","text":"<pre><code>name: Tests\non: [push, pull_request]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Setup PHP\n        uses: shivammathur/setup-php@v2\n      - name: Install Dependencies\n        run: composer install\n      - name: Run Tests\n        run: php artisan test --parallel\n      - name: Upload Coverage\n        uses: codecov/codecov-action@v1\n</code></pre>"},{"location":"TESTING_STRATEGY/#pre-commit-hooks","title":"Pre-commit Hooks","text":"<pre><code>#!/bin/sh\n# .git/hooks/pre-commit\n\n# Run tests before commit\nphp artisan test --testsuite=Unit --stop-on-failure\n\n# Check code style\n./vendor/bin/pint --test\n</code></pre>"},{"location":"TESTING_STRATEGY/#test-scenarios","title":"Test Scenarios","text":""},{"location":"TESTING_STRATEGY/#critical-business-flows","title":"Critical Business Flows","text":""},{"location":"TESTING_STRATEGY/#1-appointment-booking-flow","title":"1. Appointment Booking Flow","text":"<pre><code>1. Receive Retell webhook (call ended)\n2. Extract customer information\n3. Check availability via Cal.com\n4. Create appointment\n5. Send confirmation email\n</code></pre>"},{"location":"TESTING_STRATEGY/#2-webhook-deduplication","title":"2. Webhook Deduplication","text":"<pre><code>1. Receive duplicate webhook\n2. Check Redis for existing key\n3. Return cached response\n4. Verify no duplicate processing\n</code></pre>"},{"location":"TESTING_STRATEGY/#3-multi-tenancy-isolation","title":"3. Multi-Tenancy Isolation","text":"<pre><code>1. Create data for Company A\n2. Create data for Company B\n3. Verify Company A cannot access Company B data\n4. Test with different user contexts\n</code></pre>"},{"location":"TESTING_STRATEGY/#error-scenarios","title":"Error Scenarios","text":""},{"location":"TESTING_STRATEGY/#1-external-api-failures","title":"1. External API Failures","text":"<ul> <li>Cal.com timeout</li> <li>Retell.ai rate limit</li> <li>Network errors</li> <li>Invalid responses</li> </ul>"},{"location":"TESTING_STRATEGY/#2-data-integrity","title":"2. Data Integrity","text":"<ul> <li>Concurrent bookings</li> <li>Race conditions</li> <li>Transaction rollbacks</li> <li>Lock timeouts</li> </ul>"},{"location":"TESTING_STRATEGY/#3-security","title":"3. Security","text":"<ul> <li>Invalid signatures</li> <li>Unauthorized access</li> <li>SQL injection attempts</li> <li>XSS prevention</li> </ul>"},{"location":"TESTING_STRATEGY/#performance-benchmarks","title":"Performance Benchmarks","text":""},{"location":"TESTING_STRATEGY/#response-time-targets","title":"Response Time Targets","text":"<ul> <li>API endpoints: &lt; 200ms (p95)</li> <li>Webhook processing: &lt; 100ms</li> <li>Database queries: &lt; 50ms</li> <li>External API calls: &lt; 2s with timeout</li> </ul>"},{"location":"TESTING_STRATEGY/#load-testing","title":"Load Testing","text":"<pre><code># Using Apache Bench\nab -n 1000 -c 10 https://api.askproai.de/api/health\n\n# Using Locust\nlocust -f tests/LoadTests/booking_flow.py --host=https://api.askproai.de\n</code></pre>"},{"location":"TESTING_STRATEGY/#test-maintenance","title":"Test Maintenance","text":""},{"location":"TESTING_STRATEGY/#best-practices","title":"Best Practices","text":"<ol> <li>Keep tests fast: Use mocks, avoid sleep()</li> <li>Keep tests isolated: No dependencies between tests</li> <li>Keep tests readable: Clear names, arrange-act-assert</li> <li>Keep tests maintainable: Use factories, avoid hardcoded values</li> </ol>"},{"location":"TESTING_STRATEGY/#regular-tasks","title":"Regular Tasks","text":"<ul> <li>Weekly: Review failing tests</li> <li>Monthly: Update test data</li> <li>Quarterly: Performance baseline update</li> <li>Yearly: Test strategy review</li> </ul>"},{"location":"TESTING_STRATEGY/#debugging-failed-tests","title":"Debugging Failed Tests","text":""},{"location":"TESTING_STRATEGY/#local-debugging","title":"Local Debugging","text":"<pre><code># Run specific test with details\nphp artisan test --filter=test_can_book_appointment -vvv\n\n# Stop on first failure\nphp artisan test --stop-on-failure\n\n# With Xdebug\nXDEBUG_MODE=debug php artisan test\n</code></pre>"},{"location":"TESTING_STRATEGY/#ci-debugging","title":"CI Debugging","text":"<ul> <li>Check GitHub Actions logs</li> <li>Download artifacts</li> <li>Re-run with SSH access</li> <li>Use <code>ray()</code> for debugging</li> </ul>"},{"location":"TESTING_STRATEGY/#coverage-requirements","title":"Coverage Requirements","text":""},{"location":"TESTING_STRATEGY/#minimum-coverage","title":"Minimum Coverage","text":"<ul> <li>Overall: 80%</li> <li>Critical paths: 95%</li> <li>New code: 90%</li> </ul>"},{"location":"TESTING_STRATEGY/#coverage-reports","title":"Coverage Reports","text":"<pre><code># Generate HTML report\nphp artisan test --coverage-html coverage\n\n# Generate Clover report\nphp artisan test --coverage-clover coverage.xml\n</code></pre>"},{"location":"TESTING_STRATEGY/#testing-checklist","title":"Testing Checklist","text":""},{"location":"TESTING_STRATEGY/#before-deployment","title":"Before Deployment","text":"<ul> <li>[ ] All tests passing</li> <li>[ ] Coverage meets requirements</li> <li>[ ] Performance tests pass</li> <li>[ ] Security tests pass</li> <li>[ ] E2E tests pass</li> <li>[ ] No console.log or dd() statements</li> <li>[ ] Mocks disabled for production</li> </ul>"},{"location":"TESTING_STRATEGY/#after-deployment","title":"After Deployment","text":"<ul> <li>[ ] Smoke tests pass</li> <li>[ ] Health checks green</li> <li>[ ] No error spike in logs</li> <li>[ ] Performance metrics normal</li> </ul> <p>Last Updated: 2025-06-17</p>"},{"location":"TROUBLESHOOTING_GUIDE/","title":"AskProAI Troubleshooting Guide","text":""},{"location":"TROUBLESHOOTING_GUIDE/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"TROUBLESHOOTING_GUIDE/#1-booking-flow-issues","title":"1. Booking Flow Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-time-slot-no-longer-available-error","title":"Problem: \"Time slot no longer available\" error","text":"<p>Symptoms: - Customer gets error when trying to book - Slot was shown as available but booking fails</p> <p>Possible Causes: 1. Race condition - another booking took the slot 2. Stale cache data 3. Cal.com sync delay</p> <p>Solutions: <pre><code>-- Check for stuck locks\nSELECT * FROM appointment_locks \nWHERE expires_at &lt; NOW() \nAND branch_id = ?;\n\n-- Clean expired locks\nDELETE FROM appointment_locks WHERE expires_at &lt; NOW();\n</code></pre></p> <pre><code># Clear availability cache\nphp artisan cache:clear --tags=availability\n\n# Force Cal.com sync\nphp artisan calcom:sync-availability --branch=1\n</code></pre>"},{"location":"TROUBLESHOOTING_GUIDE/#problem-duplicate-bookings-created","title":"Problem: Duplicate bookings created","text":"<p>Symptoms: - Same appointment appears multiple times - Customer receives multiple confirmations</p> <p>Possible Causes: 1. Webhook processed multiple times 2. Frontend retry without idempotency 3. Queue worker issues</p> <p>Solutions: <pre><code># Check webhook deduplication\nredis-cli\n&gt; KEYS webhook:processing:*\n&gt; TTL webhook:processing:xyz\n\n# Check for duplicate webhooks in logs\ngrep \"Webhook already processed\" storage/logs/laravel.log | tail -20\n\n# Manually mark webhook as processed\nphp artisan webhook:mark-processed &lt;idempotency-key&gt;\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#2-calcom-integration-issues","title":"2. Cal.com Integration Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-calcom-api-returns-403-forbidden","title":"Problem: Cal.com API returns 403 Forbidden","text":"<p>Symptoms: - All Cal.com requests fail - V1 API calls return 403</p> <p>Possible Causes: 1. Using V1 API with V2-only key 2. API key expired 3. IP not whitelisted</p> <p>Solutions: <pre><code># Test V2 API connection\nphp artisan tinker\n&gt;&gt;&gt; $service = new \\App\\Services\\CalcomV2Service();\n&gt;&gt;&gt; $service-&gt;testConnection();\n\n# Check API key format\n&gt;&gt;&gt; starts_with(config('services.calcom.api_key'), 'cal_live_');\n\n# Force V2 usage\n&gt;&gt;&gt; config(['services.calcom.force_v2' =&gt; true]);\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#problem-calcom-sync-failing","title":"Problem: Cal.com sync failing","text":"<p>Symptoms: - Event types not updating - Availability out of sync - Bookings not appearing</p> <p>Possible Causes: 1. Circuit breaker open 2. Rate limiting 3. Network issues</p> <p>Solutions: <pre><code># Check circuit breaker status\nphp artisan circuit-breaker:status calcom\n\n# Reset circuit breaker\nphp artisan circuit-breaker:reset calcom\n\n# Check rate limit headers\ncurl -I -H \"Authorization: Bearer cal_live_xxx\" \\\n  https://api.cal.com/v2/event-types\n\n# Manual sync with debug\nphp artisan calcom:sync --debug --verbose\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#3-retellai-integration-issues","title":"3. Retell.ai Integration Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-calls-not-importing","title":"Problem: Calls not importing","text":"<p>Symptoms: - No calls showing in dashboard - Webhooks not received - \"Anrufe abrufen\" button doesn't work</p> <p>Possible Causes: 1. Webhook not registered in Retell 2. Signature verification failing 3. Queue workers not running</p> <p>Solutions: <pre><code># Check if webhooks are being received\ntail -f storage/logs/laravel.log | grep -i retell\n\n# Test Retell API connection\nphp artisan retell:test-connection\n\n# Manual import of calls\nphp artisan retell:import-calls --days=7\n\n# Check webhook signature\ncurl -X POST http://localhost:8000/api/retell/webhook \\\n  -H \"x-retell-signature: test\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"event\":\"call_ended\",\"call_id\":\"test\"}'\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#problem-agent-provisioning-fails","title":"Problem: Agent provisioning fails","text":"<p>Symptoms: - \"Failed to create agent\" error - Agent status stuck in \"provisioning\"</p> <p>Possible Causes: 1. Branch validation failing 2. Missing required data 3. API quota exceeded</p> <p>Solutions: <pre><code>// Test provisioning validation\n$branch = Branch::find(1);\n$validator = new \\App\\Services\\Provisioning\\ProvisioningValidator();\n$result = $validator-&gt;validateBranch($branch);\ndd($result-&gt;toArray());\n\n// Check for missing data\n&gt;&gt;&gt; $branch-&gt;services()-&gt;count();\n&gt;&gt;&gt; $branch-&gt;business_hours;\n&gt;&gt;&gt; $branch-&gt;phone_number;\n\n// Manual agent creation\n$provisioner = new \\App\\Services\\Provisioning\\RetellAgentProvisioner();\n$result = $provisioner-&gt;createAgentForBranch($branch);\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#4-performance-issues","title":"4. Performance Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-slow-dashboard-loading","title":"Problem: Slow dashboard loading","text":"<p>Symptoms: - Dashboard takes &gt; 5 seconds to load - Timeout errors - High server load</p> <p>Possible Causes: 1. Missing database indexes 2. N+1 queries 3. No caching</p> <p>Solutions: <pre><code># Check slow queries\nphp artisan askproai:performance-monitor --slow-queries\n\n# Analyze specific query\nEXPLAIN SELECT * FROM appointments WHERE company_id = 1;\n\n# Add missing indexes\nphp artisan migrate --path=database/migrations/2025_06_17_add_performance_critical_indexes.php\n\n# Enable query log\nDB::enableQueryLog();\n// ... run slow operation ...\ndd(DB::getQueryLog());\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#5-queueworker-issues","title":"5. Queue/Worker Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-jobs-not-processing","title":"Problem: Jobs not processing","text":"<p>Symptoms: - Webhooks queued but not processed - Emails not sending - Background tasks stuck</p> <p>Possible Causes: 1. Horizon not running 2. Redis connection issue 3. Jobs failing silently</p> <p>Solutions: <pre><code># Check Horizon status\nphp artisan horizon:status\n\n# Start Horizon\nphp artisan horizon\n\n# Check failed jobs\nphp artisan queue:failed\n\n# Retry failed jobs\nphp artisan queue:retry all\n\n# Monitor queue sizes\nredis-cli\n&gt; LLEN queues:webhooks\n&gt; LLEN queues:default\n\n# Clear stuck jobs\nphp artisan queue:clear webhooks\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#6-multi-tenancy-issues","title":"6. Multi-Tenancy Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-data-leaking-between-companies","title":"Problem: Data leaking between companies","text":"<p>Symptoms: - Company A sees Company B's data - Appointments showing for wrong company</p> <p>Possible Causes: 1. Missing company_id scope 2. Global scope disabled 3. Raw queries without tenant filter</p> <p>Solutions: <pre><code>// Check if model has scope\n&gt;&gt;&gt; $model = new \\App\\Models\\Appointment();\n&gt;&gt;&gt; $model-&gt;getGlobalScopes();\n\n// Test tenant isolation\n&gt;&gt;&gt; auth()-&gt;user()-&gt;company_id = 1;\n&gt;&gt;&gt; Appointment::count(); // Should only show company 1\n&gt;&gt;&gt; auth()-&gt;user()-&gt;company_id = 2;\n&gt;&gt;&gt; Appointment::count(); // Should only show company 2\n\n// Find queries without scope\ngrep -r \"whereRaw\\|DB::raw\\|DB::select\" app/\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#7-email-issues","title":"7. Email Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-confirmation-emails-not-sending","title":"Problem: Confirmation emails not sending","text":"<p>Symptoms: - No email after booking - Emails in queue but not sent</p> <p>Possible Causes: 1. SMTP configuration wrong 2. Email queued but worker not running 3. Template rendering error</p> <p>Solutions: <pre><code># Test email configuration\nphp artisan tinker\n&gt;&gt;&gt; Mail::raw('Test', fn($m) =&gt; $m-&gt;to('test@example.com')-&gt;subject('Test'));\n\n# Check mail queue\nphp artisan queue:work --queue=emails --tries=1\n\n# Preview email template\n&gt;&gt;&gt; $appointment = Appointment::first();\n&gt;&gt;&gt; return new \\App\\Mail\\AppointmentConfirmation($appointment);\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#8-securityauthentication-issues","title":"8. Security/Authentication Issues","text":""},{"location":"TROUBLESHOOTING_GUIDE/#problem-api-returns-401-unauthorized","title":"Problem: API returns 401 Unauthorized","text":"<p>Symptoms: - Valid token rejected - Can't access protected routes</p> <p>Possible Causes: 1. Token expired 2. Wrong token type 3. Sanctum not configured</p> <p>Solutions: <pre><code># Check token\ncurl -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  http://localhost:8000/api/user\n\n# Generate new token\nphp artisan tinker\n&gt;&gt;&gt; $user = User::first();\n&gt;&gt;&gt; $user-&gt;createToken('api')-&gt;plainTextToken;\n\n# Check Sanctum config\n&gt;&gt;&gt; config('sanctum.guard');\n&gt;&gt;&gt; config('auth.guards.sanctum');\n</code></pre></p>"},{"location":"TROUBLESHOOTING_GUIDE/#monitoring-commands","title":"Monitoring Commands","text":""},{"location":"TROUBLESHOOTING_GUIDE/#health-checks","title":"Health Checks","text":"<pre><code># Overall system health\ncurl https://api.askproai.de/health\n\n# Cal.com integration health\ncurl https://api.askproai.de/health/calcom\n\n# Database health\nphp artisan db:show\n</code></pre>"},{"location":"TROUBLESHOOTING_GUIDE/#performance-monitoring","title":"Performance Monitoring","text":"<pre><code># Real-time performance monitor\nphp artisan askproai:performance-monitor --live\n\n# Generate performance report\nphp artisan askproai:performance-monitor --report &gt; performance.json\n\n# Check specific metrics\nphp artisan askproai:performance-monitor --metric=response_time\n</code></pre>"},{"location":"TROUBLESHOOTING_GUIDE/#debug-mode","title":"Debug Mode","text":"<pre><code># Enable debug logging for booking flow\nBOOKING_DEBUG=true php artisan serve\n\n# Enable SQL query logging\nDB_LOG_QUERIES=true php artisan serve\n\n# Verbose webhook processing\nWEBHOOK_DEBUG=true php artisan horizon\n</code></pre>"},{"location":"TROUBLESHOOTING_GUIDE/#emergency-procedures","title":"Emergency Procedures","text":""},{"location":"TROUBLESHOOTING_GUIDE/#1-system-overload","title":"1. System Overload","text":"<pre><code># Disable non-critical features\nphp artisan down --allow=127.0.0.1\n\n# Scale down workers\nphp artisan horizon:pause\n\n# Clear caches\nphp artisan optimize:clear\n\n# Emergency mode\ntouch storage/framework/emergency\n</code></pre>"},{"location":"TROUBLESHOOTING_GUIDE/#2-database-issues","title":"2. Database Issues","text":"<pre><code># Check connections\nphp artisan db:show\n\n# Kill long-running queries\nmysql -e \"SHOW PROCESSLIST\" | grep -v Sleep\nmysql -e \"KILL QUERY &lt;process_id&gt;\"\n\n# Reset connection pool\nphp artisan db:reconnect\n</code></pre>"},{"location":"TROUBLESHOOTING_GUIDE/#3-api-outages","title":"3. API Outages","text":"<pre><code># Enable fallback mode\nphp artisan config:set services.calcom.fallback_enabled true\n\n# Use cached data only\nphp artisan config:set services.calcom.cache_only true\n\n# Disable external APIs temporarily\ntouch storage/framework/maintenance/calcom\n</code></pre>"},{"location":"TROUBLESHOOTING_GUIDE/#log-locations","title":"Log Locations","text":"<ul> <li>Application Logs: <code>/storage/logs/laravel.log</code></li> <li>Queue Logs: <code>/storage/logs/horizon.log</code></li> <li>Web Server Logs: <code>/var/log/nginx/error.log</code></li> <li>PHP Logs: <code>/var/log/php-fpm/error.log</code></li> <li>Database Logs: <code>/var/log/mysql/error.log</code></li> </ul>"},{"location":"TROUBLESHOOTING_GUIDE/#getting-help","title":"Getting Help","text":""},{"location":"TROUBLESHOOTING_GUIDE/#internal-resources","title":"Internal Resources","text":"<ul> <li>Slack: #askproai-tech</li> <li>Wiki: https://wiki.askproai.internal</li> <li>Monitoring: https://monitoring.askproai.de</li> </ul>"},{"location":"TROUBLESHOOTING_GUIDE/#external-support","title":"External Support","text":"<ul> <li>Cal.com Support: support@cal.com</li> <li>Retell.ai Support: support@retellai.com</li> <li>Laravel Discord: https://discord.gg/laravel</li> </ul> <p>Last Updated: 2025-06-17</p>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/","title":"Universal Multi-Tenant, Multi-Location Booking System","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#overview","title":"Overview","text":"<p>The Universal Booking System is a comprehensive solution for handling appointment bookings across multiple tenants (companies) and their various locations (branches). It intelligently routes customers to the most suitable branch and staff member based on various criteria including location, service requirements, availability, and preferences.</p>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#key-features","title":"Key Features","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#1-intelligent-phone-number-resolution","title":"1. Intelligent Phone Number Resolution","text":"<ul> <li>Maps incoming calls to specific branches or companies</li> <li>Multiple resolution methods with confidence scoring:</li> <li>Metadata-based (100% confidence)</li> <li>Phone number mapping (90% confidence)</li> <li>Agent ID mapping (80% confidence)</li> <li>Caller history (70% confidence)</li> <li>Fallback resolution (30% confidence)</li> </ul>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#2-multi-branch-support","title":"2. Multi-Branch Support","text":"<ul> <li>Customers can book at any branch offering their required service</li> <li>Cross-branch availability checking</li> <li>Mobile staff who work at multiple locations</li> <li>Branch selection based on various strategies</li> </ul>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#3-smart-staff-matching","title":"3. Smart Staff Matching","text":"<ul> <li>Skill-based matching for services</li> <li>Language preference support</li> <li>Experience and rating consideration</li> <li>Workload balancing</li> <li>Customer preference memory</li> </ul>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#4-flexible-branch-selection-strategies","title":"4. Flexible Branch Selection Strategies","text":"<ul> <li>Nearest Location: Prioritizes geographic proximity</li> <li>First Available: Books at branch with earliest slot</li> <li>Load Balanced: Distributes bookings evenly</li> </ul>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#architecture-components","title":"Architecture Components","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#core-services","title":"Core Services","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#universalbookingorchestrator","title":"UniversalBookingOrchestrator","text":"<p>The main orchestrator that coordinates the entire booking flow: <pre><code>$orchestrator = app(UniversalBookingOrchestrator::class);\n$result = $orchestrator-&gt;processBookingRequest($bookingData, $context);\n</code></pre></p>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#phonenumberresolver","title":"PhoneNumberResolver","text":"<p>Enhanced resolver for multi-location scenarios: <pre><code>$resolver = app(PhoneNumberResolver::class);\n$context = $resolver-&gt;resolveFromWebhook($webhookData);\n// Returns: branch_id, company_id, agent_id, resolution_method, confidence\n</code></pre></p>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#staffservicematcher","title":"StaffServiceMatcher","text":"<p>Intelligent staff selection based on requirements: <pre><code>$matcher = app(StaffServiceMatcher::class);\n$eligibleStaff = $matcher-&gt;findEligibleStaff($branch, $serviceRequirements);\n</code></pre></p>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#unifiedavailabilityservice","title":"UnifiedAvailabilityService","text":"<p>Aggregates availability across branches and staff: <pre><code>$availability = app(UnifiedAvailabilityService::class);\n$slots = $availability-&gt;getMultiBranchAvailability($branches, $requirements, $dateRange);\n</code></pre></p>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#branch-selection-strategies","title":"Branch Selection Strategies","text":"<p>Strategies implement <code>BranchSelectionStrategyInterface</code>:</p> <pre><code>interface BranchSelectionStrategyInterface\n{\n    public function selectBranches(array $branches, Customer $customer, array $serviceRequirements): array;\n    public function getName(): string;\n}\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#configuration","title":"Configuration","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#environment-variables","title":"Environment Variables","text":"<pre><code># Branch Selection Strategy\nBOOKING_BRANCH_STRATEGY=nearest  # Options: nearest, first_available, load_balanced\n\n# Time Constraints\nBOOKING_MIN_ADVANCE=60          # Minimum advance booking (minutes)\nBOOKING_MAX_ADVANCE=90          # Maximum advance booking (days)\nBOOKING_DEFAULT_DURATION=30     # Default appointment duration\nBOOKING_BUFFER_TIME=15          # Buffer between appointments\nBOOKING_SLOT_INTERVAL=15        # Time slot intervals\n\n# Multi-Location\nBOOKING_CROSS_BRANCH=true       # Enable cross-branch booking\nBOOKING_MAX_DISTANCE=50         # Max distance for suggestions (km)\nBOOKING_MOBILE_STAFF=true       # Consider mobile staff\n\n# Customer Preferences\nBOOKING_REMEMBER_BRANCH=true    # Remember preferred branch\nBOOKING_REMEMBER_STAFF=true     # Remember preferred staff\nBOOKING_PREFERENCE_WEIGHT=0.7   # Weight for preferences (0-1)\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#configuration-file","title":"Configuration File","text":"<p>Located at <code>config/booking.php</code>:</p> <pre><code>return [\n    'default_branch_strategy' =&gt; env('BOOKING_BRANCH_STRATEGY', 'nearest'),\n    'time_constraints' =&gt; [\n        'min_advance_booking' =&gt; 60,\n        'max_advance_booking' =&gt; 90,\n        'default_duration' =&gt; 30,\n        'buffer_time' =&gt; 15,\n        'slot_interval' =&gt; 15,\n    ],\n    'multi_location' =&gt; [\n        'enable_cross_branch' =&gt; true,\n        'max_distance_km' =&gt; 50,\n        'enable_mobile_staff' =&gt; true,\n    ],\n    // ... more configuration\n];\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#database-schema-enhancements","title":"Database Schema Enhancements","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#customer-preferences","title":"Customer Preferences","text":"<pre><code>customers\n  - preferred_branch_id (UUID, nullable)\n  - preferred_staff_id (UUID, nullable)\n  - location_data (JSON - city, postal_code, coordinates)\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#staff-capabilities","title":"Staff Capabilities","text":"<pre><code>staff\n  - skills (JSON array)\n  - languages (JSON array, default: ['de'])\n  - mobility_radius_km (integer)\n  - specializations (JSON array)\n  - average_rating (decimal)\n  - certifications (JSON array)\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#service-requirements","title":"Service Requirements","text":"<pre><code>services\n  - required_skills (JSON array)\n  - required_certifications (JSON array)\n  - complexity_level (enum: basic, intermediate, advanced, expert)\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#branch-features","title":"Branch Features","text":"<pre><code>branches\n  - coordinates (JSON - lat, lng)\n  - service_radius_km (integer)\n  - accepts_walkins (boolean)\n  - parking_available (boolean)\n  - public_transport_access (text)\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#multi-branch-staff","title":"Multi-Branch Staff","text":"<pre><code>staff_branches (junction table)\n  - staff_id\n  - branch_id\n  - is_primary (boolean)\n  - working_days (JSON)\n  - travel_compensation (decimal)\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#usage-examples","title":"Usage Examples","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#basic-booking-request","title":"Basic Booking Request","text":"<pre><code>$bookingRequest = [\n    'company_id' =&gt; $companyId,\n    'service_name' =&gt; 'Haircut',\n    'date' =&gt; '2025-06-20',\n    'time' =&gt; '14:00',\n    'customer' =&gt; [\n        'name' =&gt; 'John Doe',\n        'phone' =&gt; '+49 30 12345678',\n        'email' =&gt; 'john@example.com'\n    ]\n];\n\n$result = $orchestrator-&gt;processBookingRequest($bookingRequest);\n\nif ($result['success']) {\n    $appointment = $result['appointment'];\n    echo \"Booked at {$appointment-&gt;branch-&gt;name} with {$appointment-&gt;staff-&gt;name}\";\n}\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#with-specific-preferences","title":"With Specific Preferences","text":"<pre><code>$bookingRequest = [\n    'company_id' =&gt; $companyId,\n    'branch_id' =&gt; $preferredBranchId,  // Optional: specific branch\n    'service_id' =&gt; $serviceId,\n    'date' =&gt; '2025-06-20',\n    'time' =&gt; '14:00',\n    'staff_preference' =&gt; 'Maria',      // Optional: preferred staff name\n    'language' =&gt; 'en',                 // Optional: language preference\n    'customer' =&gt; [\n        'name' =&gt; 'John Doe',\n        'phone' =&gt; '+49 30 12345678'\n    ]\n];\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#phone-webhook-integration","title":"Phone Webhook Integration","text":"<pre><code>// In RetellWebhookHandler\n$phoneResolver = app(PhoneNumberResolver::class);\n$context = $phoneResolver-&gt;resolveFromWebhook($webhookData);\n\n$bookingRequest = [\n    'company_id' =&gt; $context['company_id'],\n    'branch_id' =&gt; $context['branch_id'],\n    // ... rest of booking data from webhook\n];\n\n$result = $orchestrator-&gt;processBookingRequest($bookingRequest, $context);\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#flow-diagram","title":"Flow Diagram","text":"<pre><code>Phone Call \u2192 Retell.ai\n    \u2193\nWebhook \u2192 PhoneNumberResolver\n    \u2193\nResolve Company/Branch Context\n    \u2193\nUniversalBookingOrchestrator\n    \u251c\u2500\u2500 Find/Create Customer\n    \u251c\u2500\u2500 Analyze Service Requirements\n    \u251c\u2500\u2500 Select Suitable Branches (Strategy)\n    \u251c\u2500\u2500 Find Eligible Staff (Matcher)\n    \u251c\u2500\u2500 Check Availability (Unified Service)\n    \u251c\u2500\u2500 Score &amp; Select Optimal Option\n    \u251c\u2500\u2500 Create Appointment\n    \u251c\u2500\u2500 Sync with Cal.com\n    \u2514\u2500\u2500 Send Notifications\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#advanced-features","title":"Advanced Features","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#custom-branch-selection-strategy","title":"Custom Branch Selection Strategy","text":"<pre><code>class PreferredPartnerStrategy implements BranchSelectionStrategyInterface\n{\n    public function selectBranches(array $branches, Customer $customer, array $serviceRequirements): array\n    {\n        // Custom logic to prioritize partner branches\n        return array_filter($branches, function($branch) {\n            return $branch-&gt;metadata['is_partner'] ?? false;\n        });\n    }\n\n    public function getName(): string\n    {\n        return 'preferred_partner';\n    }\n}\n\n// Register in service provider\n$orchestrator-&gt;setBranchSelectionStrategy(new PreferredPartnerStrategy());\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#staff-skill-matching","title":"Staff Skill Matching","text":"<pre><code>// Define service with requirements\n$service-&gt;update([\n    'required_skills' =&gt; ['color_specialist', 'senior_stylist'],\n    'complexity_level' =&gt; 'advanced'\n]);\n\n// Staff with matching skills\n$staff-&gt;update([\n    'skills' =&gt; ['color_specialist', 'senior_stylist', 'makeup_artist'],\n    'certifications' =&gt; ['Wella Color Expert', 'L\\'Oreal Professional']\n]);\n\n// The system automatically matches staff to service requirements\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#multi-language-support","title":"Multi-Language Support","text":"<pre><code>// Customer speaks Turkish\n$bookingRequest['language'] = 'tr';\n\n// System finds staff who speak Turkish\n$staff-&gt;languages = ['de', 'en', 'tr'];  // Will be preferred\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#monitoring-debugging","title":"Monitoring &amp; Debugging","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#enable-debug-logging","title":"Enable Debug Logging","text":"<pre><code>BOOKING_DEBUG=true\nBOOKING_LOG_AVAILABILITY=true\nBOOKING_LOG_BRANCHES=true\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#check-resolution-confidence","title":"Check Resolution Confidence","text":"<pre><code>Log::info('Phone resolution', [\n    'method' =&gt; $context['resolution_method'],\n    'confidence' =&gt; $context['confidence'],\n    'branch_id' =&gt; $context['branch_id']\n]);\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#availability-debugging","title":"Availability Debugging","text":"<pre><code>$availabilityService-&gt;clearStaffAvailabilityCache($staff);\n$slots = $availabilityService-&gt;getStaffAvailability($staff, $dateRange, 30);\nLog::info('Available slots', ['count' =&gt; count($slots), 'slots' =&gt; $slots]);\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#performance-considerations","title":"Performance Considerations","text":"<ol> <li>Caching: Availability data is cached for 5 minutes by default</li> <li>Eager Loading: Relationships are loaded to prevent N+1 queries</li> <li>Async Processing: Webhooks are processed asynchronously</li> <li>Connection Pooling: Database connections are pooled</li> <li>Rate Limiting: API endpoints have adaptive rate limiting</li> </ol>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#security-features","title":"Security Features","text":"<ol> <li>Webhook Signature Verification: All webhooks are verified</li> <li>Multi-Tenancy Isolation: Data is automatically scoped by company</li> <li>Input Validation: Phone numbers and other inputs are validated</li> <li>SQL Injection Prevention: Using parameterized queries</li> <li>API Rate Limiting: Prevents abuse and DDoS</li> </ol>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#future-enhancements","title":"Future Enhancements","text":"<ol> <li>AI-Powered Predictions: Predict no-shows and optimize overbooking</li> <li>Dynamic Pricing: Adjust prices based on demand and time</li> <li>Route Optimization: For mobile service providers</li> <li>Customer Scoring: Prioritize reliable customers</li> <li>Automated Rescheduling: Handle cancellations intelligently</li> <li>Multi-Provider Marketplace: Book across different companies</li> </ol>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#troubleshooting","title":"Troubleshooting","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#common-issues","title":"Common Issues","text":"<ol> <li>\"Could not resolve company\"</li> <li>Check phone number mapping in <code>phone_numbers</code> table</li> <li>Verify branch <code>phone_number</code> field</li> <li> <p>Check if branch is active</p> </li> <li> <p>\"No eligible staff found\"</p> </li> <li>Verify staff is active and assigned to branch</li> <li>Check service assignments in <code>staff_event_types</code></li> <li> <p>Verify skill requirements match</p> </li> <li> <p>\"No available slots\"</p> </li> <li>Check staff working hours</li> <li>Verify Cal.com integration</li> <li>Clear availability cache</li> </ol>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#debug-commands","title":"Debug Commands","text":"<pre><code># Test phone resolution\nphp artisan askproai:test-phone-resolution +49 30 12345678\n\n# Check branch availability\nphp artisan askproai:check-availability --branch=UUID --date=2025-06-20\n\n# Sync staff capabilities\nphp artisan askproai:sync-staff-capabilities\n\n# Clear booking caches\nphp artisan booking:clear-cache\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#api-endpoints","title":"API Endpoints","text":""},{"location":"UNIVERSAL_BOOKING_SYSTEM/#check-availability","title":"Check Availability","text":"<pre><code>POST /api/booking/check-availability\n{\n    \"company_id\": \"uuid\",\n    \"service_id\": \"uuid\",\n    \"date\": \"2025-06-20\",\n    \"branch_id\": \"uuid\" (optional)\n}\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#create-booking","title":"Create Booking","text":"<pre><code>POST /api/booking/create\n{\n    \"company_id\": \"uuid\",\n    \"service_id\": \"uuid\",\n    \"date\": \"2025-06-20\",\n    \"time\": \"14:00\",\n    \"customer\": {\n        \"name\": \"John Doe\",\n        \"phone\": \"+49 30 12345678\",\n        \"email\": \"john@example.com\"\n    },\n    \"preferences\": {\n        \"branch_id\": \"uuid\",\n        \"staff_name\": \"Maria\",\n        \"language\": \"en\"\n    }\n}\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_SYSTEM/#get-booking-options","title":"Get Booking Options","text":"<pre><code>POST /api/booking/options\n{\n    \"company_id\": \"uuid\",\n    \"service_id\": \"uuid\",\n    \"date_range\": {\n        \"start\": \"2025-06-20\",\n        \"end\": \"2025-06-27\"\n    },\n    \"location\": {\n        \"postal_code\": \"10115\",\n        \"city\": \"Berlin\"\n    }\n}\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/","title":"Universeller Multi-Tenant Telefon-zu-Termin Test Guide","text":""},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#ubersicht","title":"\u00dcbersicht","text":"<p>Dieses Dokument beschreibt, wie das universelle Buchungssystem f\u00fcr verschiedene Branchen und Multi-Location-Szenarien getestet werden kann.</p>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#systemarchitektur","title":"Systemarchitektur","text":""},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#kernkomponenten","title":"Kernkomponenten","text":"<ol> <li>PhoneNumberResolver - L\u00f6st Telefonnummern zu Branches/Companies auf</li> <li>HotlineRouter - Verwaltet Hotline-Anrufe mit Standortauswahl</li> <li>StaffSkillMatcher - Findet passende Mitarbeiter basierend auf Skills</li> <li>AlternativeSlotFinder - Schl\u00e4gt alternative Termine vor</li> <li>UniversalBookingOrchestrator - Koordiniert den gesamten Buchungsflow</li> </ol>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#datenmodell-erweiterungen","title":"Datenmodell-Erweiterungen","text":"<ul> <li>phone_numbers - Mapping von Telefonnummern zu Branches/Hotlines</li> <li>staff.skills/languages/certifications - Erweiterte Mitarbeiter-Eigenschaften</li> <li>customers.preferred_branch_id/staff_id - Kundenpr\u00e4ferenzen</li> <li>branches.coordinates/features - Multi-Location Features</li> </ul>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#test-szenarien","title":"Test-Szenarien","text":""},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#1-friseur-salon-demo-gmbh","title":"1. Friseur (Salon Demo GmbH)","text":"<p>Szenario: Einzelstandort mit spezialisierten Mitarbeitern</p> <p>Test-Daten: - Company: Salon Demo GmbH - Branch: Berlin Mitte - Telefon: +49 30 98765432 (Direktwahl) - Mitarbeiter:   - Anna Schmidt: Damenhaarschnitt, Extensions, F\u00e4rben (DE, EN)   - Max Weber: Herrenhaarschnitt (DE, EN, TR)   - Lisa M\u00fcller: Damenhaarschnitt, F\u00e4rben (DE, FR)</p> <p>Test-Flow: <pre><code>1. Anruf an +49 30 98765432\n2. \"Ich m\u00f6chte einen Termin f\u00fcr Damenhaarschnitt\"\n3. System pr\u00fcft verf\u00fcgbare Mitarbeiter (Anna oder Lisa)\n4. Bei Zeitkonflikt: Alternative Zeiten oder anderer Mitarbeiter\n5. Buchungsbest\u00e4tigung\n</code></pre></p> <p>Erwartetes Verhalten: - Nur Anna oder Lisa werden f\u00fcr Damenhaarschnitt vorgeschlagen - Max wird nicht vorgeschlagen (bietet Service nicht an) - Bei Sprachpr\u00e4ferenz Franz\u00f6sisch wird Lisa bevorzugt</p>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#2-fitness-studio-fitnow-gmbh","title":"2. Fitness-Studio (FitNow GmbH)","text":"<p>Szenario: Multi-Location mit Hotline</p> <p>Test-Daten: - Company: FitNow GmbH - Hotline: +49 40 11223344 - Branches:   - Hamburg City: +49 40 87654321   - Hamburg Altona: +49 40 76543210 - Services: Probetraining, Personal Training, Ern\u00e4hrungsberatung</p> <p>Test-Flow A - Hotline: <pre><code>1. Anruf an +49 40 11223344 (Hotline)\n2. \"F\u00fcr Hamburg City dr\u00fccken Sie die 1, f\u00fcr Altona die 2\"\n3. Kunde w\u00e4hlt 1\n4. \"Ich m\u00f6chte ein Probetraining vereinbaren\"\n5. System pr\u00fcft Verf\u00fcgbarkeit in Hamburg City\n6. Buchungsbest\u00e4tigung\n</code></pre></p> <p>Test-Flow B - Direktwahl: <pre><code>1. Anruf an +49 40 76543210 (Altona direkt)\n2. \"Ich suche einen Personal Trainer der Arabisch spricht\"\n3. System findet Ahmed Hassan (spricht AR, DE, EN)\n4. Terminvorschlag mit Ahmed\n5. Buchungsbest\u00e4tigung\n</code></pre></p> <p>Erwartetes Verhalten: - Hotline f\u00fchrt zu Standortauswahl - Direktwahl \u00fcberspringt Standortauswahl - Skill-Matching ber\u00fccksichtigt Sprachen und Spezialisierungen</p>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#3-askproai-munchen-test","title":"3. AskProAI M\u00fcnchen Test","text":"<p>Szenario: Test-Filiale f\u00fcr Entwicklung</p> <p>Test-Daten: - Branch: AskProAI M\u00fcnchen Test - Telefon: +49 89 12345678 - Services: Demo-Termin, Beratungsgespr\u00e4ch, Setup, Schulung</p> <p>Test-Flow: <pre><code>1. Anruf an +49 89 12345678\n2. \"Ich m\u00f6chte eine Demo vereinbaren\"\n3. System findet Dr. Test M\u00fcnchen\n4. Terminvorschlag\n5. Buchungsbest\u00e4tigung\n</code></pre></p>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#api-testing","title":"API Testing","text":""},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#function-call-test","title":"Function Call Test","text":"<pre><code># Test availability check\ncurl -X POST https://api.askproai.de/api/retell/function-call \\\n  -H \"Content-Type: application/json\" \\\n  -H \"x-retell-signature: YOUR_SIGNATURE\" \\\n  -d '{\n    \"function_name\": \"collect_appointment_data\",\n    \"parameters\": {\n      \"verfuegbarkeit_pruefen\": true,\n      \"datum\": \"25.06.2025\",\n      \"uhrzeit\": \"14:00 Uhr\",\n      \"dienstleistung\": \"Damenhaarschnitt\",\n      \"alternative_termine_gewuenscht\": true\n    },\n    \"call\": {\n      \"to_number\": \"+49 30 98765432\",\n      \"from_number\": \"+49 170 1234567\",\n      \"agent_id\": \"agent_salon_demo_berlin\"\n    }\n  }'\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#erwartete-response","title":"Erwartete Response","text":"<pre><code>{\n  \"success\": true,\n  \"verfuegbar\": false,\n  \"datum_geprueft\": \"25.06.2025\",\n  \"uhrzeit_geprueft\": \"14:00\",\n  \"alternative_termine\": \"heute um 15:00 Uhr, oder morgen um 14:00 Uhr\",\n  \"alternative_anzahl\": 2,\n  \"nachricht\": \"Der gew\u00fcnschte Termin ist leider nicht verf\u00fcgbar. Ich h\u00e4tte folgende Alternativen: heute um 15:00 Uhr, oder morgen um 14:00 Uhr\"\n}\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#debugging","title":"Debugging","text":""},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#1-phone-number-resolution","title":"1. Phone Number Resolution","text":"<pre><code>// Test phone number resolution\n$resolver = app(PhoneNumberResolver::class);\n$result = $resolver-&gt;resolveFromWebhook([\n    'to' =&gt; '+49 30 98765432',\n    'from' =&gt; '+49 170 1234567'\n]);\n\n// Result should contain:\n// - branch_id\n// - company_id\n// - resolution_method\n// - confidence score\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#2-staff-skill-matching","title":"2. Staff Skill Matching","text":"<pre><code>// Test staff matching\n$matcher = app(StaffSkillMatcher::class);\n$branch = Branch::find('branch-id');\n$staff = $matcher-&gt;findEligibleStaff($branch, [\n    'service_name' =&gt; 'Personal Training',\n    'language' =&gt; 'en'\n]);\n\n// Should return staff sorted by match score\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#3-alternative-slot-finding","title":"3. Alternative Slot Finding","text":"<pre><code>// Test alternative slots\n$finder = app(AlternativeSlotFinder::class);\n$alternatives = $finder-&gt;findAlternatives([\n    'branch_id' =&gt; 'branch-id',\n    'staff_id' =&gt; 'staff-id',\n    'date' =&gt; '2025-06-25',\n    'time' =&gt; '14:00',\n    'service_name' =&gt; 'Damenhaarschnitt',\n    'allow_other_branches' =&gt; true\n]);\n\n// Should return array of alternatives with scores\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#monitoring","title":"Monitoring","text":""},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#key-metrics","title":"Key Metrics","text":"<ol> <li>Phone Resolution Success Rate</li> <li>Target: &gt;95%</li> <li> <p>Monitor: Fallback usage</p> </li> <li> <p>Staff Match Rate</p> </li> <li>Target: &gt;90% find suitable staff</li> <li> <p>Monitor: No-match scenarios</p> </li> <li> <p>Alternative Acceptance Rate</p> </li> <li>Target: &gt;60% accept alternatives</li> <li>Monitor: Most accepted alternative types</li> </ol>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#logs-to-monitor","title":"Logs to Monitor","text":"<pre><code># Phone resolution logs\ngrep \"Branch resolved from\" storage/logs/laravel.log\n\n# Staff matching logs\ngrep \"Staff skill matching completed\" storage/logs/laravel.log\n\n# Alternative finding logs\ngrep \"alternatives found for slot\" storage/logs/laravel.log\n\n# Hotline routing logs\ngrep \"route_to_branch\" storage/logs/laravel.log\n</code></pre>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#common-issues","title":"Common Issues","text":""},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#issue-could-not-resolve-company-from-call-data","title":"Issue: \"Could not resolve company from call data\"","text":"<p>Ursache: Telefonnummer nicht in phone_numbers Tabelle L\u00f6sung:  <pre><code>INSERT INTO phone_numbers (company_id, branch_id, number, type, active)\nVALUES (company_id, branch_id, '+49...', 'direct', 1);\n</code></pre></p>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#issue-no-eligible-staff-found","title":"Issue: \"No eligible staff found\"","text":"<p>Ursache: Keine Mitarbeiter mit passenden Services/Skills L\u00f6sung:  - Pr\u00fcfen Sie staff_services Zuordnungen - Pr\u00fcfen Sie staff.active und staff.is_bookable</p>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#issue-no-alternatives-found","title":"Issue: \"No alternatives found\"","text":"<p>Ursache: Keine verf\u00fcgbaren Slots in Suchzeitraum L\u00f6sung: - Erweitern Sie den Suchzeitraum - Aktivieren Sie allow_other_branches</p>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#best-practices","title":"Best Practices","text":"<ol> <li>Phone Number Setup</li> <li>Immer mit L\u00e4ndercode (+49)</li> <li>Eindeutige Nummern pro Branch</li> <li> <p>Hotline f\u00fcr Multi-Location</p> </li> <li> <p>Staff Configuration</p> </li> <li>Skills vollst\u00e4ndig pflegen</li> <li>Sprachen angeben</li> <li> <p>Experience Level setzen</p> </li> <li> <p>Service Mapping</p> </li> <li>Services eindeutig benennen</li> <li>Staff-Service-Zuordnungen aktuell halten</li> <li> <p>Dauer realistisch setzen</p> </li> <li> <p>Testing</p> </li> <li>Verschiedene Tageszeiten testen</li> <li>Verschiedene Sprachen testen</li> <li>Edge Cases (keine Verf\u00fcgbarkeit) testen</li> </ol>"},{"location":"UNIVERSAL_BOOKING_TEST_GUIDE/#retellai-prompt-anpassung","title":"Retell.ai Prompt Anpassung","text":"<p>Der Prompt muss folgende Variablen unterst\u00fctzen:</p> <pre><code>{{company_name}} - Firmenname\n{{branch_name}} - Filialname (bei Multi-Location)\n{{services}} - Verf\u00fcgbare Services\n{{business_hours}} - \u00d6ffnungszeiten\n</code></pre> <p>Beispiel-Prompt-Struktur: <pre><code>Du bist der KI-Assistent von {{company_name}}.\n[Bei Multi-Location: Du nimmst Anrufe f\u00fcr {{branch_name}} entgegen.]\n\nVerf\u00fcgbare Services:\n{{services}}\n\n\u00d6ffnungszeiten:\n{{business_hours}}\n\nBei der Terminbuchung:\n1. Erfrage Service-Wunsch\n2. Erfrage Datum und Uhrzeit\n3. Pr\u00fcfe Verf\u00fcgbarkeit mit function call\n4. Biete Alternativen bei Bedarf\n5. Best\u00e4tige die Buchung\n</code></pre></p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to AskProAI will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"[Unreleased]","text":""},{"location":"changelog/#security","title":"\ud83d\udea8 Security","text":"<ul> <li>Identified and documented debug routes in production</li> <li>Found webhook bypass middleware that needs removal</li> <li>Discovered hardcoded credentials in routes/web.php</li> <li>Unprotected metrics endpoints identified</li> </ul>"},{"location":"changelog/#added","title":"\ud83c\udfaf Added","text":"<ul> <li>Comprehensive MkDocs documentation system</li> <li>Interactive consistency dashboard</li> <li>MCP architecture visualization</li> <li>Automated documentation generation</li> <li>GitHub Actions for docs deployment</li> </ul>"},{"location":"changelog/#fixed","title":"\ud83d\udd27 Fixed","text":"<ul> <li>Alpine.js dropdown errors in Company Integration Portal</li> <li>UI/UX layout issues in admin panel</li> <li>Modal positioning problems</li> <li>Phone number inline editing</li> </ul>"},{"location":"changelog/#documentation","title":"\ud83d\udcdd Documentation","text":"<ul> <li>Complete MCP architecture documentation</li> <li>Phone-to-appointment flow diagrams</li> <li>API reference generation</li> <li>Security audit report</li> </ul>"},{"location":"changelog/#0850-2025-06-22","title":"[0.85.0] - 2025-06-22","text":""},{"location":"changelog/#features","title":"\u2728 Features","text":"<ul> <li>MCP Integration: 5 specialized servers for orchestration</li> <li>Multi-tenant Architecture: Complete data isolation</li> <li>GDPR Compliance: Full data export and deletion</li> <li>Advanced Caching: 3-tier cache architecture</li> </ul>"},{"location":"changelog/#architecture","title":"\ud83c\udfd7\ufe0f Architecture","text":"<ul> <li>Implemented Circuit Breaker pattern</li> <li>Added idempotency for bookings</li> <li>Response caching with Redis</li> <li>Queue-based webhook processing</li> </ul>"},{"location":"changelog/#security_1","title":"\ud83d\udd12 Security","text":"<ul> <li>Field-level encryption for PII</li> <li>Adaptive rate limiting</li> <li>Threat detection middleware</li> <li>Comprehensive audit logging</li> </ul>"},{"location":"changelog/#hidden-features","title":"\ud83c\udf89 Hidden Features","text":"<ul> <li>Knowledge Base system (beta)</li> <li>WhatsApp integration (disabled)</li> <li>Customer self-service portal</li> <li>Advanced analytics dashboard</li> <li>Mobile app API endpoints</li> </ul>"},{"location":"changelog/#0800-2025-06-15","title":"[0.80.0] - 2025-06-15","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Retell.ai webhook processing</li> <li>Cal.com v2 API integration</li> <li>Stripe billing integration</li> <li>Phone number management</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Migrated from staff_service_assignments to staff_event_types</li> <li>Updated to Laravel 10</li> <li>Improved webhook security</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Race conditions in booking flow</li> <li>Memory leaks in long-running jobs</li> <li>Cache invalidation issues</li> </ul>"},{"location":"changelog/#0750-2025-06-01","title":"[0.75.0] - 2025-06-01","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Branch-level configuration</li> <li>Multi-language support structure</li> <li>Email template system</li> <li>SMS notification framework</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Refactored service layer</li> <li>Improved error handling</li> <li>Enhanced logging with correlation IDs</li> </ul>"},{"location":"changelog/#0700-2025-05-15","title":"[0.70.0] - 2025-05-15","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>Basic appointment booking flow</li> <li>Customer management</li> <li>Call recording integration</li> <li>Admin dashboard</li> </ul>"},{"location":"changelog/#known-issues","title":"Known Issues","text":"<ul> <li>Multiple service versions (V1/V2)</li> <li>Database schema inconsistencies</li> <li>Duplicate models in different languages</li> </ul>"},{"location":"changelog/#0650-2025-05-01","title":"[0.65.0] - 2025-05-01","text":""},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>Initial Laravel setup</li> <li>Filament admin panel</li> <li>Basic multi-tenancy</li> <li>Cal.com integration (v1)</li> <li>Retell.ai integration</li> </ul>"},{"location":"changelog/#infrastructure","title":"Infrastructure","text":"<ul> <li>MySQL database</li> <li>Redis for caching/queues</li> <li>Laravel Horizon for queue management</li> </ul>"},{"location":"changelog/#versioning-strategy","title":"Versioning Strategy","text":"<ul> <li>Major: Breaking changes to API or data structure</li> <li>Minor: New features, backwards compatible</li> <li>Patch: Bug fixes and minor improvements</li> </ul>"},{"location":"changelog/#migration-notes","title":"Migration Notes","text":""},{"location":"changelog/#from-080x-to-085x","title":"From 0.80.x to 0.85.x","text":"<ol> <li>Run database consolidation migrations</li> <li>Update environment variables for MCP</li> <li>Clear all caches</li> <li>Restart queue workers</li> </ol>"},{"location":"changelog/#from-075x-to-080x","title":"From 0.75.x to 0.80.x","text":"<ol> <li>Update Cal.com API keys</li> <li>Migrate webhook URLs</li> <li>Run staff_event_types migration</li> </ol> <p>For upgrade instructions, see Migration Guides</p>"},{"location":"database_cleanup_plan/","title":"\ud83d\uddd1\ufe0f Datenbank-Bereinigungsplan","text":""},{"location":"database_cleanup_plan/#aktuelle-situation-119-tabellen","title":"\ud83d\udcca Aktuelle Situation: 119 Tabellen","text":""},{"location":"database_cleanup_plan/#zu-loschende-tabellen-99-tabellen","title":"\ud83d\udd34 ZU L\u00d6SCHENDE TABELLEN (99 Tabellen)","text":""},{"location":"database_cleanup_plan/#1-reservation-system-12-tabellen-komplett-entfernen","title":"1. Reservation System (12 Tabellen) - KOMPLETT ENTFERNEN","text":"<pre><code>reservation_accessories\nreservation_color_rules\nreservation_files\nreservation_guests\nreservation_instances\nreservation_reminders\nreservation_resources\nreservation_series\nreservation_statuses\nreservation_types\nreservation_users\nreservation_waitlist_requests\n</code></pre>"},{"location":"database_cleanup_plan/#2-resource-management-14-tabellen-nicht-benotigt","title":"2. Resource Management (14 Tabellen) - NICHT BEN\u00d6TIGT","text":"<pre><code>resources\nresource_accessories\nresource_group_assignment\nresource_groups\nresource_status_reasons\nresource_type_assignment\nresource_types\naccessories\nblackout_instances\nblackout_series\nblackout_series_resources\npeak_times\nquotas\nschedules\n</code></pre>"},{"location":"database_cleanup_plan/#3-oauth-system-5-tabellen-nicht-verwendet","title":"3. OAuth System (5 Tabellen) - NICHT VERWENDET","text":"<pre><code>oauth_access_tokens\noauth_auth_codes\noauth_clients\noauth_personal_access_clients\noauth_refresh_tokens\n</code></pre>"},{"location":"database_cleanup_plan/#4-announcement-system-3-tabellen-nicht-benotigt","title":"4. Announcement System (3 Tabellen) - NICHT BEN\u00d6TIGT","text":"<pre><code>announcements\nannouncement_groups\nannouncement_resources\n</code></pre>"},{"location":"database_cleanup_plan/#5-custom-attributes-4-tabellen-zu-komplex-fur-mvp","title":"5. Custom Attributes (4 Tabellen) - ZU KOMPLEX F\u00dcR MVP","text":"<pre><code>custom_attributes\ncustom_attribute_categories\ncustom_attribute_entities\ncustom_attribute_values\n</code></pre>"},{"location":"database_cleanup_plan/#6-user-management-overkill-8-tabellen","title":"6. User Management Overkill (8 Tabellen)","text":"<pre><code>user_email_preferences\nuser_groups\nuser_preferences\nuser_resource_permissions\nuser_session\nuser_statuses\ngroup_resource_permissions\ngroup_roles\n</code></pre>"},{"location":"database_cleanup_plan/#7-redundantealte-tabellen-20-tabellen","title":"7. Redundante/Alte Tabellen (20+ Tabellen)","text":"<pre><code>agents (verwenden branches.retell_agent_id)\naccount_activation\nactivity_log (zu detailliert)\napi_health_logs (nicht genutzt)\nbusiness_hours_templates (in branches integriert)\ncalendar_mappings (veraltet)\ncalendars (veraltet)\nconversion_targets\ndashboard_configurations\ndbversion\ndummy_companies\nevent_type_mappings (veraltet)\nkunden (Duplikat von customers)\nlaravel_users (Duplikat)\nlayouts\nmaster_services\nnotes\nnotification_log\nreseller_tenant\nroles_old\nsaved_reports\nslow_query_log\nstaff_branches_and_staff_services_tables\nstaff_service_assignments_backup\ntenants\ntests\ntime_blocks\nvalidation_results\n</code></pre>"},{"location":"database_cleanup_plan/#kern-tabellen-die-bleiben-20-tabellen","title":"\u2705 KERN-TABELLEN DIE BLEIBEN (20 Tabellen)","text":""},{"location":"database_cleanup_plan/#1-firmen-struktur-3","title":"1. Firmen &amp; Struktur (3)","text":"<ul> <li><code>companies</code> - Mandanten</li> <li><code>branches</code> - Filialen/Standorte</li> <li><code>phone_numbers</code> - Telefonnummern \u2192 Filialen</li> </ul>"},{"location":"database_cleanup_plan/#2-personen-3","title":"2. Personen (3)","text":"<ul> <li><code>users</code> - System-Benutzer</li> <li><code>staff</code> - Mitarbeiter</li> <li><code>customers</code> - Kunden</li> </ul>"},{"location":"database_cleanup_plan/#3-termine-anrufe-2","title":"3. Termine &amp; Anrufe (2)","text":"<ul> <li><code>appointments</code> - Termine</li> <li><code>calls</code> - Anrufe</li> </ul>"},{"location":"database_cleanup_plan/#4-services-zuordnungen-4","title":"4. Services &amp; Zuordnungen (4)","text":"<ul> <li><code>services</code> - Dienstleistungen</li> <li><code>staff_services</code> - Mitarbeiter \u2194 Services</li> <li><code>staff_event_types</code> - Mitarbeiter \u2194 Cal.com Events</li> <li><code>working_hours</code> - Arbeitszeiten</li> </ul>"},{"location":"database_cleanup_plan/#5-calcom-integration-3","title":"5. Cal.com Integration (3)","text":"<ul> <li><code>calcom_event_types</code> - Event Types</li> <li><code>calcom_bookings</code> - Buchungen</li> <li><code>calcom_sync_logs</code> - Sync Status</li> </ul>"},{"location":"database_cleanup_plan/#6-system-5","title":"6. System (5)","text":"<ul> <li><code>migrations</code> - Laravel Migrations</li> <li><code>jobs</code> - Queue Jobs</li> <li><code>failed_jobs</code> - Fehlgeschlagene Jobs</li> <li><code>cache</code> - Cache (optional)</li> <li><code>cache_locks</code> - Cache Locks (optional)</li> </ul>"},{"location":"database_cleanup_plan/#7-zugriff-sicherheit-3","title":"7. Zugriff &amp; Sicherheit (3)","text":"<ul> <li><code>permissions</code> - Berechtigungen</li> <li><code>roles</code> - Rollen</li> <li><code>role_has_permissions</code> - Rollen \u2194 Berechtigungen</li> <li><code>model_has_roles</code> - Model \u2194 Rollen</li> <li><code>model_has_permissions</code> - Model \u2194 Berechtigungen</li> </ul>"},{"location":"database_cleanup_plan/#8-bezahlung-spater-5","title":"8. Bezahlung (sp\u00e4ter) (5)","text":"<ul> <li><code>invoices</code> - Rechnungen</li> <li><code>billing_periods</code> - Abrechnungszeitr\u00e4ume</li> <li><code>company_pricing</code> - Firmen-Preise</li> <li><code>branch_pricing_overrides</code> - Filial-Preise</li> <li><code>payments</code> (sp\u00e4ter)</li> </ul>"},{"location":"database_cleanup_plan/#ergebnis","title":"\ud83d\udcc8 ERGEBNIS","text":"<ul> <li>Vorher: 119 Tabellen</li> <li>Nachher: 20 Kern-Tabellen</li> <li>Reduzierung: 83% weniger Komplexit\u00e4t!</li> </ul>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>Only 2 Configurations Needed!</p> <p>The system is 85% production ready. You only need to configure 2 values to start booking appointments!</p>"},{"location":"quickstart/#5-minute-setup","title":"\ud83d\ude80 5-Minute Setup","text":""},{"location":"quickstart/#prerequisites","title":"Prerequisites","text":"<ul> <li>PHP 8.2+</li> <li>MySQL 8.0+</li> <li>Redis 6.0+</li> <li>Composer 2.0+</li> <li>Node.js 18+</li> </ul>"},{"location":"quickstart/#step-1-clone-install","title":"Step 1: Clone &amp; Install","text":"<pre><code># Clone the repository\ngit clone https://github.com/askproai/api-gateway.git\ncd api-gateway\n\n# Install PHP dependencies\ncomposer install --optimize-autoloader\n\n# Install Node dependencies\nnpm install\n\n# Copy environment file\ncp .env.example .env\n</code></pre>"},{"location":"quickstart/#step-2-configure-environment","title":"Step 2: Configure Environment","text":"<p>Edit <code>.env</code> with your credentials:</p> <pre><code># Database\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=askproai\nDB_USERNAME=your_db_user\nDB_PASSWORD=your_db_password\n\n# Redis\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\n# Cal.com (REQUIRED)\nDEFAULT_CALCOM_API_KEY=\"cal_live_xxxxxxxxxxxxxx\"\nDEFAULT_CALCOM_TEAM_SLUG=\"your-team\"\n\n# Retell.ai (REQUIRED)\nDEFAULT_RETELL_API_KEY=\"key_xxxxxxxxxxxxxx\"\nRETELL_WEBHOOK_SECRET=\"key_xxxxxxxxxxxxxx\"\n</code></pre>"},{"location":"quickstart/#step-3-database-setup","title":"Step 3: Database Setup","text":"<pre><code># Generate application key\nphp artisan key:generate\n\n# Run migrations with seeders\nphp artisan migrate --seed\n\n# Create first company (optional)\nphp artisan tinker\n&gt;&gt;&gt; Company::create([\n...     'name' =&gt; 'Your Company',\n...     'slug' =&gt; 'your-company',\n...     'is_active' =&gt; true\n... ]);\n</code></pre>"},{"location":"quickstart/#step-4-configure-the-2-critical-values","title":"Step 4: Configure the 2 Critical Values","text":"<p>Critical Configuration</p> <p>Without these 2 values, the system cannot book appointments!</p>"},{"location":"quickstart/#1-set-calcom-event-type-id","title":"1. Set Cal.com Event Type ID","text":"<pre><code>-- Find your Cal.com event type ID from Cal.com dashboard\n-- Then update your branch:\nUPDATE branches \nSET calcom_event_type_id = 2563193  -- Your actual event type ID\nWHERE id = 1;\n</code></pre>"},{"location":"quickstart/#2-set-retell-agent-id","title":"2. Set Retell Agent ID","text":"<pre><code>-- Get your Retell agent ID from Retell.ai dashboard\n-- Then update your phone number:\nUPDATE phone_numbers \nSET retell_agent_id = 'agent_9a8202a740cd3120d96fcfda1e'  -- Your agent ID\nWHERE phone_number = '+493083793369';  -- Your phone number\n</code></pre>"},{"location":"quickstart/#step-5-start-services","title":"Step 5: Start Services","text":"<pre><code># Start Laravel development server\nphp artisan serve\n\n# In another terminal: Start Horizon (queue worker)\nphp artisan horizon\n\n# In another terminal: Start Vite (frontend assets)\nnpm run dev\n\n# Optional: Start MCP servers\nphp artisan mcp:start\n</code></pre>"},{"location":"quickstart/#step-6-configure-webhooks","title":"Step 6: Configure Webhooks","text":"<p>In your Retell.ai dashboard, set the webhook URL:</p> <pre><code>https://your-domain.com/api/mcp/retell/webhook\n</code></pre> <p>Enable these events: - \u2705 call_started - \u2705 call_ended - \u2705 call_analyzed</p>"},{"location":"quickstart/#step-7-test-your-setup","title":"Step 7: Test Your Setup","text":"<ol> <li> <p>Test Phone Resolution:    <pre><code>php test-phone-resolution.php +493083793369\n</code></pre></p> </li> <li> <p>Test Webhook Processing:    <pre><code>php test-mcp-webhook.php\n</code></pre></p> </li> <li> <p>Make a Test Call:</p> </li> <li>Call your configured phone number</li> <li>Say you want to book an appointment</li> <li>Provide date and time</li> <li>Confirm the booking</li> </ol>"},{"location":"quickstart/#thats-it","title":"\ud83c\udf89 That's It!","text":"<p>Your AskProAI system is now ready to: - Answer calls 24/7 - Book appointments automatically - Send confirmations - Track all interactions</p>"},{"location":"quickstart/#common-issues","title":"\ud83d\udd27 Common Issues","text":""},{"location":"quickstart/#time-slot-no-longer-available","title":"\"Time slot no longer available\"","text":"<pre><code>-- Clear appointment locks\nDELETE FROM appointment_locks WHERE expires_at &lt; NOW();\n</code></pre>"},{"location":"quickstart/#calcom-sync-failed","title":"\"Cal.com sync failed\"","text":"<pre><code># Reset circuit breaker\nphp artisan circuit-breaker:reset calcom\n\n# Manually sync\nphp artisan cal:sync-event-types\n</code></pre>"},{"location":"quickstart/#webhook-not-processing","title":"\"Webhook not processing\"","text":"<pre><code># Check webhook logs\ntail -f storage/logs/laravel.log | grep webhook\n\n# Test webhook signature\nphp test-retell-signature.php\n</code></pre>"},{"location":"quickstart/#verify-everything-works","title":"\ud83d\udcca Verify Everything Works","text":"<p>Visit your admin dashboard: <pre><code>http://localhost:8000/admin\n</code></pre></p> <p>Default credentials (if using seeders): - Email: admin@askproai.de - Password: password</p> <p>Check these sections: 1. Phone Numbers - Should show your configured number 2. Branches - Should have Cal.com event type set 3. Recent Calls - Should show test calls 4. Appointments - Should show booked appointments</p>"},{"location":"quickstart/#next-steps","title":"\ud83d\ude80 Next Steps","text":"<ol> <li>Production Deployment: See Production Setup</li> <li>Add More Features: Enable WhatsApp, SMS, Customer Portal</li> <li>Configure Analytics: Set up monitoring and alerts</li> <li>Security Hardening: Remove debug routes, enable 2FA</li> </ol> <p>Need Help?</p> <ul> <li>Check Troubleshooting Guide</li> <li>Review API Documentation</li> <li>Join our Discord Community</li> </ul>"},{"location":"service_consolidation_plan/","title":"\ud83d\udd27 Service Konsolidierungsplan","text":""},{"location":"service_consolidation_plan/#aktuelle-situation-36-services-viel-zu-viele","title":"\ud83d\udcca Aktuelle Situation: 36 Services (viel zu viele!)","text":""},{"location":"service_consolidation_plan/#calcom-services-10-1","title":"Cal.com Services (10 \u2192 1)","text":"<p>Behalten: - \u2705 <code>CalcomV2Service.php</code> - Neueste Version, vollst\u00e4ndig</p> <p>L\u00f6schen: - \u274c <code>CalcomService.php</code> - Alte v1 API - \u274c <code>CalcomDebugService.php</code> - Nur f\u00fcr Debugging - \u274c <code>CalcomEventSyncService.php</code> - In V2 integriert - \u274c <code>CalcomEventTypeImportService.php</code> - In V2 integriert - \u274c <code>CalcomEventTypeSyncService.php</code> - Redundant - \u274c <code>CalcomImportService.php</code> - Alte Version - \u274c <code>CalcomSyncService.php</code> - Redundant - \u274c <code>CalcomUnifiedService.php</code> - Experiment, nicht verwendet - \u274c <code>CalcomV2MigrationService.php</code> - Migration abgeschlossen</p>"},{"location":"service_consolidation_plan/#retell-services-5-1","title":"Retell Services (5 \u2192 1)","text":"<p>Behalten: - \u2705 <code>RetellV2Service.php</code> - Neueste Version</p> <p>L\u00f6schen: - \u274c <code>RetellAIService.php</code> - Alte Version - \u274c <code>RetellAgentService.php</code> - In V2 integriert - \u274c <code>RetellService.php</code> - Alte v1 - \u274c <code>RetellV1Service.php</code> - Explizit alte Version</p>"},{"location":"service_consolidation_plan/#andere-redundante-services","title":"Andere redundante Services","text":"<p>L\u00f6schen: - \u274c <code>AppointmentService.php</code> - Wird durch SmartBookingService ersetzt - \u274c <code>BookingService.php</code> - Redundant - \u274c <code>CallService.php</code> - In SmartBookingService integrieren - \u274c <code>CustomerService.php</code> - Zu komplex f\u00fcr MVP</p>"},{"location":"service_consolidation_plan/#neue-konsolidierte-services-3-total","title":"Neue konsolidierte Services (3 Total)","text":"<ol> <li>SmartBookingService - Alles rund um Terminbuchung</li> <li>IntegrationService - Wrapper f\u00fcr CalcomV2 + RetellV2</li> <li>NotificationService - Email, sp\u00e4ter SMS</li> </ol>"},{"location":"service_consolidation_plan/#ergebnis-von-36-auf-15-services-58","title":"\ud83c\udfaf Ergebnis: Von 36 auf ~15 Services (-58%)","text":""},{"location":"statistics/","title":"Project Statistics","text":"<p>Generated on: 2025-06-22 23:28:53</p>"},{"location":"statistics/#code-metrics","title":"Code Metrics","text":"<ul> <li>API Endpoints: 5</li> <li>Models: 83</li> <li>Services: 68</li> <li>Database Tables: 87</li> <li>Routes: 404</li> <li>Config Files: 47</li> </ul>"},{"location":"statistics/#file-statistics","title":"File Statistics","text":"<ul> <li>PHP Files: 1124</li> <li>Blade Templates: 85</li> <li>JavaScript Files: 1</li> <li>CSS Files: 0</li> </ul>"},{"location":"status/","title":"System Status","text":"<p>Production Status</p> <p>The system is 85% production ready with a 99.3% success rate!</p>"},{"location":"status/#real-time-metrics","title":"Real-Time Metrics","text":"Metric Current Value Target Status Success Rate 99.3% &gt;99% \u2705 Excellent Average Response Time 187ms &lt;500ms \u2705 Great Uptime 99.9% &gt;99.5% \u2705 Excellent Active MCP Servers 5/5 5 \u2705 All Running Circuit Breakers All Closed - \u2705 Healthy"},{"location":"status/#component-status","title":"Component Status","text":""},{"location":"status/#core-services","title":"Core Services","text":"Service Status Last Check Notes WebhookMCPServer \ud83d\udfe2 Running 2 min ago Processing webhooks normally CalcomMCPServer \ud83d\udfe2 Running 1 min ago API responding RetellMCPServer \ud83d\udfe2 Running 3 min ago Agent management active DatabaseMCPServer \ud83d\udfe2 Running 1 min ago Queries executing QueueMCPServer \ud83d\udfe2 Running 1 min ago Jobs processing"},{"location":"status/#external-integrations","title":"External Integrations","text":"Integration Status Response Time API Version Cal.com \ud83d\udfe2 Connected 234ms v2 Retell.ai \ud83d\udfe2 Connected 189ms v1 Stripe \ud83d\udfe2 Connected 312ms 2023-10-16 Redis \ud83d\udfe2 Connected 2ms 7.0 MySQL \ud83d\udfe2 Connected 5ms 8.0"},{"location":"status/#recent-incidents","title":"Recent Incidents","text":"Date Severity Issue Resolution Duration 2025-06-20 Low Cal.com API timeout Circuit breaker activated 5 min 2025-06-18 Medium Database connection spike Connection pool expanded 15 min 2025-06-15 Low Redis memory usage high Cache cleared 2 min"},{"location":"status/#performance-trends","title":"Performance Trends","text":""},{"location":"status/#response-time-last-7-days","title":"Response Time (Last 7 Days)","text":"<pre><code>Day 1: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 195ms\nDay 2: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  189ms\nDay 3: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 201ms\nDay 4: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   178ms\nDay 5: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  187ms\nDay 6: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  183ms\nDay 7: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  187ms (Today)\n</code></pre>"},{"location":"status/#success-rate-last-7-days","title":"Success Rate (Last 7 Days)","text":"<pre><code>Day 1: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 99.1%\nDay 2: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 99.3%\nDay 3: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  98.9%\nDay 4: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 99.4%\nDay 5: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 99.2%\nDay 6: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 99.3%\nDay 7: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 99.3% (Today)\n</code></pre>"},{"location":"status/#queue-status","title":"Queue Status","text":"Queue Size Processing Failed Avg Time webhooks 3 12/min 0 45ms bookings 1 8/min 0 892ms notifications 5 15/min 2 234ms sync 0 2/min 0 3.2s default 2 5/min 1 156ms"},{"location":"status/#database-health","title":"Database Health","text":"Metric Value Status Active Connections 45/500 \u2705 Healthy Query Cache Hit Rate 78% \u2705 Good Slow Queries (24h) 3 \u26a0\ufe0f Monitor Index Usage 94% \u2705 Excellent Table Locks 0 \u2705 None"},{"location":"status/#cache-performance","title":"Cache Performance","text":"Cache Layer Hit Rate Size TTL Status L1 Memory 82% 12MB/50MB - \u2705 Healthy L2 Redis 76% 234MB/2GB 5min \u2705 Healthy L3 Database 45% 1.2GB 24h \u2705 Normal"},{"location":"status/#security-status","title":"Security Status","text":"<p>Security Issues</p> <p>Several security vulnerabilities need immediate attention:</p> <ul> <li>Debug routes exposed in production</li> <li>Webhook bypass middleware active</li> <li>Unprotected metrics endpoints</li> </ul> Check Status Last Scan Issues Debug Routes \u274c Failed 1 hour ago 25 routes exposed API Authentication \u2705 Passed 1 hour ago All protected SQL Injection \u2705 Passed 12 hours ago No vulnerabilities XSS Protection \u2705 Enabled - Headers set HTTPS \u2705 Enforced - All traffic encrypted"},{"location":"status/#monitoring-endpoints","title":"Monitoring Endpoints","text":"<ul> <li>Metrics: <code>/api/metrics</code> (Prometheus format)</li> <li>Health Check: <code>/api/health</code></li> <li>Status Page: <code>/api/status</code></li> <li>Debug Info: <code>/api/debug</code> (\u26a0\ufe0f Should be disabled)</li> </ul>"},{"location":"status/#recommended-actions","title":"Recommended Actions","text":"<ol> <li>Immediate:</li> <li>Remove debug routes from production</li> <li>Enable authentication on metrics endpoints</li> <li> <p>Review and remove webhook bypass middleware</p> </li> <li> <p>This Week:</p> </li> <li>Optimize slow queries</li> <li>Increase Redis cache size</li> <li> <p>Update Stripe API version</p> </li> <li> <p>This Month:</p> </li> <li>Implement horizontal scaling</li> <li>Add redundant Redis instances</li> <li>Upgrade to MySQL 8.1</li> </ol> <p>Status page last updated: {timestamp}</p>"},{"location":"api/models/","title":"Model Reference","text":"<p>Generated on: 2025-06-22 23:28:53</p>"},{"location":"api/models/#model-hierarchy","title":"Model Hierarchy","text":"<pre><code>graph TB\n    AdditionalService --&gt; HasOne\n    AdditionalService --&gt; HasOneThrough\n    AdditionalService --&gt; BelongsTo\n    AdditionalService --&gt; Model\n    AdditionalService --&gt; HasMany\n    AdditionalService --&gt; HasManyThrough\n    AdditionalService --&gt; MorphMany\n    AdditionalService --&gt; BelongsToMany\n    AdditionalService --&gt; MorphToMany\n    Agent --&gt; HasOne\n    Agent --&gt; HasOneThrough\n    Agent --&gt; BelongsTo\n    Agent --&gt; Model\n    Agent --&gt; HasMany\n    Agent --&gt; HasManyThrough\n    Agent --&gt; MorphMany\n    Agent --&gt; BelongsToMany\n    Agent --&gt; MorphToMany\n    ApiCallLog --&gt; HasOne\n    ApiCallLog --&gt; HasOneThrough\n    ApiCallLog --&gt; BelongsTo\n    ApiCallLog --&gt; Model\n    ApiCallLog --&gt; HasMany\n    ApiCallLog --&gt; HasManyThrough\n    ApiCallLog --&gt; MorphMany\n    ApiCallLog --&gt; BelongsToMany\n    ApiCallLog --&gt; MorphToMany\n    ApiCredential --&gt; HasOne\n    ApiCredential --&gt; HasOneThrough\n    ApiCredential --&gt; BelongsTo\n    ApiCredential --&gt; Model\n    ApiCredential --&gt; HasMany\n    ApiCredential --&gt; HasManyThrough\n    ApiCredential --&gt; MorphMany\n    ApiCredential --&gt; BelongsToMany\n    ApiCredential --&gt; MorphToMany\n    Appointment --&gt; HasOne\n    Appointment --&gt; HasOneThrough\n    Appointment --&gt; BelongsTo\n    Appointment --&gt; Model\n    Appointment --&gt; HasMany\n    Appointment --&gt; HasManyThrough\n    Appointment --&gt; MorphMany\n    Appointment --&gt; BelongsToMany\n    Appointment --&gt; MorphToMany\n    AppointmentLock --&gt; HasOne\n    AppointmentLock --&gt; HasOneThrough\n    AppointmentLock --&gt; BelongsTo\n    AppointmentLock --&gt; Model\n    AppointmentLock --&gt; HasMany\n    AppointmentLock --&gt; HasManyThrough\n    AppointmentLock --&gt; MorphMany\n    AppointmentLock --&gt; BelongsToMany\n    AppointmentLock --&gt; MorphToMany\n    AvailabilityCache --&gt; HasOne\n    AvailabilityCache --&gt; HasOneThrough\n    AvailabilityCache --&gt; BelongsTo\n    AvailabilityCache --&gt; Model\n    AvailabilityCache --&gt; HasMany\n    AvailabilityCache --&gt; HasManyThrough\n    AvailabilityCache --&gt; MorphMany\n    AvailabilityCache --&gt; BelongsToMany\n    AvailabilityCache --&gt; MorphToMany\n    BillingPeriod --&gt; HasOne\n    BillingPeriod --&gt; HasOneThrough\n    BillingPeriod --&gt; BelongsTo\n    BillingPeriod --&gt; Model\n    BillingPeriod --&gt; HasMany\n    BillingPeriod --&gt; HasManyThrough\n    BillingPeriod --&gt; MorphMany\n    BillingPeriod --&gt; BelongsToMany\n    BillingPeriod --&gt; MorphToMany\n    Booking --&gt; HasOne\n    Booking --&gt; HasOneThrough\n    Booking --&gt; BelongsTo\n    Booking --&gt; Model\n    Booking --&gt; HasMany\n    Booking --&gt; HasManyThrough\n    Booking --&gt; MorphMany\n    Booking --&gt; BelongsToMany\n    Booking --&gt; MorphToMany\n    Branch --&gt; HasOne\n    Branch --&gt; HasOneThrough\n    Branch --&gt; BelongsTo\n    Branch --&gt; Model\n    Branch --&gt; HasMany\n    Branch --&gt; HasManyThrough\n    Branch --&gt; MorphMany\n    Branch --&gt; BelongsToMany\n    Branch --&gt; MorphToMany\n    BranchEventType --&gt; HasOne\n    BranchEventType --&gt; HasOneThrough\n    BranchEventType --&gt; BelongsTo\n    BranchEventType --&gt; Model\n    BranchEventType --&gt; HasMany\n    BranchEventType --&gt; HasManyThrough\n    BranchEventType --&gt; MorphMany\n    BranchEventType --&gt; BelongsToMany\n    BranchEventType --&gt; MorphToMany\n    BranchPricingOverride --&gt; HasOne\n    BranchPricingOverride --&gt; HasOneThrough\n    BranchPricingOverride --&gt; BelongsTo\n    BranchPricingOverride --&gt; Model\n    BranchPricingOverride --&gt; HasMany\n    BranchPricingOverride --&gt; HasManyThrough\n    BranchPricingOverride --&gt; MorphMany\n    BranchPricingOverride --&gt; BelongsToMany\n    BranchPricingOverride --&gt; MorphToMany\n    BranchServiceOverride --&gt; HasOne\n    BranchServiceOverride --&gt; HasOneThrough\n    BranchServiceOverride --&gt; BelongsTo\n    BranchServiceOverride --&gt; Model\n    BranchServiceOverride --&gt; HasMany\n    BranchServiceOverride --&gt; HasManyThrough\n    BranchServiceOverride --&gt; MorphMany\n    BranchServiceOverride --&gt; BelongsToMany\n    BranchServiceOverride --&gt; MorphToMany\n    Business --&gt; HasOne\n    Business --&gt; HasOneThrough\n    Business --&gt; BelongsTo\n    Business --&gt; Model\n    Business --&gt; HasMany\n    Business --&gt; HasManyThrough\n    Business --&gt; MorphMany\n    Business --&gt; BelongsToMany\n    Business --&gt; MorphToMany\n    BusinessHoursTemplate --&gt; HasOne\n    BusinessHoursTemplate --&gt; HasOneThrough\n    BusinessHoursTemplate --&gt; BelongsTo\n    BusinessHoursTemplate --&gt; Model\n    BusinessHoursTemplate --&gt; HasMany\n    BusinessHoursTemplate --&gt; HasManyThrough\n    BusinessHoursTemplate --&gt; MorphMany\n    BusinessHoursTemplate --&gt; BelongsToMany\n    BusinessHoursTemplate --&gt; MorphToMany\n    CalcomBooking --&gt; HasOne\n    CalcomBooking --&gt; HasOneThrough\n    CalcomBooking --&gt; BelongsTo\n    CalcomBooking --&gt; Model\n    CalcomBooking --&gt; HasMany\n    CalcomBooking --&gt; HasManyThrough\n    CalcomBooking --&gt; MorphMany\n    CalcomBooking --&gt; BelongsToMany\n    CalcomBooking --&gt; MorphToMany\n    CalcomEventType --&gt; HasOne\n    CalcomEventType --&gt; HasOneThrough\n    CalcomEventType --&gt; BelongsTo\n    CalcomEventType --&gt; Model\n    CalcomEventType --&gt; HasMany\n    CalcomEventType --&gt; HasManyThrough\n    CalcomEventType --&gt; MorphMany\n    CalcomEventType --&gt; BelongsToMany\n    CalcomEventType --&gt; MorphToMany\n    Calendar --&gt; HasOne\n    Calendar --&gt; HasOneThrough\n    Calendar --&gt; BelongsTo\n    Calendar --&gt; Model\n    Calendar --&gt; HasMany\n    Calendar --&gt; HasManyThrough\n    Calendar --&gt; MorphMany\n    Calendar --&gt; BelongsToMany\n    Calendar --&gt; MorphToMany\n    CalendarMapping --&gt; HasOne\n    CalendarMapping --&gt; HasOneThrough\n    CalendarMapping --&gt; BelongsTo\n    CalendarMapping --&gt; Model\n    CalendarMapping --&gt; HasMany\n    CalendarMapping --&gt; HasManyThrough\n    CalendarMapping --&gt; MorphMany\n    CalendarMapping --&gt; BelongsToMany\n    CalendarMapping --&gt; MorphToMany\n    Call --&gt; HasOne\n    Call --&gt; HasOneThrough\n    Call --&gt; BelongsTo\n    Call --&gt; Model\n    Call --&gt; HasMany\n    Call --&gt; HasManyThrough\n    Call --&gt; MorphMany\n    Call --&gt; BelongsToMany\n    Call --&gt; MorphToMany\n    CallLog --&gt; HasOne\n    CallLog --&gt; HasOneThrough\n    CallLog --&gt; BelongsTo\n    CallLog --&gt; Model\n    CallLog --&gt; HasMany\n    CallLog --&gt; HasManyThrough\n    CallLog --&gt; MorphMany\n    CallLog --&gt; BelongsToMany\n    CallLog --&gt; MorphToMany\n    CallbackRequest --&gt; HasOne\n    CallbackRequest --&gt; HasOneThrough\n    CallbackRequest --&gt; BelongsTo\n    CallbackRequest --&gt; Model\n    CallbackRequest --&gt; HasMany\n    CallbackRequest --&gt; HasManyThrough\n    CallbackRequest --&gt; MorphMany\n    CallbackRequest --&gt; BelongsToMany\n    CallbackRequest --&gt; MorphToMany\n    Company --&gt; HasOne\n    Company --&gt; HasOneThrough\n    Company --&gt; BelongsTo\n    Company --&gt; Model\n    Company --&gt; HasMany\n    Company --&gt; HasManyThrough\n    Company --&gt; MorphMany\n    Company --&gt; BelongsToMany\n    Company --&gt; MorphToMany\n    CompanyPricing --&gt; HasOne\n    CompanyPricing --&gt; HasOneThrough\n    CompanyPricing --&gt; BelongsTo\n    CompanyPricing --&gt; Model\n    CompanyPricing --&gt; HasMany\n    CompanyPricing --&gt; HasManyThrough\n    CompanyPricing --&gt; MorphMany\n    CompanyPricing --&gt; BelongsToMany\n    CompanyPricing --&gt; MorphToMany\n    CookieConsent --&gt; HasOne\n    CookieConsent --&gt; HasOneThrough\n    CookieConsent --&gt; BelongsTo\n    CookieConsent --&gt; Model\n    CookieConsent --&gt; HasMany\n    CookieConsent --&gt; HasManyThrough\n    CookieConsent --&gt; MorphMany\n    CookieConsent --&gt; BelongsToMany\n    CookieConsent --&gt; MorphToMany\n    Customer --&gt; HasOne\n    Customer --&gt; HasOneThrough\n    Customer --&gt; BelongsTo\n    Customer --&gt; Model\n    Customer --&gt; HasMany\n    Customer --&gt; HasManyThrough\n    Customer --&gt; MorphMany\n    Customer --&gt; BelongsToMany\n    Customer --&gt; MorphToMany\n    CustomerAuth --&gt; HasOne\n    CustomerAuth --&gt; HasOneThrough\n    CustomerAuth --&gt; BelongsTo\n    CustomerAuth --&gt; Model\n    CustomerAuth --&gt; HasMany\n    CustomerAuth --&gt; HasManyThrough\n    CustomerAuth --&gt; MorphMany\n    CustomerAuth --&gt; BelongsToMany\n    CustomerAuth --&gt; MorphToMany\n    CustomerService --&gt; HasOne\n    CustomerService --&gt; HasOneThrough\n    CustomerService --&gt; BelongsTo\n    CustomerService --&gt; Model\n    CustomerService --&gt; HasMany\n    CustomerService --&gt; HasManyThrough\n    CustomerService --&gt; MorphMany\n    CustomerService --&gt; BelongsToMany\n    CustomerService --&gt; MorphToMany\n    DashboardConfiguration --&gt; HasOne\n    DashboardConfiguration --&gt; HasOneThrough\n    DashboardConfiguration --&gt; BelongsTo\n    DashboardConfiguration --&gt; Model\n    DashboardConfiguration --&gt; HasMany\n    DashboardConfiguration --&gt; HasManyThrough\n    DashboardConfiguration --&gt; MorphMany\n    DashboardConfiguration --&gt; BelongsToMany\n    DashboardConfiguration --&gt; MorphToMany\n    Dienstleistung --&gt; HasOne\n    Dienstleistung --&gt; HasOneThrough\n    Dienstleistung --&gt; BelongsTo\n    Dienstleistung --&gt; Model\n    Dienstleistung --&gt; HasMany\n    Dienstleistung --&gt; HasManyThrough\n    Dienstleistung --&gt; MorphMany\n    Dienstleistung --&gt; BelongsToMany\n    Dienstleistung --&gt; MorphToMany\n    DummyCompany --&gt; HasOne\n    DummyCompany --&gt; HasOneThrough\n    DummyCompany --&gt; BelongsTo\n    DummyCompany --&gt; Model\n    DummyCompany --&gt; HasMany\n    DummyCompany --&gt; HasManyThrough\n    DummyCompany --&gt; MorphMany\n    DummyCompany --&gt; BelongsToMany\n    DummyCompany --&gt; MorphToMany\n    EventTypeImportLog --&gt; HasOne\n    EventTypeImportLog --&gt; HasOneThrough\n    EventTypeImportLog --&gt; BelongsTo\n    EventTypeImportLog --&gt; Model\n    EventTypeImportLog --&gt; HasMany\n    EventTypeImportLog --&gt; HasManyThrough\n    EventTypeImportLog --&gt; MorphMany\n    EventTypeImportLog --&gt; BelongsToMany\n    EventTypeImportLog --&gt; MorphToMany\n    FAQ --&gt; HasOne\n    FAQ --&gt; HasOneThrough\n    FAQ --&gt; BelongsTo\n    FAQ --&gt; Model\n    FAQ --&gt; HasMany\n    FAQ --&gt; HasManyThrough\n    FAQ --&gt; MorphMany\n    FAQ --&gt; BelongsToMany\n    FAQ --&gt; MorphToMany\n    Faq --&gt; HasOne\n    Faq --&gt; HasOneThrough\n    Faq --&gt; BelongsTo\n    Faq --&gt; Model\n    Faq --&gt; HasMany\n    Faq --&gt; HasManyThrough\n    Faq --&gt; MorphMany\n    Faq --&gt; BelongsToMany\n    Faq --&gt; MorphToMany\n    GdprRequest --&gt; HasOne\n    GdprRequest --&gt; HasOneThrough\n    GdprRequest --&gt; BelongsTo\n    GdprRequest --&gt; Model\n    GdprRequest --&gt; HasMany\n    GdprRequest --&gt; HasManyThrough\n    GdprRequest --&gt; MorphMany\n    GdprRequest --&gt; BelongsToMany\n    GdprRequest --&gt; MorphToMany\n    Integration --&gt; HasOne\n    Integration --&gt; HasOneThrough\n    Integration --&gt; BelongsTo\n    Integration --&gt; Model\n    Integration --&gt; HasMany\n    Integration --&gt; HasManyThrough\n    Integration --&gt; MorphMany\n    Integration --&gt; BelongsToMany\n    Integration --&gt; MorphToMany\n    Invoice --&gt; HasOne\n    Invoice --&gt; HasOneThrough\n    Invoice --&gt; BelongsTo\n    Invoice --&gt; Model\n    Invoice --&gt; HasMany\n    Invoice --&gt; HasManyThrough\n    Invoice --&gt; MorphMany\n    Invoice --&gt; BelongsToMany\n    Invoice --&gt; MorphToMany\n    InvoiceItem --&gt; HasOne\n    InvoiceItem --&gt; HasOneThrough\n    InvoiceItem --&gt; BelongsTo\n    InvoiceItem --&gt; Model\n    InvoiceItem --&gt; HasMany\n    InvoiceItem --&gt; HasManyThrough\n    InvoiceItem --&gt; MorphMany\n    InvoiceItem --&gt; BelongsToMany\n    InvoiceItem --&gt; MorphToMany\n    InvoiceItemFlexible --&gt; HasOne\n    InvoiceItemFlexible --&gt; HasOneThrough\n    InvoiceItemFlexible --&gt; BelongsTo\n    InvoiceItemFlexible --&gt; Model\n    InvoiceItemFlexible --&gt; HasMany\n    InvoiceItemFlexible --&gt; HasManyThrough\n    InvoiceItemFlexible --&gt; MorphMany\n    InvoiceItemFlexible --&gt; BelongsToMany\n    InvoiceItemFlexible --&gt; MorphToMany\n    KnowledgeAnalytic --&gt; HasOne\n    KnowledgeAnalytic --&gt; HasOneThrough\n    KnowledgeAnalytic --&gt; BelongsTo\n    KnowledgeAnalytic --&gt; Model\n    KnowledgeAnalytic --&gt; HasMany\n    KnowledgeAnalytic --&gt; HasManyThrough\n    KnowledgeAnalytic --&gt; MorphMany\n    KnowledgeAnalytic --&gt; BelongsToMany\n    KnowledgeAnalytic --&gt; MorphToMany\n    KnowledgeCategory --&gt; HasOne\n    KnowledgeCategory --&gt; HasOneThrough\n    KnowledgeCategory --&gt; BelongsTo\n    KnowledgeCategory --&gt; Model\n    KnowledgeCategory --&gt; HasMany\n    KnowledgeCategory --&gt; HasManyThrough\n    KnowledgeCategory --&gt; MorphMany\n    KnowledgeCategory --&gt; BelongsToMany\n    KnowledgeCategory --&gt; MorphToMany\n    KnowledgeCodeSnippet --&gt; HasOne\n    KnowledgeCodeSnippet --&gt; HasOneThrough\n    KnowledgeCodeSnippet --&gt; BelongsTo\n    KnowledgeCodeSnippet --&gt; Model\n    KnowledgeCodeSnippet --&gt; HasMany\n    KnowledgeCodeSnippet --&gt; HasManyThrough\n    KnowledgeCodeSnippet --&gt; MorphMany\n    KnowledgeCodeSnippet --&gt; BelongsToMany\n    KnowledgeCodeSnippet --&gt; MorphToMany\n    KnowledgeComment --&gt; HasOne\n    KnowledgeComment --&gt; HasOneThrough\n    KnowledgeComment --&gt; BelongsTo\n    KnowledgeComment --&gt; Model\n    KnowledgeComment --&gt; HasMany\n    KnowledgeComment --&gt; HasManyThrough\n    KnowledgeComment --&gt; MorphMany\n    KnowledgeComment --&gt; BelongsToMany\n    KnowledgeComment --&gt; MorphToMany\n    KnowledgeDocument --&gt; HasOne\n    KnowledgeDocument --&gt; HasOneThrough\n    KnowledgeDocument --&gt; BelongsTo\n    KnowledgeDocument --&gt; Model\n    KnowledgeDocument --&gt; HasMany\n    KnowledgeDocument --&gt; HasManyThrough\n    KnowledgeDocument --&gt; MorphMany\n    KnowledgeDocument --&gt; BelongsToMany\n    KnowledgeDocument --&gt; MorphToMany\n    KnowledgeFeedback --&gt; HasOne\n    KnowledgeFeedback --&gt; HasOneThrough\n    KnowledgeFeedback --&gt; BelongsTo\n    KnowledgeFeedback --&gt; Model\n    KnowledgeFeedback --&gt; HasMany\n    KnowledgeFeedback --&gt; HasManyThrough\n    KnowledgeFeedback --&gt; MorphMany\n    KnowledgeFeedback --&gt; BelongsToMany\n    KnowledgeFeedback --&gt; MorphToMany\n    KnowledgeNotebook --&gt; HasOne\n    KnowledgeNotebook --&gt; HasOneThrough\n    KnowledgeNotebook --&gt; BelongsTo\n    KnowledgeNotebook --&gt; Model\n    KnowledgeNotebook --&gt; HasMany\n    KnowledgeNotebook --&gt; HasManyThrough\n    KnowledgeNotebook --&gt; MorphMany\n    KnowledgeNotebook --&gt; BelongsToMany\n    KnowledgeNotebook --&gt; MorphToMany\n    KnowledgeNotebookEntry --&gt; HasOne\n    KnowledgeNotebookEntry --&gt; HasOneThrough\n    KnowledgeNotebookEntry --&gt; BelongsTo\n    KnowledgeNotebookEntry --&gt; Model\n    KnowledgeNotebookEntry --&gt; HasMany\n    KnowledgeNotebookEntry --&gt; HasManyThrough\n    KnowledgeNotebookEntry --&gt; MorphMany\n    KnowledgeNotebookEntry --&gt; BelongsToMany\n    KnowledgeNotebookEntry --&gt; MorphToMany\n    KnowledgeRelatedDocument --&gt; HasOne\n    KnowledgeRelatedDocument --&gt; HasOneThrough\n    KnowledgeRelatedDocument --&gt; BelongsTo\n    KnowledgeRelatedDocument --&gt; Model\n    KnowledgeRelatedDocument --&gt; HasMany\n    KnowledgeRelatedDocument --&gt; HasManyThrough\n    KnowledgeRelatedDocument --&gt; MorphMany\n    KnowledgeRelatedDocument --&gt; BelongsToMany\n    KnowledgeRelatedDocument --&gt; MorphToMany\n    KnowledgeRelationship --&gt; HasOne\n    KnowledgeRelationship --&gt; HasOneThrough\n    KnowledgeRelationship --&gt; BelongsTo\n    KnowledgeRelationship --&gt; Model\n    KnowledgeRelationship --&gt; HasMany\n    KnowledgeRelationship --&gt; HasManyThrough\n    KnowledgeRelationship --&gt; MorphMany\n    KnowledgeRelationship --&gt; BelongsToMany\n    KnowledgeRelationship --&gt; MorphToMany\n    KnowledgeSearchIndex --&gt; HasOne\n    KnowledgeSearchIndex --&gt; HasOneThrough\n    KnowledgeSearchIndex --&gt; BelongsTo\n    KnowledgeSearchIndex --&gt; Model\n    KnowledgeSearchIndex --&gt; HasMany\n    KnowledgeSearchIndex --&gt; HasManyThrough\n    KnowledgeSearchIndex --&gt; MorphMany\n    KnowledgeSearchIndex --&gt; BelongsToMany\n    KnowledgeSearchIndex --&gt; MorphToMany\n    KnowledgeTag --&gt; HasOne\n    KnowledgeTag --&gt; HasOneThrough\n    KnowledgeTag --&gt; BelongsTo\n    KnowledgeTag --&gt; Model\n    KnowledgeTag --&gt; HasMany\n    KnowledgeTag --&gt; HasManyThrough\n    KnowledgeTag --&gt; MorphMany\n    KnowledgeTag --&gt; BelongsToMany\n    KnowledgeTag --&gt; MorphToMany\n    KnowledgeVersion --&gt; HasOne\n    KnowledgeVersion --&gt; HasOneThrough\n    KnowledgeVersion --&gt; BelongsTo\n    KnowledgeVersion --&gt; Model\n    KnowledgeVersion --&gt; HasMany\n    KnowledgeVersion --&gt; HasManyThrough\n    KnowledgeVersion --&gt; MorphMany\n    KnowledgeVersion --&gt; BelongsToMany\n    KnowledgeVersion --&gt; MorphToMany\n    Kunde --&gt; HasOne\n    Kunde --&gt; HasOneThrough\n    Kunde --&gt; BelongsTo\n    Kunde --&gt; Model\n    Kunde --&gt; HasMany\n    Kunde --&gt; HasManyThrough\n    Kunde --&gt; MorphMany\n    Kunde --&gt; BelongsToMany\n    Kunde --&gt; MorphToMany\n    LegacyUser --&gt; HasOne\n    LegacyUser --&gt; HasOneThrough\n    LegacyUser --&gt; BelongsTo\n    LegacyUser --&gt; Model\n    LegacyUser --&gt; HasMany\n    LegacyUser --&gt; HasManyThrough\n    LegacyUser --&gt; MorphMany\n    LegacyUser --&gt; BelongsToMany\n    LegacyUser --&gt; MorphToMany\n    MCPMetric --&gt; HasOne\n    MCPMetric --&gt; HasOneThrough\n    MCPMetric --&gt; BelongsTo\n    MCPMetric --&gt; Model\n    MCPMetric --&gt; HasMany\n    MCPMetric --&gt; HasManyThrough\n    MCPMetric --&gt; MorphMany\n    MCPMetric --&gt; BelongsToMany\n    MCPMetric --&gt; MorphToMany\n    MasterService --&gt; HasOne\n    MasterService --&gt; HasOneThrough\n    MasterService --&gt; BelongsTo\n    MasterService --&gt; Model\n    MasterService --&gt; HasMany\n    MasterService --&gt; HasManyThrough\n    MasterService --&gt; MorphMany\n    MasterService --&gt; BelongsToMany\n    MasterService --&gt; MorphToMany\n    Mitarbeiter --&gt; HasOne\n    Mitarbeiter --&gt; HasOneThrough\n    Mitarbeiter --&gt; BelongsTo\n    Mitarbeiter --&gt; Model\n    Mitarbeiter --&gt; HasMany\n    Mitarbeiter --&gt; HasManyThrough\n    Mitarbeiter --&gt; MorphMany\n    Mitarbeiter --&gt; BelongsToMany\n    Mitarbeiter --&gt; MorphToMany\n    Note --&gt; HasOne\n    Note --&gt; HasOneThrough\n    Note --&gt; BelongsTo\n    Note --&gt; Model\n    Note --&gt; HasMany\n    Note --&gt; HasManyThrough\n    Note --&gt; MorphMany\n    Note --&gt; BelongsToMany\n    Note --&gt; MorphToMany\n    Payment --&gt; HasOne\n    Payment --&gt; HasOneThrough\n    Payment --&gt; BelongsTo\n    Payment --&gt; Model\n    Payment --&gt; HasMany\n    Payment --&gt; HasManyThrough\n    Payment --&gt; MorphMany\n    Payment --&gt; BelongsToMany\n    Payment --&gt; MorphToMany\n    PhoneNumber --&gt; HasOne\n    PhoneNumber --&gt; HasOneThrough\n    PhoneNumber --&gt; BelongsTo\n    PhoneNumber --&gt; Model\n    PhoneNumber --&gt; HasMany\n    PhoneNumber --&gt; HasManyThrough\n    PhoneNumber --&gt; MorphMany\n    PhoneNumber --&gt; BelongsToMany\n    PhoneNumber --&gt; MorphToMany\n    PremiumService --&gt; HasOne\n    PremiumService --&gt; HasOneThrough\n    PremiumService --&gt; BelongsTo\n    PremiumService --&gt; Model\n    PremiumService --&gt; HasMany\n    PremiumService --&gt; HasManyThrough\n    PremiumService --&gt; MorphMany\n    PremiumService --&gt; BelongsToMany\n    PremiumService --&gt; MorphToMany\n    RetellAgent --&gt; HasOne\n    RetellAgent --&gt; HasOneThrough\n    RetellAgent --&gt; BelongsTo\n    RetellAgent --&gt; Model\n    RetellAgent --&gt; HasMany\n    RetellAgent --&gt; HasManyThrough\n    RetellAgent --&gt; MorphMany\n    RetellAgent --&gt; BelongsToMany\n    RetellAgent --&gt; MorphToMany\n    RetellWebhook --&gt; HasOne\n    RetellWebhook --&gt; HasOneThrough\n    RetellWebhook --&gt; BelongsTo\n    RetellWebhook --&gt; Model\n    RetellWebhook --&gt; HasMany\n    RetellWebhook --&gt; HasManyThrough\n    RetellWebhook --&gt; MorphMany\n    RetellWebhook --&gt; BelongsToMany\n    RetellWebhook --&gt; MorphToMany\n    SecurityLog --&gt; HasOne\n    SecurityLog --&gt; HasOneThrough\n    SecurityLog --&gt; BelongsTo\n    SecurityLog --&gt; Model\n    SecurityLog --&gt; HasMany\n    SecurityLog --&gt; HasManyThrough\n    SecurityLog --&gt; MorphMany\n    SecurityLog --&gt; BelongsToMany\n    SecurityLog --&gt; MorphToMany\n    Service --&gt; HasOne\n    Service --&gt; HasOneThrough\n    Service --&gt; BelongsTo\n    Service --&gt; Model\n    Service --&gt; HasMany\n    Service --&gt; HasManyThrough\n    Service --&gt; MorphMany\n    Service --&gt; BelongsToMany\n    Service --&gt; MorphToMany\n    Staff --&gt; HasOne\n    Staff --&gt; HasOneThrough\n    Staff --&gt; BelongsTo\n    Staff --&gt; Model\n    Staff --&gt; HasMany\n    Staff --&gt; HasManyThrough\n    Staff --&gt; MorphMany\n    Staff --&gt; BelongsToMany\n    Staff --&gt; MorphToMany\n    StaffEventType --&gt; HasOne\n    StaffEventType --&gt; HasOneThrough\n    StaffEventType --&gt; BelongsTo\n    StaffEventType --&gt; Model\n    StaffEventType --&gt; HasMany\n    StaffEventType --&gt; HasManyThrough\n    StaffEventType --&gt; MorphMany\n    StaffEventType --&gt; BelongsToMany\n    StaffEventType --&gt; MorphToMany\n    StaffService --&gt; HasOne\n    StaffService --&gt; HasOneThrough\n    StaffService --&gt; BelongsTo\n    StaffService --&gt; Model\n    StaffService --&gt; HasMany\n    StaffService --&gt; HasManyThrough\n    StaffService --&gt; MorphMany\n    StaffService --&gt; BelongsToMany\n    StaffService --&gt; MorphToMany\n    StaffServiceAssignment --&gt; HasOne\n    StaffServiceAssignment --&gt; HasOneThrough\n    StaffServiceAssignment --&gt; BelongsTo\n    StaffServiceAssignment --&gt; Model\n    StaffServiceAssignment --&gt; HasMany\n    StaffServiceAssignment --&gt; HasManyThrough\n    StaffServiceAssignment --&gt; MorphMany\n    StaffServiceAssignment --&gt; BelongsToMany\n    StaffServiceAssignment --&gt; MorphToMany\n    TaxRate --&gt; HasOne\n    TaxRate --&gt; HasOneThrough\n    TaxRate --&gt; BelongsTo\n    TaxRate --&gt; Model\n    TaxRate --&gt; HasMany\n    TaxRate --&gt; HasManyThrough\n    TaxRate --&gt; MorphMany\n    TaxRate --&gt; BelongsToMany\n    TaxRate --&gt; MorphToMany\n    Telefonnummer --&gt; HasOne\n    Telefonnummer --&gt; HasOneThrough\n    Telefonnummer --&gt; BelongsTo\n    Telefonnummer --&gt; Model\n    Telefonnummer --&gt; HasMany\n    Telefonnummer --&gt; HasManyThrough\n    Telefonnummer --&gt; MorphMany\n    Telefonnummer --&gt; BelongsToMany\n    Telefonnummer --&gt; MorphToMany\n    Tenant --&gt; HasOne\n    Tenant --&gt; HasOneThrough\n    Tenant --&gt; BelongsTo\n    Tenant --&gt; Model\n    Tenant --&gt; HasMany\n    Tenant --&gt; HasManyThrough\n    Tenant --&gt; MorphMany\n    Tenant --&gt; BelongsToMany\n    Tenant --&gt; MorphToMany\n    Termin --&gt; HasOne\n    Termin --&gt; HasOneThrough\n    Termin --&gt; BelongsTo\n    Termin --&gt; Model\n    Termin --&gt; HasMany\n    Termin --&gt; HasManyThrough\n    Termin --&gt; MorphMany\n    Termin --&gt; BelongsToMany\n    Termin --&gt; MorphToMany\n    UnifiedEventType --&gt; HasOne\n    UnifiedEventType --&gt; HasOneThrough\n    UnifiedEventType --&gt; BelongsTo\n    UnifiedEventType --&gt; Model\n    UnifiedEventType --&gt; HasMany\n    UnifiedEventType --&gt; HasManyThrough\n    UnifiedEventType --&gt; MorphMany\n    UnifiedEventType --&gt; BelongsToMany\n    UnifiedEventType --&gt; MorphToMany\n    User --&gt; HasOne\n    User --&gt; HasOneThrough\n    User --&gt; BelongsTo\n    User --&gt; Model\n    User --&gt; HasMany\n    User --&gt; HasManyThrough\n    User --&gt; MorphMany\n    User --&gt; BelongsToMany\n    User --&gt; MorphToMany\n    ValidationResult --&gt; HasOne\n    ValidationResult --&gt; HasOneThrough\n    ValidationResult --&gt; BelongsTo\n    ValidationResult --&gt; Model\n    ValidationResult --&gt; HasMany\n    ValidationResult --&gt; HasManyThrough\n    ValidationResult --&gt; MorphMany\n    ValidationResult --&gt; BelongsToMany\n    ValidationResult --&gt; MorphToMany\n    WebhookEvent --&gt; HasOne\n    WebhookEvent --&gt; HasOneThrough\n    WebhookEvent --&gt; BelongsTo\n    WebhookEvent --&gt; Model\n    WebhookEvent --&gt; HasMany\n    WebhookEvent --&gt; HasManyThrough\n    WebhookEvent --&gt; MorphMany\n    WebhookEvent --&gt; BelongsToMany\n    WebhookEvent --&gt; MorphToMany\n    WorkingHour --&gt; HasOne\n    WorkingHour --&gt; HasOneThrough\n    WorkingHour --&gt; BelongsTo\n    WorkingHour --&gt; Model\n    WorkingHour --&gt; HasMany\n    WorkingHour --&gt; HasManyThrough\n    WorkingHour --&gt; MorphMany\n    WorkingHour --&gt; BelongsToMany\n    WorkingHour --&gt; MorphToMany\n    WorkingHours --&gt; HasOne\n    WorkingHours --&gt; HasOneThrough\n    WorkingHours --&gt; BelongsTo\n    WorkingHours --&gt; Model\n    WorkingHours --&gt; HasMany\n    WorkingHours --&gt; HasManyThrough\n    WorkingHours --&gt; MorphMany\n    WorkingHours --&gt; BelongsToMany\n    WorkingHours --&gt; MorphToMany</code></pre>"},{"location":"api/models/#additionalservice","title":"AdditionalService","text":"<p>Table: <code>additional_services</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>name</code> - <code>description</code> - <code>type</code> - <code>price</code> - <code>unit</code> - <code>is_active</code> - <code>stripe_price_id</code> - <code>metadata</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>metadata</code>: array - <code>price</code>: decimal:2 - <code>is_active</code>: boolean</p> <p>Relationships: - <code>customerServices()</code>: HasMany</p> <p>Scopes: - <code>active()</code> - <code>oneTime()</code> - <code>recurring()</code> - <code>allTenants()</code> - <code>forTenant()</code></p>"},{"location":"api/models/#agent","title":"Agent","text":"<p>Table: <code>agents</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>agent_id</code> - <code>type</code> - <code>config</code> - <code>active</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>config</code>: array - <code>active</code>: boolean</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#apicalllog","title":"ApiCallLog","text":"<p>Table: <code>api_call_logs</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>service</code> - <code>endpoint</code> - <code>method</code> - <code>request_headers</code> - <code>request_body</code> - <code>response_status</code> - <code>response_headers</code> - <code>response_body</code> - <code>duration_ms</code> - <code>correlation_id</code> - <code>company_id</code> - <code>user_id</code> - <code>ip_address</code> - <code>user_agent</code> - <code>error_message</code> - <code>requested_at</code> - <code>responded_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>request_headers</code>: array - <code>request_body</code>: array - <code>response_headers</code>: array - <code>response_body</code>: array - <code>duration_ms</code>: float - <code>requested_at</code>: datetime - <code>responded_at</code>: datetime</p> <p>Relationships: - <code>company()</code>: BelongsTo</p> <p>Scopes: - <code>forService()</code> - <code>forEndpoint()</code> - <code>successful()</code> - <code>failed()</code> - <code>correlated()</code> - <code>dateRange()</code></p>"},{"location":"api/models/#apicredential","title":"ApiCredential","text":"<p>Table: <code>api_credentials</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>credentialable_id</code> - <code>credentialable_type</code> - <code>service</code> - <code>key_type</code> - <code>value</code> - <code>is_inherited</code> - <code>inherited_from_id</code> - <code>inherited_from_type</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>is_inherited</code>: boolean</p> <p>Relationships:</p> <p>Scopes: - <code>forService()</code> - <code>ofType()</code></p>"},{"location":"api/models/#appointment","title":"Appointment","text":"<p>Table: <code>appointments</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>customer_id</code> - <code>branch_id</code> - <code>staff_id</code> - <code>service_id</code> - <code>calcom_event_type_id</code> - <code>calcom_booking_id</code> - <code>starts_at</code> - <code>ends_at</code> - <code>status</code> - <code>notes</code> - <code>metadata</code> - <code>price</code> - <code>call_id</code> - <code>tenant_id</code> - <code>company_id</code> - <code>external_id</code> - <code>calcom_v2_booking_id</code> - <code>reminder_24h_sent_at</code> - <code>reminder_2h_sent_at</code> - <code>reminder_30m_sent_at</code> - <code>payload</code> - <code>version</code> - <code>lock_expires_at</code> - <code>lock_token</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>starts_at</code>: datetime - <code>ends_at</code>: datetime - <code>metadata</code>: array - <code>payload</code>: array - <code>reminder_24h_sent_at</code>: datetime - <code>reminder_2h_sent_at</code>: datetime - <code>reminder_30m_sent_at</code>: datetime - <code>lock_expires_at</code>: datetime - <code>version</code>: integer</p> <p>Relationships: - <code>customer()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>staff()</code>: BelongsTo - <code>company()</code>: BelongsTo - <code>service()</code>: BelongsTo - <code>calcomBooking()</code>: BelongsTo - <code>calcomEventType()</code>: BelongsTo - <code>call()</code>: BelongsTo</p> <p>Scopes: - <code>upcoming()</code> - <code>today()</code> - <code>dateRange()</code> - <code>byStatus()</code> - <code>scheduled()</code> - <code>completed()</code> - <code>forCompany()</code> - <code>forBranch()</code> - <code>forStaff()</code> - <code>forCustomer()</code> - <code>withRelations()</code> - <code>needingReminders()</code> - <code>overdue()</code></p>"},{"location":"api/models/#appointmentlock","title":"AppointmentLock","text":"<p>Table: <code>appointment_locks</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: No</p> <p>Fillable Attributes: - <code>branch_id</code> - <code>staff_id</code> - <code>starts_at</code> - <code>ends_at</code> - <code>lock_token</code> - <code>lock_expires_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>starts_at</code>: datetime - <code>ends_at</code>: datetime - <code>lock_expires_at</code>: datetime - <code>created_at</code>: datetime</p> <p>Relationships: - <code>branch()</code>: BelongsTo - <code>staff()</code>: BelongsTo</p> <p>Scopes: - <code>active()</code> - <code>expired()</code> - <code>forTimeRange()</code></p>"},{"location":"api/models/#availabilitycache","title":"AvailabilityCache","text":"<p>Table: <code>availability_cache</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>staff_id</code> - <code>event_type_id</code> - <code>date</code> - <code>slots</code> - <code>cache_key</code> - <code>cached_at</code> - <code>expires_at</code> - <code>is_valid</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>date</code>: date - <code>slots</code>: array - <code>cached_at</code>: datetime - <code>expires_at</code>: datetime - <code>is_valid</code>: boolean</p> <p>Relationships: - <code>staff()</code>: BelongsTo - <code>eventType()</code>: BelongsTo</p> <p>Scopes: - <code>valid()</code> - <code>expired()</code> - <code>invalid()</code></p>"},{"location":"api/models/#billingperiod","title":"BillingPeriod","text":"<p>Table: <code>billing_periods</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>period_start</code> - <code>period_end</code> - <code>total_minutes</code> - <code>included_minutes</code> - <code>overage_minutes</code> - <code>total_cost</code> - <code>total_revenue</code> - <code>margin</code> - <code>margin_percentage</code> - <code>is_invoiced</code> - <code>invoiced_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>period_start</code>: date - <code>period_end</code>: date - <code>total_minutes</code>: integer - <code>included_minutes</code>: integer - <code>overage_minutes</code>: integer - <code>total_cost</code>: decimal:2 - <code>total_revenue</code>: decimal:2 - <code>margin</code>: decimal:2 - <code>margin_percentage</code>: decimal:2 - <code>is_invoiced</code>: boolean - <code>invoiced_at</code>: datetime</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>invoice()</code>: BelongsTo</p> <p>Scopes: - <code>uninvoiced()</code> - <code>currentMonth()</code></p>"},{"location":"api/models/#booking","title":"Booking","text":"<p>Table: <code>bookings</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Attribute Casts: - <code>id</code>: int</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#branch","title":"Branch","text":"<p>Table: <code>branches</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>customer_id</code> - <code>name</code> - <code>slug</code> - <code>phone_number</code> - <code>notification_email</code> - <code>address</code> - <code>city</code> - <code>postal_code</code> - <code>country</code> - <code>website</code> - <code>business_hours</code> - <code>retell_agent_id</code> - <code>retell_agent_data</code> - <code>retell_synced_at</code> - <code>retell_agent_status</code> - <code>retell_agent_created_at</code> - <code>settings</code> - <code>calcom_api_key</code> - <code>calcom_event_type_id</code> - <code>calcom_team_slug</code> - <code>calendar_mode</code> - <code>active</code> - <code>notify_on_booking</code> - <code>deleted_at</code> - <code>features</code></p> <p>Attribute Casts: - <code>is_main</code>: boolean - <code>active</code>: boolean - <code>invoice_recipient</code>: boolean - <code>notify_on_booking</code>: boolean - <code>calendar_mapping</code>: array - <code>integration_status</code>: array - <code>opening_hours</code>: array - <code>created_at</code>: datetime - <code>updated_at</code>: datetime - <code>deleted_at</code>: datetime - <code>integrations_tested_at</code>: datetime - <code>retell_agent_cache</code>: array - <code>retell_last_sync</code>: datetime - <code>configuration_status</code>: array - <code>parent_settings</code>: array - <code>business_hours</code>: array - <code>services_override</code>: array - <code>settings</code>: array - <code>features</code>: array - <code>retell_agent_data</code>: array - <code>retell_agent_created_at</code>: datetime - <code>retell_synced_at</code>: datetime - <code>coordinates</code>: array - <code>transport_info</code>: array</p> <p>Relationships:</p> <p>Scopes: - <code>active()</code> - <code>main()</code> - <code>forCompany()</code> - <code>currentCompany()</code></p>"},{"location":"api/models/#brancheventtype","title":"BranchEventType","text":"<p>Table: <code>branch_event_types</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>branch_id</code> - <code>event_type_id</code> - <code>is_primary</code></p> <p>Attribute Casts: - <code>is_primary</code>: boolean</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#branchpricingoverride","title":"BranchPricingOverride","text":"<p>Table: <code>branch_pricing_overrides</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_pricing_id</code> - <code>branch_id</code> - <code>price_per_minute</code> - <code>included_minutes</code> - <code>overage_price_per_minute</code> - <code>is_active</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>price_per_minute</code>: decimal:4 - <code>included_minutes</code>: integer - <code>overage_price_per_minute</code>: decimal:4 - <code>is_active</code>: boolean</p> <p>Relationships: - <code>pricing()</code>: BelongsTo - <code>branch()</code>: BelongsTo</p> <p>Scopes: - <code>active()</code></p>"},{"location":"api/models/#branchserviceoverride","title":"BranchServiceOverride","text":"<p>Table: <code>branch_service_overrides</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>branch_id</code> - <code>master_service_id</code> - <code>custom_duration</code> - <code>custom_price</code> - <code>custom_calcom_event_type_id</code> - <code>active</code></p> <p>Attribute Casts: - <code>custom_duration</code>: integer - <code>custom_price</code>: decimal:2 - <code>active</code>: boolean</p> <p>Relationships: - <code>branch()</code>: BelongsTo - <code>masterService()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#business","title":"Business","text":"<p>Table: <code>businesses</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>adresse</code> - <code>telefon</code> - <code>email</code> - <code>website</code> - <code>oeffnungszeiten</code> - <code>api_key</code> - <code>cal_com_user_id</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>oeffnungszeiten</code>: array</p> <p>Relationships: - <code>staff()</code>: HasMany - <code>services()</code>: HasMany - <code>appointments()</code>: HasMany - <code>calls()</code>: HasMany - <code>faqs()</code>: HasMany</p> <p>Scopes:</p>"},{"location":"api/models/#businesshourstemplate","title":"BusinessHoursTemplate","text":"<p>Table: <code>business_hours_templates</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>description</code> - <code>hours</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>hours</code>: array</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#calcombooking","title":"CalcomBooking","text":"<p>Table: <code>calcom_bookings</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>calcom_uid</code> - <code>appointment_id</code> - <code>status</code> - <code>raw_payload</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>raw_payload</code>: array</p> <p>Relationships: - <code>appointment()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#calcomeventtype","title":"CalcomEventType","text":"<p>Table: <code>calcom_event_types</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>staff_id</code> - <code>service_id</code> - <code>calcom_event_type_id</code> - <code>duration</code> - <code>calendar</code> - <code>tenant_id</code> - <code>name</code> - <code>slug</code> - <code>calcom_numeric_event_type_id</code> - <code>duration_minutes</code> - <code>description</code> - <code>price</code> - <code>is_active</code> - <code>is_team_event</code> - <code>requires_confirmation</code> - <code>booking_limits</code> - <code>sync_status</code> - <code>sync_error</code> - <code>last_synced_at</code> - <code>metadata</code> - <code>minimum_booking_notice</code> - <code>booking_future_limit</code> - <code>time_slot_interval</code> - <code>buffer_before</code> - <code>buffer_after</code> - <code>locations</code> - <code>custom_fields</code> - <code>max_bookings_per_day</code> - <code>seats_per_time_slot</code> - <code>schedule_id</code> - <code>recurring_config</code> - <code>setup_status</code> - <code>setup_checklist</code> - <code>webhook_settings</code> - <code>calcom_url</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>is_active</code>: boolean - <code>price</code>: decimal:2 - <code>last_synced_at</code>: datetime - <code>metadata</code>: array - <code>locations</code>: array - <code>custom_fields</code>: array - <code>recurring_config</code>: array - <code>setup_checklist</code>: array - <code>webhook_settings</code>: array - <code>is_team_event</code>: boolean - <code>requires_confirmation</code>: boolean</p> <p>Relationships: - <code>assignedStaff()</code>: BelongsToMany - <code>staff()</code>: BelongsToMany - <code>company()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>branches()</code>: BelongsToMany - <code>primaryBranches()</code>: BelongsToMany - <code>bookings()</code>: HasMany</p> <p>Scopes: - <code>active()</code> - <code>synced()</code></p>"},{"location":"api/models/#calendar","title":"Calendar","text":"<p>Table: <code>calendars</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>staff_id</code> - <code>provider</code> - <code>api_key</code> - <code>event_type_id</code> - <code>external_user_id</code> - <code>validated_at</code></p> <p>Attribute Casts: - <code>validated_at</code>: datetime - <code>deleted_at</code>: datetime</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#calendarmapping","title":"CalendarMapping","text":"<p>Table: <code>calendar_mappings</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>branch_id</code> - <code>staff_id</code> - <code>calendar_type</code> - <code>calendar_details</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>calendar_details</code>: array</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#call","title":"Call","text":"<p>Table: <code>calls</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>call_id</code> - <code>caller</code> - <code>from_number</code> - <code>to_number</code> - <code>retell_call_id</code> - <code>retell_agent_id</code> - <code>call_status</code> - <code>transcript</code> - <code>transcription_id</code> - <code>recording_url</code> - <code>call_type</code> - <code>audio_url</code> - <code>video_url</code> - <code>duration_sec</code> - <code>duration_minutes</code> - <code>cost</code> - <code>cost_cents</code> - <code>customer_id</code> - <code>appointment_id</code> - <code>agent_id</code> - <code>company_id</code> - <code>branch_id</code> - <code>staff_id</code> - <code>analysis</code> - <code>webhook_data</code> - <code>raw</code> - <code>raw_data</code> - <code>notes</code> - <code>metadata</code> - <code>tags</code> - <code>sentiment</code> - <code>start_timestamp</code> - <code>end_timestamp</code> - <code>direction</code> - <code>disconnection_reason</code> - <code>transcript_object</code> - <code>transcript_with_tools</code> - <code>latency_metrics</code> - <code>cost_breakdown</code> - <code>llm_usage</code> - <code>public_log_url</code> - <code>retell_dynamic_variables</code> - <code>opt_out_sensitive_data</code> - <code>details</code> - <code>external_id</code> - <code>phone_number</code> - <code>conversation_id</code> - <code>call_successful</code> - <code>tmp_call_id</code> - <code>agent_version</code> - <code>retell_cost</code> - <code>custom_sip_headers</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>analysis</code>: array - <code>webhook_data</code>: array - <code>raw</code>: array - <code>raw_data</code>: array - <code>metadata</code>: array - <code>tags</code>: array - <code>cost</code>: decimal:2 - <code>duration_minutes</code>: decimal:2 - <code>details</code>: array - <code>transcript_object</code>: array - <code>transcript_with_tools</code>: array - <code>latency_metrics</code>: array - <code>cost_breakdown</code>: array - <code>llm_usage</code>: array - <code>retell_dynamic_variables</code>: array - <code>retell_llm_dynamic_variables</code>: array - <code>custom_sip_headers</code>: array - <code>start_timestamp</code>: datetime - <code>end_timestamp</code>: datetime - <code>opt_out_sensitive_data</code>: boolean - <code>call_successful</code>: boolean - <code>agent_version</code>: integer - <code>retell_cost</code>: decimal:4</p> <p>Relationships: - <code>customer()</code>: BelongsTo - <code>appointment()</code>: BelongsTo - <code>company()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>staff()</code>: BelongsTo</p> <p>Scopes: - <code>recent()</code> - <code>today()</code> - <code>dateRange()</code> - <code>byStatus()</code> - <code>successful()</code> - <code>failed()</code> - <code>fromNumber()</code> - <code>forCompany()</code> - <code>withCustomer()</code> - <code>withoutCustomer()</code> - <code>withAppointment()</code> - <code>withRelations()</code> - <code>longDuration()</code> - <code>highCost()</code> - <code>currentCompany()</code></p>"},{"location":"api/models/#calllog","title":"CallLog","text":"<p>Table: <code>call_logs</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>call_id</code> - <code>caller_number</code> - <code>start_time</code> - <code>end_time</code> - <code>duration</code> - <code>transcript</code> - <code>intent</code> - <code>extracted_data</code> - <code>appointment_id</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>extracted_data</code>: array - <code>start_time</code>: datetime - <code>end_time</code>: datetime</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#callbackrequest","title":"CallbackRequest","text":"<p>Table: <code>callback_requests</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>call_id</code> - <code>customer_phone</code> - <code>customer_name</code> - <code>requested_service</code> - <code>requested_date</code> - <code>requested_time</code> - <code>reason</code> - <code>error_details</code> - <code>call_summary</code> - <code>priority</code> - <code>status</code> - <code>assigned_to</code> - <code>completed_by</code> - <code>completion_notes</code> - <code>auto_close_after_hours</code> - <code>processed_at</code> - <code>auto_closed_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>error_details</code>: array - <code>requested_date</code>: date - <code>requested_time</code>: time - <code>processed_at</code>: datetime - <code>auto_closed_at</code>: datetime</p> <p>Relationships: - <code>call()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>assignedUser()</code>: BelongsTo - <code>completedByUser()</code>: BelongsTo</p> <p>Scopes: - <code>pending()</code> - <code>overdue()</code> - <code>today()</code> - <code>priority()</code> - <code>forCompany()</code> - <code>currentCompany()</code></p>"},{"location":"api/models/#company","title":"Company","text":"<p>Table: <code>companies</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>slug</code> - <code>industry</code> - <code>website</code> - <code>email</code> - <code>phone</code> - <code>address</code> - <code>city</code> - <code>state</code> - <code>postal_code</code> - <code>country</code> - <code>timezone</code> - <code>currency</code> - <code>logo</code> - <code>settings</code> - <code>metadata</code> - <code>is_active</code> - <code>trial_ends_at</code> - <code>subscription_status</code> - <code>subscription_plan</code> - <code>retell_api_key</code> - <code>retell_agent_id</code> - <code>calcom_api_key</code> - <code>calcom_team_slug</code> - <code>calcom_user_id</code> - <code>google_calendar_credentials</code> - <code>stripe_customer_id</code> - <code>stripe_subscription_id</code> - <code>tax_number</code> - <code>vat_id</code> - <code>is_small_business</code> - <code>small_business_threshold_date</code> - <code>tax_configuration</code> - <code>invoice_prefix</code> - <code>next_invoice_number</code> - <code>payment_terms</code> - <code>auto_invoice</code> - <code>invoice_day_of_month</code> - <code>credit_limit</code> - <code>revenue_ytd</code> - <code>revenue_previous_year</code> - <code>subscription_started_at</code> - <code>subscription_current_period_end</code></p> <p>Hidden Attributes: - <code>retell_api_key</code> - <code>calcom_api_key</code> - <code>google_calendar_credentials</code> - <code>stripe_customer_id</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>settings</code>: array - <code>metadata</code>: array - <code>tax_configuration</code>: array - <code>google_calendar_credentials</code>: encrypted:array - <code>is_active</code>: boolean - <code>is_small_business</code>: boolean - <code>auto_invoice</code>: boolean - <code>trial_ends_at</code>: datetime - <code>small_business_threshold_date</code>: date - <code>next_invoice_number</code>: integer - <code>invoice_day_of_month</code>: integer - <code>credit_limit</code>: decimal:2 - <code>revenue_ytd</code>: decimal:2 - <code>revenue_previous_year</code>: decimal:2 - <code>subscription_started_at</code>: datetime - <code>subscription_current_period_end</code>: datetime - <code>deleted_at</code>: datetime</p> <p>Relationships: - <code>branches()</code>: HasMany - <code>staff()</code>: HasMany - <code>customers()</code>: HasMany - <code>appointments()</code>: HasMany - <code>calls()</code>: HasMany - <code>services()</code>: HasMany - <code>users()</code>: HasMany - <code>invoices()</code>: HasMany - <code>taxRates()</code>: HasMany - <code>payments()</code>: HasMany - <code>eventTypes()</code>: HasMany - <code>phoneNumbers()</code>: HasMany</p> <p>Scopes:</p>"},{"location":"api/models/#companypricing","title":"CompanyPricing","text":"<p>Table: <code>company_pricing</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>price_per_minute</code> - <code>setup_fee</code> - <code>monthly_base_fee</code> - <code>included_minutes</code> - <code>overage_price_per_minute</code> - <code>is_active</code> - <code>valid_from</code> - <code>valid_until</code> - <code>notes</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>price_per_minute</code>: decimal:4 - <code>setup_fee</code>: decimal:2 - <code>monthly_base_fee</code>: decimal:2 - <code>overage_price_per_minute</code>: decimal:4 - <code>included_minutes</code>: integer - <code>is_active</code>: boolean - <code>valid_from</code>: date - <code>valid_until</code>: date</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>branchOverrides()</code>: HasMany</p> <p>Scopes: - <code>active()</code></p>"},{"location":"api/models/#cookieconsent","title":"CookieConsent","text":"<p>Table: <code>cookie_consents</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>customer_id</code> - <code>session_id</code> - <code>ip_address</code> - <code>user_agent</code> - <code>necessary_cookies</code> - <code>functional_cookies</code> - <code>analytics_cookies</code> - <code>marketing_cookies</code> - <code>consent_details</code> - <code>consented_at</code> - <code>withdrawn_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>necessary_cookies</code>: boolean - <code>functional_cookies</code>: boolean - <code>analytics_cookies</code>: boolean - <code>marketing_cookies</code>: boolean - <code>consent_details</code>: array - <code>consented_at</code>: datetime - <code>withdrawn_at</code>: datetime</p> <p>Relationships: - <code>customer()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#customer","title":"Customer","text":"<p>Table: <code>customers</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>name</code> - <code>email</code> - <code>phone</code> - <code>birthdate</code> - <code>tags</code> - <code>notes</code> - <code>password</code> - <code>preferred_language</code> - <code>preferred_branch_id</code> - <code>preferred_staff_id</code> - <code>location_data</code> - <code>portal_enabled</code> - <code>portal_access_token</code> - <code>portal_token_expires_at</code> - <code>last_portal_login_at</code></p> <p>Hidden Attributes: - <code>password</code> - <code>remember_token</code> - <code>portal_access_token</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>birthdate</code>: date - <code>tags</code>: array - <code>location_data</code>: array - <code>portal_enabled</code>: boolean - <code>portal_token_expires_at</code>: datetime - <code>last_portal_login_at</code>: datetime - <code>email_verified_at</code>: datetime</p> <p>Relationships: - <code>branches()</code>: HasMany - <code>appointments()</code>: HasMany - <code>calls()</code>: HasMany - <code>notes()</code>: HasMany</p> <p>Scopes: - <code>active()</code> - <code>withAppointments()</code> - <code>byPhone()</code> - <code>byEmail()</code> - <code>forCompany()</code> - <code>withAppointmentCount()</code> - <code>recentlyActive()</code> - <code>withNoShows()</code> - <code>withNoShowCount()</code> - <code>search()</code></p>"},{"location":"api/models/#customerauth","title":"CustomerAuth","text":"<p>Table: <code>customers</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>first_name</code> - <code>last_name</code> - <code>email</code> - <code>phone</code> - <code>password</code> - <code>portal_enabled</code> - <code>portal_access_token</code> - <code>portal_token_expires_at</code> - <code>last_portal_login_at</code> - <code>preferred_language</code> - <code>email_verified_at</code></p> <p>Hidden Attributes: - <code>password</code> - <code>remember_token</code> - <code>portal_access_token</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>email_verified_at</code>: datetime - <code>portal_token_expires_at</code>: datetime - <code>last_portal_login_at</code>: datetime - <code>portal_enabled</code>: boolean</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>appointments()</code>: HasMany - <code>calls()</code>: HasMany</p> <p>Scopes:</p>"},{"location":"api/models/#customerservice","title":"CustomerService","text":"<p>Table: <code>customer_services</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>service_id</code> - <code>invoice_id</code> - <code>quantity</code> - <code>unit_price</code> - <code>total_price</code> - <code>service_date</code> - <code>status</code> - <code>notes</code> - <code>created_by</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>quantity</code>: decimal:2 - <code>unit_price</code>: decimal:2 - <code>total_price</code>: decimal:2 - <code>service_date</code>: date</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>service()</code>: BelongsTo - <code>invoice()</code>: BelongsTo - <code>creator()</code>: BelongsTo</p> <p>Scopes: - <code>pending()</code> - <code>invoiced()</code> - <code>inDateRange()</code></p>"},{"location":"api/models/#dashboardconfiguration","title":"DashboardConfiguration","text":"<p>Table: <code>dashboard_configurations</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>user_id</code> - <code>widget_settings</code> - <code>layout_settings</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>widget_settings</code>: array - <code>layout_settings</code>: array</p> <p>Relationships: - <code>user()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#dienstleistung","title":"Dienstleistung","text":"<p>Table: <code>dienstleistungen</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>kunde_id</code> - <code>name</code> - <code>dauer_minuten</code> - <code>preis</code> - <code>cal_com_event_type_id</code> - <code>beschreibung</code> - <code>aktiv</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>preis</code>: decimal:2 - <code>aktiv</code>: boolean</p> <p>Relationships: - <code>kunde()</code>: BelongsTo - <code>mitarbeiter()</code>: BelongsToMany</p> <p>Scopes:</p>"},{"location":"api/models/#dummycompany","title":"DummyCompany","text":"<p>Table: <code>dummy_companies</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Attribute Casts: - <code>id</code>: int</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#eventtypeimportlog","title":"EventTypeImportLog","text":"<p>Table: <code>event_type_import_logs</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>user_id</code> - <code>import_type</code> - <code>total_found</code> - <code>total_imported</code> - <code>total_skipped</code> - <code>total_errors</code> - <code>import_details</code> - <code>error_details</code> - <code>status</code> - <code>started_at</code> - <code>completed_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>import_details</code>: array - <code>error_details</code>: array - <code>started_at</code>: datetime - <code>completed_at</code>: datetime</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>user()</code>: BelongsTo</p> <p>Scopes: - <code>successful()</code> - <code>failed()</code></p>"},{"location":"api/models/#faq","title":"FAQ","text":"<p>Table: <code>faqs</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>question</code> - <code>answer</code> - <code>active</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>active</code>: boolean</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#faq_1","title":"Faq","text":"<p>Table: <code>faqs</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>question</code> - <code>answer</code> - <code>active</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>active</code>: boolean</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#gdprrequest","title":"GdprRequest","text":"<p>Table: <code>gdpr_requests</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>customer_id</code> - <code>company_id</code> - <code>type</code> - <code>status</code> - <code>reason</code> - <code>admin_notes</code> - <code>exported_data</code> - <code>export_file_path</code> - <code>requested_at</code> - <code>processed_at</code> - <code>completed_at</code> - <code>processed_by</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>exported_data</code>: array - <code>requested_at</code>: datetime - <code>processed_at</code>: datetime - <code>completed_at</code>: datetime</p> <p>Relationships: - <code>customer()</code>: BelongsTo - <code>company()</code>: BelongsTo - <code>processedBy()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#integration","title":"Integration","text":"<p>Table: <code>integrations</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>customer_id</code> - <code>system</code> - <code>credentials</code> - <code>active</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>credentials</code>: array - <code>active</code>: boolean</p> <p>Relationships: - <code>customer()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#invoice","title":"Invoice","text":"<p>Table: <code>invoices</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>stripe_invoice_id</code> - <code>invoice_number</code> - <code>status</code> - <code>creation_mode</code> - <code>subtotal</code> - <code>tax_amount</code> - <code>total</code> - <code>currency</code> - <code>invoice_date</code> - <code>due_date</code> - <code>paid_date</code> - <code>payment_method</code> - <code>payment_terms</code> - <code>stripe_payment_intent_id</code> - <code>pdf_url</code> - <code>metadata</code> - <code>notes</code> - <code>billing_reason</code> - <code>auto_advance</code> - <code>tax_configuration</code> - <code>is_reverse_charge</code> - <code>customer_vat_id</code> - <code>invoice_type</code> - <code>original_invoice_id</code> - <code>finalized_at</code> - <code>tax_note</code> - <code>is_tax_exempt</code> - <code>period_start</code> - <code>period_end</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>metadata</code>: array - <code>tax_configuration</code>: array - <code>invoice_date</code>: date - <code>due_date</code>: date - <code>paid_date</code>: date - <code>period_start</code>: date - <code>period_end</code>: date - <code>finalized_at</code>: datetime - <code>auto_advance</code>: boolean - <code>is_reverse_charge</code>: boolean - <code>is_tax_exempt</code>: boolean - <code>subtotal</code>: decimal:2 - <code>tax_amount</code>: decimal:2 - <code>total</code>: decimal:2</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>branch()</code>: BelongsTo - <code>items()</code>: HasMany - <code>flexibleItems()</code>: HasMany - <code>payments()</code>: HasMany - <code>billingPeriod()</code>: HasOne - <code>usageItems()</code>: HasMany - <code>serviceItems()</code>: HasMany</p> <p>Scopes: - <code>open()</code> - <code>paid()</code> - <code>overdue()</code></p>"},{"location":"api/models/#invoiceitem","title":"InvoiceItem","text":"<p>Table: <code>invoice_items</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>invoice_id</code> - <code>stripe_invoice_item_id</code> - <code>type</code> - <code>description</code> - <code>quantity</code> - <code>unit</code> - <code>unit_price</code> - <code>amount</code> - <code>tax_rate</code> - <code>tax_rate_id</code> - <code>tax_code</code> - <code>tax_amount</code> - <code>metadata</code> - <code>pricing_model_id</code> - <code>period_start</code> - <code>period_end</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>metadata</code>: array - <code>quantity</code>: decimal:2 - <code>unit_price</code>: decimal:4 - <code>amount</code>: decimal:2 - <code>tax_rate</code>: decimal:2 - <code>tax_amount</code>: decimal:2 - <code>period_start</code>: date - <code>period_end</code>: date</p> <p>Relationships: - <code>invoice()</code>: BelongsTo - <code>pricingModel()</code>: BelongsTo</p> <p>Scopes: - <code>usage()</code> - <code>service()</code></p>"},{"location":"api/models/#invoiceitemflexible","title":"InvoiceItemFlexible","text":"<p>Table: <code>invoice_items_flexible</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>invoice_id</code> - <code>stripe_invoice_item_id</code> - <code>type</code> - <code>description</code> - <code>quantity</code> - <code>unit</code> - <code>unit_price</code> - <code>amount</code> - <code>tax_rate</code> - <code>tax_rate_id</code> - <code>period_start</code> - <code>period_end</code> - <code>metadata</code> - <code>sort_order</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>quantity</code>: decimal:2 - <code>unit_price</code>: decimal:2 - <code>amount</code>: decimal:2 - <code>tax_rate</code>: decimal:2 - <code>period_start</code>: date - <code>period_end</code>: date - <code>metadata</code>: array</p> <p>Relationships: - <code>invoice()</code>: BelongsTo - <code>taxRate()</code>: BelongsTo</p> <p>Scopes: - <code>ordered()</code></p>"},{"location":"api/models/#knowledgeanalytic","title":"KnowledgeAnalytic","text":"<p>Table: <code>knowledge_analytics</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>document_id</code> - <code>user_id</code> - <code>event_type</code> - <code>event_data</code> - <code>session_id</code> - <code>referrer</code> - <code>ip_address</code> - <code>user_agent</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>event_data</code>: array</p> <p>Relationships: - <code>document()</code>: BelongsTo - <code>user()</code>: BelongsTo</p> <p>Scopes: - <code>ofType()</code> - <code>inDateRange()</code> - <code>byUser()</code> - <code>inSession()</code></p>"},{"location":"api/models/#knowledgecategory","title":"KnowledgeCategory","text":"<p>Table: <code>knowledge_categories</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>slug</code> - <code>icon</code> - <code>color</code> - <code>description</code> - <code>parent_id</code> - <code>order</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>order</code>: integer</p> <p>Relationships: - <code>parent()</code>: BelongsTo - <code>children()</code>: HasMany - <code>documents()</code>: HasMany</p> <p>Scopes: - <code>ordered()</code> - <code>root()</code></p>"},{"location":"api/models/#knowledgecodesnippet","title":"KnowledgeCodeSnippet","text":"<p>Table: <code>knowledge_code_snippets</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>document_id</code> - <code>language</code> - <code>title</code> - <code>code</code> - <code>description</code> - <code>is_executable</code> - <code>execution_config</code> - <code>usage_count</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>is_executable</code>: boolean - <code>execution_config</code>: array</p> <p>Relationships: - <code>document()</code>: BelongsTo</p> <p>Scopes: - <code>executable()</code> - <code>ofLanguage()</code> - <code>popular()</code></p>"},{"location":"api/models/#knowledgecomment","title":"KnowledgeComment","text":"<p>Table: <code>knowledge_comments</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>document_id</code> - <code>parent_id</code> - <code>user_id</code> - <code>content</code> - <code>status</code> - <code>position</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>position</code>: array</p> <p>Relationships: - <code>document()</code>: BelongsTo - <code>parent()</code>: BelongsTo - <code>replies()</code>: HasMany - <code>user()</code>: BelongsTo</p> <p>Scopes: - <code>active()</code> - <code>resolved()</code> - <code>root()</code></p>"},{"location":"api/models/#knowledgedocument","title":"KnowledgeDocument","text":"<p>Table: <code>knowledge_documents</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>title</code> - <code>slug</code> - <code>excerpt</code> - <code>content</code> - <code>raw_content</code> - <code>file_path</code> - <code>file_type</code> - <code>category_id</code> - <code>metadata</code> - <code>status</code> - <code>order</code> - <code>view_count</code> - <code>helpful_count</code> - <code>not_helpful_count</code> - <code>last_indexed_at</code> - <code>file_modified_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>metadata</code>: array - <code>last_indexed_at</code>: datetime - <code>file_modified_at</code>: datetime - <code>view_count</code>: integer - <code>helpful_count</code>: integer - <code>not_helpful_count</code>: integer - <code>order</code>: integer - <code>company_id</code>: integer</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>category()</code>: BelongsTo - <code>tags()</code>: BelongsToMany - <code>versions()</code>: HasMany - <code>searchIndexes()</code>: HasMany - <code>codeSnippets()</code>: HasMany - <code>sourceRelationships()</code>: HasMany - <code>targetRelationships()</code>: HasMany - <code>feedback()</code>: HasMany - <code>comments()</code>: HasMany - <code>analytics()</code>: HasMany - <code>creator()</code>: BelongsTo - <code>updater()</code>: BelongsTo</p> <p>Scopes: - <code>published()</code> - <code>ofType()</code></p>"},{"location":"api/models/#knowledgefeedback","title":"KnowledgeFeedback","text":"<p>Table: <code>knowledge_feedback</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>document_id</code> - <code>user_id</code> - <code>session_id</code> - <code>is_helpful</code> - <code>comment</code> - <code>ip_address</code> - <code>user_agent</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>is_helpful</code>: boolean</p> <p>Relationships: - <code>document()</code>: BelongsTo - <code>user()</code>: BelongsTo</p> <p>Scopes: - <code>helpful()</code> - <code>notHelpful()</code> - <code>withComments()</code></p>"},{"location":"api/models/#knowledgenotebook","title":"KnowledgeNotebook","text":"<p>Table: <code>knowledge_notebooks</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>user_id</code> - <code>title</code> - <code>slug</code> - <code>description</code> - <code>is_public</code> - <code>metadata</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>is_public</code>: boolean - <code>metadata</code>: array</p> <p>Relationships: - <code>user()</code>: BelongsTo - <code>entries()</code>: HasMany</p> <p>Scopes: - <code>public()</code> - <code>ownedBy()</code></p>"},{"location":"api/models/#knowledgenotebookentry","title":"KnowledgeNotebookEntry","text":"<p>Table: <code>knowledge_notebook_entries</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>notebook_id</code> - <code>title</code> - <code>content</code> - <code>tags</code> - <code>order</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>tags</code>: array</p> <p>Relationships: - <code>notebook()</code>: BelongsTo</p> <p>Scopes: - <code>withTag()</code> - <code>withAnyTag()</code></p>"},{"location":"api/models/#knowledgerelateddocument","title":"KnowledgeRelatedDocument","text":"<p>Table: <code>knowledge_related_documents</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>document_id</code> - <code>related_document_id</code> - <code>relevance_score</code> - <code>relation_type</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>relevance_score</code>: float</p> <p>Relationships: - <code>document()</code>: BelongsTo - <code>relatedDocument()</code>: BelongsTo</p> <p>Scopes: - <code>ofType()</code> - <code>highRelevance()</code></p>"},{"location":"api/models/#knowledgerelationship","title":"KnowledgeRelationship","text":"<p>Table: <code>knowledge_relationships</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>source_document_id</code> - <code>target_document_id</code> - <code>relationship_type</code> - <code>strength</code> - <code>is_auto_detected</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>strength</code>: float - <code>is_auto_detected</code>: boolean</p> <p>Relationships: - <code>sourceDocument()</code>: BelongsTo - <code>targetDocument()</code>: BelongsTo</p> <p>Scopes: - <code>strong()</code> - <code>manual()</code> - <code>autoDetected()</code></p>"},{"location":"api/models/#knowledgesearchindex","title":"KnowledgeSearchIndex","text":"<p>Table: <code>knowledge_search_index</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>document_id</code> - <code>section_title</code> - <code>content_chunk</code> - <code>embedding</code> - <code>keywords</code> - <code>relevance_score</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>embedding</code>: array - <code>keywords</code>: array - <code>relevance_score</code>: float</p> <p>Relationships: - <code>document()</code>: BelongsTo</p> <p>Scopes: - <code>withKeywords()</code> - <code>search()</code></p>"},{"location":"api/models/#knowledgetag","title":"KnowledgeTag","text":"<p>Table: <code>knowledge_tags</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>slug</code> - <code>color</code></p> <p>Attribute Casts: - <code>id</code>: int</p> <p>Relationships: - <code>documents()</code>: BelongsToMany</p> <p>Scopes: - <code>popular()</code></p>"},{"location":"api/models/#knowledgeversion","title":"KnowledgeVersion","text":"<p>Table: <code>knowledge_versions</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>document_id</code> - <code>version_number</code> - <code>title</code> - <code>content</code> - <code>metadata</code> - <code>diff</code> - <code>commit_message</code> - <code>change_summary</code> - <code>created_by</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>metadata</code>: array - <code>version_number</code>: integer - <code>created_by</code>: integer</p> <p>Relationships: - <code>document()</code>: BelongsTo - <code>creator()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#kunde","title":"Kunde","text":"<p>Table: <code>kunden</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>email</code> - <code>telefonnummer</code> - <code>notizen</code></p> <p>Attribute Casts: - <code>id</code>: int</p> <p>Relationships: - <code>calls()</code>: HasMany - <code>appointments()</code>: HasMany</p> <p>Scopes:</p>"},{"location":"api/models/#legacyuser","title":"LegacyUser","text":"<p>Table: <code>users</code></p> <p>Primary Key: <code>user_id</code></p> <p>Timestamps: No</p> <p>Fillable Attributes: - <code>fname</code> - <code>lname</code> - <code>name</code> - <code>email</code> - <code>password</code> - <code>username</code> - <code>organization</code> - <code>position</code> - <code>phone</code></p> <p>Attribute Casts: - <code>user_id</code>: int</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#mcpmetric","title":"MCPMetric","text":"<p>Table: <code>mcp_metrics</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>service</code> - <code>operation</code> - <code>status</code> - <code>response_time</code> - <code>error_message</code> - <code>metadata</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>metadata</code>: array - <code>response_time</code>: float - <code>created_at</code>: datetime - <code>updated_at</code>: datetime</p> <p>Relationships:</p> <p>Scopes: - <code>forService()</code> - <code>inTimeRange()</code> - <code>successful()</code> - <code>failed()</code></p>"},{"location":"api/models/#masterservice","title":"MasterService","text":"<p>Table: <code>master_services</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>name</code> - <code>description</code> - <code>base_duration</code> - <code>base_price</code> - <code>calcom_event_type_id</code> - <code>retell_service_identifier</code> - <code>active</code></p> <p>Attribute Casts: - <code>base_duration</code>: integer - <code>base_price</code>: decimal:2 - <code>active</code>: boolean</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>branchOverrides()</code>: HasMany - <code>staffAssignments()</code>: HasMany</p> <p>Scopes:</p>"},{"location":"api/models/#mitarbeiter","title":"Mitarbeiter","text":"<p>Table: <code>mitarbeiters</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>kunden_id</code> - <code>vorname</code> - <code>nachname</code> - <code>email</code> - <code>telefonnummer</code> - <code>kalender_verfuegbarkeit</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>kalender_verfuegbarkeit</code>: array</p> <p>Relationships: - <code>kunde()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#note","title":"Note","text":"<p>Table: <code>notes</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>customer_id</code> - <code>user_id</code> - <code>title</code> - <code>content</code> - <code>type</code> - <code>is_pinned</code> - <code>sort_order</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>is_pinned</code>: boolean</p> <p>Relationships: - <code>customer()</code>: BelongsTo - <code>user()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#payment","title":"Payment","text":"<p>Table: <code>payments</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>invoice_id</code> - <code>stripe_payment_id</code> - <code>payment_method</code> - <code>amount</code> - <code>currency</code> - <code>status</code> - <code>payment_date</code> - <code>reference_number</code> - <code>metadata</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>metadata</code>: array - <code>amount</code>: decimal:2 - <code>payment_date</code>: date</p> <p>Relationships: - <code>invoice()</code>: BelongsTo</p> <p>Scopes: - <code>successful()</code> - <code>pending()</code> - <code>failed()</code></p>"},{"location":"api/models/#phonenumber","title":"PhoneNumber","text":"<p>Table: <code>phone_numbers</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>id</code> - <code>company_id</code> - <code>branch_id</code> - <code>number</code> - <code>type</code> - <code>routing_config</code> - <code>agent_id</code> - <code>is_active</code> - <code>description</code> - <code>is_primary</code> - <code>sms_enabled</code> - <code>whatsapp_enabled</code> - <code>retell_phone_id</code> - <code>retell_agent_id</code> - <code>retell_agent_version</code> - <code>capabilities</code> - <code>metadata</code></p> <p>Attribute Casts: - <code>routing_config</code>: array - <code>is_active</code>: boolean - <code>is_primary</code>: boolean - <code>sms_enabled</code>: boolean - <code>whatsapp_enabled</code>: boolean - <code>capabilities</code>: array - <code>metadata</code>: array</p> <p>Relationships:</p> <p>Scopes: - <code>active()</code> - <code>hotlines()</code> - <code>direct()</code></p>"},{"location":"api/models/#premiumservice","title":"PremiumService","text":"<p>Table: <code>premium_services</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>description</code> - <code>price</code> - <code>duration</code> - <code>active</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>price</code>: decimal:2 - <code>active</code>: boolean</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#retellagent","title":"RetellAgent","text":"<p>Table: <code>retell_agents</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>phone_number_id</code> - <code>agent_id</code> - <code>name</code> - <code>settings</code> - <code>active</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>settings</code>: array - <code>active</code>: boolean</p> <p>Relationships: - <code>company()</code>: BelongsTo - <code>phoneNumber()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#retellwebhook","title":"RetellWebhook","text":"<p>Table: <code>retell_webhooks</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>event_type</code> - <code>call_id</code> - <code>payload</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>payload</code>: array</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#securitylog","title":"SecurityLog","text":"<p>Table: <code>security_logs</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>type</code> - <code>ip_address</code> - <code>user_agent</code> - <code>user_id</code> - <code>company_id</code> - <code>url</code> - <code>method</code> - <code>data</code> - <code>created_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>data</code>: array - <code>created_at</code>: datetime</p> <p>Relationships:</p> <p>Scopes: - <code>ofType()</code> - <code>fromIp()</code> - <code>inLastHours()</code></p>"},{"location":"api/models/#service","title":"Service","text":"<p>Table: <code>services</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>tenant_id</code> - <code>name</code> - <code>description</code> - <code>price</code> - <code>default_duration_minutes</code> - <code>active</code> - <code>category</code> - <code>sort_order</code> - <code>min_staff_required</code> - <code>max_bookings_per_day</code> - <code>buffer_time_minutes</code> - <code>is_online_bookable</code> - <code>calcom_event_type_id</code> - <code>duration</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>price</code>: decimal:2 - <code>active</code>: boolean - <code>is_online_bookable</code>: boolean - <code>default_duration_minutes</code>: integer - <code>min_staff_required</code>: integer - <code>max_bookings_per_day</code>: integer - <code>buffer_time_minutes</code>: integer - <code>sort_order</code>: integer - <code>duration</code>: integer - <code>deleted_at</code>: datetime</p> <p>Relationships:</p> <p>Scopes: - <code>forCompany()</code> - <code>currentCompany()</code></p>"},{"location":"api/models/#staff","title":"Staff","text":"<p>Table: <code>staff</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>branch_id</code> - <code>home_branch_id</code> - <code>name</code> - <code>email</code> - <code>phone</code> - <code>external_id</code> - <code>active</code> - <code>is_bookable</code> - <code>calendar_mode</code> - <code>calcom_user_id</code> - <code>calcom_event_type_id</code> - <code>calcom_calendar_link</code> - <code>availability_mode</code> - <code>workable_branches</code> - <code>notes</code> - <code>external_calendar_id</code> - <code>calendar_provider</code></p> <p>Attribute Casts: - <code>active</code>: boolean - <code>is_bookable</code>: boolean - <code>workable_branches</code>: array - <code>deleted_at</code>: datetime</p> <p>Relationships:</p> <p>Scopes: - <code>active()</code> - <code>bookable()</code> - <code>forCompany()</code> - <code>available()</code> - <code>forBranch()</code> - <code>withServices()</code> - <code>withAppointmentsInRange()</code> - <code>withCalendarConfig()</code> - <code>withoutCalendarConfig()</code> - <code>withAppointmentCount()</code> - <code>withRelations()</code> - <code>currentCompany()</code></p>"},{"location":"api/models/#staffeventtype","title":"StaffEventType","text":"<p>Table: <code>staff_event_types</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>staff_id</code> - <code>event_type_id</code> - <code>calcom_user_id</code> - <code>is_primary</code> - <code>custom_duration</code> - <code>custom_price</code> - <code>availability_override</code></p> <p>Attribute Casts: - <code>is_primary</code>: boolean - <code>custom_duration</code>: integer - <code>custom_price</code>: decimal:2 - <code>availability_override</code>: array</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#staffservice","title":"StaffService","text":"<p>Table: <code>staff_service</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Attribute Casts: - <code>id</code>: int</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#staffserviceassignment","title":"StaffServiceAssignment","text":"<p>Table: <code>staff_service_assignments</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>staff_id</code> - <code>master_service_id</code> - <code>branch_id</code> - <code>calcom_user_id</code> - <code>availability_rules</code> - <code>active</code></p> <p>Attribute Casts: - <code>availability_rules</code>: array - <code>active</code>: boolean</p> <p>Relationships: - <code>staff()</code>: BelongsTo - <code>masterService()</code>: BelongsTo - <code>branch()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#taxrate","title":"TaxRate","text":"<p>Table: <code>tax_rates</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>company_id</code> - <code>name</code> - <code>rate</code> - <code>is_default</code> - <code>is_system</code> - <code>description</code> - <code>valid_from</code> - <code>valid_until</code> - <code>stripe_tax_rate_id</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>rate</code>: decimal:2 - <code>is_default</code>: boolean - <code>is_system</code>: boolean - <code>valid_from</code>: date - <code>valid_until</code>: date</p> <p>Relationships: - <code>company()</code>: BelongsTo</p> <p>Scopes: - <code>active()</code> - <code>system()</code> - <code>forCompany()</code></p>"},{"location":"api/models/#telefonnummer","title":"Telefonnummer","text":"<p>Table: <code>telefonnummern</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>kunde_id</code> - <code>nummer</code> - <code>beschreibung</code> - <code>aktiv</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>aktiv</code>: boolean</p> <p>Relationships: - <code>kunde()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#tenant","title":"Tenant","text":"<p>Table: <code>tenants</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>name</code> - <code>slug</code> - <code>api_key</code></p> <p>Relationships: - <code>users()</code>: HasMany</p> <p>Scopes:</p>"},{"location":"api/models/#termin","title":"Termin","text":"<p>Table: <code>termine</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>kunde_id</code> - <code>mitarbeiter_id</code> - <code>call_id</code> - <code>anrufer_name</code> - <code>anrufer_telefon</code> - <code>anrufer_email</code> - <code>datum</code> - <code>uhrzeit</code> - <code>dauer_minuten</code> - <code>dienstleistung</code> - <code>notizen</code> - <code>cal_com_event_id</code> - <code>status</code> - <code>erinnerung_gesendet</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>datum</code>: date - <code>uhrzeit</code>: datetime - <code>erinnerung_gesendet</code>: boolean</p> <p>Relationships: - <code>kunde()</code>: BelongsTo - <code>mitarbeiter()</code>: BelongsTo - <code>call()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#unifiedeventtype","title":"UnifiedEventType","text":"<p>Table: <code>unified_event_types</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>branch_id</code> - <code>company_id</code> - <code>service_id</code> - <code>provider</code> - <code>external_id</code> - <code>name</code> - <code>slug</code> - <code>description</code> - <code>duration_minutes</code> - <code>price</code> - <code>provider_data</code> - <code>conflict_data</code> - <code>is_active</code> - <code>assignment_status</code> - <code>import_status</code> - <code>imported_at</code> - <code>assigned_at</code> - <code>calcom_event_type_id</code> - <code>duration</code> - <code>raw_data</code> - <code>last_imported_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>is_active</code>: boolean - <code>provider_data</code>: array - <code>conflict_data</code>: array - <code>imported_at</code>: datetime - <code>assigned_at</code>: datetime - <code>last_imported_at</code>: datetime - <code>price</code>: decimal:2 - <code>raw_data</code>: array - <code>duration</code>: integer - <code>duration_minutes</code>: integer - <code>calcom_event_type_id</code>: integer</p> <p>Relationships:</p> <p>Scopes: - <code>assigned()</code> - <code>unassigned()</code> - <code>duplicates()</code> - <code>pendingReview()</code> - <code>active()</code></p>"},{"location":"api/models/#user","title":"User","text":"<p>Table: <code>users</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>fname</code> - <code>lname</code> - <code>name</code> - <code>email</code> - <code>password</code> - <code>username</code> - <code>tenant_id</code> - <code>company_id</code> - <code>date_created</code> - <code>date_updated</code> - <code>email_verified_at</code></p> <p>Hidden Attributes: - <code>password</code> - <code>remember_token</code> - <code>salt</code> - <code>legacypassword</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>email_verified_at</code>: datetime</p> <p>Relationships: - <code>tenant()</code>: BelongsTo - <code>roles()</code>: BelongsToMany - <code>permissions()</code>: BelongsToMany</p> <p>Scopes: - <code>role()</code> - <code>withoutRole()</code> - <code>permission()</code> - <code>withoutPermission()</code></p>"},{"location":"api/models/#validationresult","title":"ValidationResult","text":"<p>Table: <code>validation_results</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>entity_type</code> - <code>entity_id</code> - <code>test_type</code> - <code>status</code> - <code>results</code> - <code>tested_at</code> - <code>expires_at</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>results</code>: array - <code>tested_at</code>: datetime - <code>expires_at</code>: datetime</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#webhookevent","title":"WebhookEvent","text":"<p>Table: <code>webhook_events</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>provider</code> - <code>event_type</code> - <code>event_id</code> - <code>idempotency_key</code> - <code>payload</code> - <code>status</code> - <code>processed_at</code> - <code>error_message</code> - <code>retry_count</code> - <code>correlation_id</code></p> <p>Attribute Casts: - <code>id</code>: int - <code>payload</code>: array - <code>processed_at</code>: datetime</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/models/#workinghour","title":"WorkingHour","text":"<p>Table: <code>working_hours</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Attribute Casts: - <code>id</code>: int</p> <p>Relationships: - <code>staff()</code>: BelongsTo</p> <p>Scopes:</p>"},{"location":"api/models/#workinghours","title":"WorkingHours","text":"<p>Table: <code>working_hours</code></p> <p>Primary Key: <code>id</code></p> <p>Timestamps: Yes</p> <p>Fillable Attributes: - <code>staff_id</code> - <code>weekday</code> - <code>start</code> - <code>end</code></p> <p>Attribute Casts: - <code>id</code>: int</p> <p>Relationships:</p> <p>Scopes:</p>"},{"location":"api/reference/","title":"API Reference","text":"<p>Generated on: 2025-06-22 23:28:53</p>"},{"location":"api/reference/#mcp-endpoints","title":"Mcp Endpoints","text":""},{"location":"api/reference/#post-apimcpretellwebhook","title":"<code>POST</code> /api/mcp/retell/webhook","text":"<p>Middleware: api</p>"},{"location":"api/reference/#post-apimcpretellevents","title":"<code>POST</code> /api/mcp/retell/events","text":"<p>Controller: <code>App\\Http\\Controllers\\RetellWebhookMCPController@processWebhook</code></p> <p>Description: <pre><code>Process Retell webhook using MCP architecture\n</code></pre></p> <p>Middleware: api, throttle:webhook, App\\Http\\Middleware\\VerifyRetellSignature</p>"},{"location":"api/reference/#post-apimcpexecute","title":"<code>POST</code> /api/mcp/execute","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@execute</code></p> <p>Description: <pre><code>Execute MCP request through orchestrator\n</code></pre></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#post-apimcpbatch","title":"<code>POST</code> /api/mcp/batch","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@batch</code></p> <p>Description: <pre><code>Execute batch MCP requests\n</code></pre></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#gethead-apimcphealth","title":"<code>GET|HEAD</code> /api/mcp/health","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@orchestratorHealth</code></p> <p>Description: <pre><code>Get orchestrator health status\n</code></pre></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#gethead-apimcpmetrics","title":"<code>GET|HEAD</code> /api/mcp/metrics","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@orchestratorMetrics</code></p> <p>Description: <pre><code>Get orchestrator metrics\n</code></pre></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#gethead-apimcpinfo","title":"<code>GET|HEAD</code> /api/mcp/info","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@info</code></p> <p>Description: <pre><code>Get MCP server information\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpwebhookretell","title":"<code>POST</code> /api/mcp/webhook/retell","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPWebhookController@handleRetell</code></p> <p>Description: <pre><code>Handle Retell webhook through MCP\nThis bypasses signature verification for easier integration\n</code></pre></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#gethead-apimcpwebhooktest","title":"<code>GET|HEAD</code> /api/mcp/webhook/test","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPWebhookController@test</code></p> <p>Description: <pre><code>Test endpoint for MCP webhook\n</code></pre></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#gethead-apimcpdatabaseschema","title":"<code>GET|HEAD</code> /api/mcp/database/schema","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@databaseSchema</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpdatabasequery","title":"<code>POST</code> /api/mcp/database/query","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@databaseQuery</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpdatabasesearch","title":"<code>POST</code> /api/mcp/database/search","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@databaseSearch</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpdatabasefailed-appointments","title":"<code>GET|HEAD</code> /api/mcp/database/failed-appointments","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@databaseFailedAppointments</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpdatabasecall-stats","title":"<code>GET|HEAD</code> /api/mcp/database/call-stats","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@databaseCallStats</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpdatabasetenant-stats","title":"<code>GET|HEAD</code> /api/mcp/database/tenant-stats","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@databaseTenantStats</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpcalcomevent-types","title":"<code>GET|HEAD</code> /api/mcp/calcom/event-types","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@calcomEventTypes</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpcalcomavailability","title":"<code>POST</code> /api/mcp/calcom/availability","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@calcomAvailability</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpcalcombookings","title":"<code>GET|HEAD</code> /api/mcp/calcom/bookings","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@calcomBookings</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpcalcomassignmentscompanyid","title":"<code>GET|HEAD</code> /api/mcp/calcom/assignments/{companyId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@calcomAssignments</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpcalcomsync","title":"<code>POST</code> /api/mcp/calcom/sync","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@calcomSync</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpcalcomtestcompanyid","title":"<code>GET|HEAD</code> /api/mcp/calcom/test/{companyId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@calcomTest</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpretellagentcompanyid","title":"<code>GET|HEAD</code> /api/mcp/retell/agent/{companyId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellAgent</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpretellagentscompanyid","title":"<code>GET|HEAD</code> /api/mcp/retell/agents/{companyId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellAgents</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpretellcall-stats","title":"<code>POST</code> /api/mcp/retell/call-stats","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellCallStats</code></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#post-apimcpretellrecent-calls","title":"<code>POST</code> /api/mcp/retell/recent-calls","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellRecentCalls</code></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#gethead-apimcpretellcallcallid","title":"<code>GET|HEAD</code> /api/mcp/retell/call/{callId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellCallDetails</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpretellsearch-calls","title":"<code>POST</code> /api/mcp/retell/search-calls","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellSearchCalls</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpretellphone-numberscompanyid","title":"<code>GET|HEAD</code> /api/mcp/retell/phone-numbers/{companyId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellPhoneNumbers</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpretelltestcompanyid","title":"<code>GET|HEAD</code> /api/mcp/retell/test/{companyId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellTest</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpqueueoverview","title":"<code>GET|HEAD</code> /api/mcp/queue/overview","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueOverview</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpqueuefailed-jobs","title":"<code>GET|HEAD</code> /api/mcp/queue/failed-jobs","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueFailedJobs</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpqueuerecent-jobs","title":"<code>GET|HEAD</code> /api/mcp/queue/recent-jobs","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueRecentJobs</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpqueuejobjobid","title":"<code>GET|HEAD</code> /api/mcp/queue/job/{jobId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueJobDetails</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpqueuejobjobidretry","title":"<code>POST</code> /api/mcp/queue/job/{jobId}/retry","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueRetryJob</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpqueuemetrics","title":"<code>GET|HEAD</code> /api/mcp/queue/metrics","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueMetrics</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpqueueworkers","title":"<code>GET|HEAD</code> /api/mcp/queue/workers","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueWorkers</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpqueuesearch","title":"<code>POST</code> /api/mcp/queue/search","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@queueSearchJobs</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#delete-apimcpcacheservice","title":"<code>DELETE</code> /api/mcp/cache/{service}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@clearCache</code></p> <p>Middleware: api, throttle:1000,1</p>"},{"location":"api/reference/#gethead-apimcpstream","title":"<code>GET|HEAD</code> /api/mcp/stream","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPStreamController@stream</code></p> <p>Description: <pre><code>Stream real-time MCP updates via Server-Sent Events\n</code></pre></p> <p>Middleware: api, throttle:1000,1, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpretellcall-stats","title":"<code>GET|HEAD</code> /api/mcp/retell/call-stats","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellCallStats</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpretellrecent-calls","title":"<code>GET|HEAD</code> /api/mcp/retell/recent-calls","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@retellRecentCalls</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpsentryissues","title":"<code>GET|HEAD</code> /api/mcp/sentry/issues","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@sentryIssues</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpsentryissuesissueid","title":"<code>GET|HEAD</code> /api/mcp/sentry/issues/{issueId}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@sentryIssueDetails</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpsentryissuesissueidlatest-event","title":"<code>GET|HEAD</code> /api/mcp/sentry/issues/{issueId}/latest-event","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@sentryLatestEvent</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpsentryissuessearch","title":"<code>POST</code> /api/mcp/sentry/issues/search","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@sentrySearchIssues</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimcpsentryperformance","title":"<code>GET|HEAD</code> /api/mcp/sentry/performance","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@sentryPerformance</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimcpservicecacheclear","title":"<code>POST</code> /api/mcp/{service}/cache/clear","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPController@clearCache</code></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#metrics-endpoints","title":"Metrics Endpoints","text":""},{"location":"api/reference/#gethead-apimetrics","title":"<code>GET|HEAD</code> /api/metrics","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@metrics</code></p> <p>Description: <pre><code>Prometheus metrics endpoint\n</code></pre></p> <p>Middleware: api, api</p>"},{"location":"api/reference/#zeitinfo-endpoints","title":"Zeitinfo Endpoints","text":""},{"location":"api/reference/#gethead-apizeitinfo","title":"<code>GET|HEAD</code> /api/zeitinfo","text":"<p>Controller: <code>App\\Http\\Controllers\\ZeitinfoController@jetzt</code></p> <p>Middleware: api</p>"},{"location":"api/reference/#test-endpoints","title":"Test Endpoints","text":""},{"location":"api/reference/#getposthead-apitestwebhook","title":"<code>GET|POST|HEAD</code> /api/test/webhook","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\TestWebhookController@test</code></p> <p>Description: <pre><code>Test endpoint to verify webhook connectivity\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apitestwebhooksimulate-retell","title":"<code>POST</code> /api/test/webhook/simulate-retell","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\TestWebhookController@simulateRetellWebhook</code></p> <p>Description: <pre><code>Simulate a Retell webhook for testing\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apitestwebhook","title":"<code>POST</code> /api/test/webhook","text":"<p>Controller: <code>App\\Http\\Controllers\\TestWebhookController@test</code></p> <p>Description: <pre><code>Test webhook endpoint - FOR DEVELOPMENT ONLY\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apitestmcp-webhook","title":"<code>POST</code> /api/test/mcp-webhook","text":"<p>Middleware: api</p>"},{"location":"api/reference/#gethead-apitestcalcom-v2event-types","title":"<code>GET|HEAD</code> /api/test/calcom-v2/event-types","text":"<p>Middleware: api</p>"},{"location":"api/reference/#gethead-apitestcalcom-v2slots","title":"<code>GET|HEAD</code> /api/test/calcom-v2/slots","text":"<p>Middleware: api</p>"},{"location":"api/reference/#post-apitestcalcom-v2book","title":"<code>POST</code> /api/test/calcom-v2/book","text":"<p>Middleware: api</p>"},{"location":"api/reference/#retell-endpoints","title":"Retell Endpoints","text":""},{"location":"api/reference/#post-apiretellcollect-appointment","title":"<code>POST</code> /api/retell/collect-appointment","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\RetellAppointmentCollectorController@collect</code></p> <p>Description: <pre><code>Collect appointment data from Retell.ai custom function\nThis endpoint is called during the conversation to collect structured data\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apiretellcollect-appointmenttest","title":"<code>GET|HEAD</code> /api/retell/collect-appointment/test","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\RetellAppointmentCollectorController@test</code></p> <p>Description: <pre><code>Test endpoint to verify the collector is working\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apiretellwebhook-debug","title":"<code>POST</code> /api/retell/webhook-debug","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\RetellWebhookDebugController@handle</code></p> <p>Description: <pre><code>Handle Retell webhook WITHOUT signature verification (TEMPORARY FOR DEBUGGING)\nWARNING: This bypasses security! Only use for testing!\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apiretellwebhook-nosig","title":"<code>POST</code> /api/retell/webhook-nosig","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\RetellWebhookDebugController@handle</code></p> <p>Description: <pre><code>Handle Retell webhook WITHOUT signature verification (TEMPORARY FOR DEBUGGING)\nWARNING: This bypasses security! Only use for testing!\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apiretellwebhook","title":"<code>POST</code> /api/retell/webhook","text":"<p>Middleware: api, verify.retell.signature</p>"},{"location":"api/reference/#post-apiretelloptimized-webhook","title":"<code>POST</code> /api/retell/optimized-webhook","text":"<p>Middleware: api, verify.retell.signature</p>"},{"location":"api/reference/#post-apiretelldebug-webhook","title":"<code>POST</code> /api/retell/debug-webhook","text":"<p>Middleware: api, ip.whitelist</p>"},{"location":"api/reference/#post-apiretellenhanced-webhook","title":"<code>POST</code> /api/retell/enhanced-webhook","text":"<p>Middleware: api, verify.retell.signature</p>"},{"location":"api/reference/#post-apiretellmcp-webhook","title":"<code>POST</code> /api/retell/mcp-webhook","text":"<p>Controller: <code>App\\Http\\Controllers\\MCPWebhookController@handleRetellWebhook</code></p> <p>Description: <pre><code>Handle Retell webhook using MCP services\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apiretellmcp-webhookstats","title":"<code>GET|HEAD</code> /api/retell/mcp-webhook/stats","text":"<p>Controller: <code>App\\Http\\Controllers\\MCPWebhookController@getWebhookStats</code></p> <p>Description: <pre><code>Get webhook processing statistics\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apiretellmcp-webhookhealth","title":"<code>GET|HEAD</code> /api/retell/mcp-webhook/health","text":"<p>Controller: <code>App\\Http\\Controllers\\MCPWebhookController@health</code></p> <p>Description: <pre><code>Health check for MCP webhook processor\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apiretellfunction-call","title":"<code>POST</code> /api/retell/function-call","text":"<p>Controller: <code>App\\Http\\Controllers\\RetellRealtimeController@handleFunctionCall</code></p> <p>Description: <pre><code>Handle real-time function calls from Retell.ai during active calls\nThis is called when the agent uses collect_appointment_data with verfuegbarkeit_pruefen=true\n</code></pre></p> <p>Middleware: api, verify.retell.signature</p>"},{"location":"api/reference/#health-endpoints","title":"Health Endpoints","text":""},{"location":"api/reference/#gethead-apihealth","title":"<code>GET|HEAD</code> /api/health","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@health</code></p> <p>Description: <pre><code>Overall system health check\n</code></pre></p> <p>Middleware: api, api</p>"},{"location":"api/reference/#gethead-apihealthcomprehensive","title":"<code>GET|HEAD</code> /api/health/comprehensive","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\HealthController@comprehensive</code></p> <p>Description: <pre><code>Comprehensive health check endpoint\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apihealthserviceservice","title":"<code>GET|HEAD</code> /api/health/service/{service}","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@service</code></p> <p>Description: <pre><code>Service-specific health check\n</code></pre></p> <p>Middleware: api, api</p>"},{"location":"api/reference/#gethead-apihealthcalcom","title":"<code>GET|HEAD</code> /api/health/calcom","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\HealthController@calcomHealth</code></p> <p>Description: <pre><code>Cal.com integration health check\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apihealthdetailed","title":"<code>GET|HEAD</code> /api/health/detailed","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@detailed</code></p> <p>Description: <pre><code>Detailed health check with all services\n</code></pre></p> <p>Middleware: api, api</p>"},{"location":"api/reference/#gethead-apihealthready","title":"<code>GET|HEAD</code> /api/health/ready","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@ready</code></p> <p>Description: <pre><code>Readiness probe for Kubernetes\n</code></pre></p> <p>Middleware: api, api</p>"},{"location":"api/reference/#gethead-apihealthlive","title":"<code>GET|HEAD</code> /api/health/live","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@live</code></p> <p>Description: <pre><code>Liveness probe for Kubernetes\n</code></pre></p> <p>Middleware: api, api</p>"},{"location":"api/reference/#cookie-consent-endpoints","title":"Cookie-consent Endpoints","text":""},{"location":"api/reference/#gethead-apicookie-consentstatus","title":"<code>GET|HEAD</code> /api/cookie-consent/status","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\CookieConsentController@status</code></p> <p>Description: <pre><code>Get current consent status\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apicookie-consentsave","title":"<code>POST</code> /api/cookie-consent/save","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\CookieConsentController@save</code></p> <p>Description: <pre><code>Save cookie consent via AJAX\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apicookie-consentaccept-all","title":"<code>POST</code> /api/cookie-consent/accept-all","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\CookieConsentController@acceptAll</code></p> <p>Description: <pre><code>Accept all cookies\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apicookie-consentreject-all","title":"<code>POST</code> /api/cookie-consent/reject-all","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\CookieConsentController@rejectAll</code></p> <p>Description: <pre><code>Reject all non-essential cookies\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apicookie-consentwithdraw","title":"<code>POST</code> /api/cookie-consent/withdraw","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\CookieConsentController@withdraw</code></p> <p>Description: <pre><code>Withdraw consent\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#metrics-test-endpoints","title":"Metrics-test Endpoints","text":""},{"location":"api/reference/#gethead-apimetrics-test","title":"<code>GET|HEAD</code> /api/metrics-test","text":"<p>Middleware: api</p>"},{"location":"api/reference/#calcom-endpoints","title":"Calcom Endpoints","text":""},{"location":"api/reference/#gethead-apicalcomwebhook","title":"<code>GET|HEAD</code> /api/calcom/webhook","text":"<p>Controller: <code>App\\Http\\Controllers\\CalcomWebhookController@ping</code></p> <p>Description: <pre><code>Handle ping request from Cal.com\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apicalcomwebhook","title":"<code>POST</code> /api/calcom/webhook","text":"<p>Middleware: api, calcom.signature</p>"},{"location":"api/reference/#post-apicalcombook-test","title":"<code>POST</code> /api/calcom/book-test","text":"<p>Middleware: api</p>"},{"location":"api/reference/#stripe-endpoints","title":"Stripe Endpoints","text":""},{"location":"api/reference/#post-apistripewebhook","title":"<code>POST</code> /api/stripe/webhook","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\StripeWebhookController@handle</code></p> <p>Description: <pre><code>Handle Stripe webhook using WebhookProcessor.\n</code></pre></p> <p>Middleware: api, verify.stripe.signature, webhook.replay.protection</p>"},{"location":"api/reference/#billing-endpoints","title":"Billing Endpoints","text":""},{"location":"api/reference/#post-apibillingwebhook","title":"<code>POST</code> /api/billing/webhook","text":"<p>Controller: <code>App\\Http\\Controllers\\BillingController@webhook</code></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apibillingcheckout","title":"<code>GET|HEAD</code> /api/billing/checkout","text":"<p>Controller: <code>App\\Http\\Controllers\\BillingController@checkout</code></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#webhook-endpoints","title":"Webhook Endpoints","text":""},{"location":"api/reference/#post-apiwebhook","title":"<code>POST</code> /api/webhook","text":"<p>Controller: <code>App\\Http\\Controllers\\UnifiedWebhookController@handle</code></p> <p>Description: <pre><code>Handle incoming webhook from any source\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apiwebhookhealth","title":"<code>GET|HEAD</code> /api/webhook/health","text":"<p>Controller: <code>App\\Http\\Controllers\\UnifiedWebhookController@health</code></p> <p>Description: <pre><code>Health check endpoint for webhook processing\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#log-frontend-error-endpoints","title":"Log-frontend-error Endpoints","text":""},{"location":"api/reference/#post-apilog-frontend-error","title":"<code>POST</code> /api/log-frontend-error","text":"<p>Controller: <code>App\\Http\\Controllers\\FrontendErrorController@log</code></p> <p>Middleware: api, web</p>"},{"location":"api/reference/#hybrid-endpoints","title":"Hybrid Endpoints","text":""},{"location":"api/reference/#gethead-apihybridslots","title":"<code>GET|HEAD</code> /api/hybrid/slots","text":"<p>Controller: <code>App\\Http\\Controllers\\HybridBookingController@getAvailableSlots</code></p> <p>Description: <pre><code>Verf\u00fcgbare Slots abrufen (V1)\n</code></pre></p> <p>Middleware: api, input.validation</p>"},{"location":"api/reference/#post-apihybridbook","title":"<code>POST</code> /api/hybrid/book","text":"<p>Controller: <code>App\\Http\\Controllers\\HybridBookingController@bookAppointment</code></p> <p>Description: <pre><code>Termin buchen (V2)\n</code></pre></p> <p>Middleware: api, input.validation</p>"},{"location":"api/reference/#post-apihybridbook-next","title":"<code>POST</code> /api/hybrid/book-next","text":"<p>Controller: <code>App\\Http\\Controllers\\HybridBookingController@bookNextAvailable</code></p> <p>Description: <pre><code>Automatisch n\u00e4chsten verf\u00fcgbaren Slot buchen\n</code></pre></p> <p>Middleware: api, input.validation</p>"},{"location":"api/reference/#session-endpoints","title":"Session Endpoints","text":""},{"location":"api/reference/#gethead-apisessionhealth","title":"<code>GET|HEAD</code> /api/session/health","text":"<p>Controller: <code>App\\Http\\Controllers\\SessionHealthController@check</code></p> <p>Description: <pre><code>Check session health\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apisessionrefresh","title":"<code>POST</code> /api/session/refresh","text":"<p>Controller: <code>App\\Http\\Controllers\\SessionHealthController@refresh</code></p> <p>Description: <pre><code>Force session refresh\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#customers-endpoints","title":"Customers Endpoints","text":""},{"location":"api/reference/#gethead-apicustomers","title":"<code>GET|HEAD</code> /api/customers","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CustomerController@index</code></p> <p>Description: <pre><code>Alle Kunden anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#post-apicustomers","title":"<code>POST</code> /api/customers","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CustomerController@store</code></p> <p>Description: <pre><code>Neuen Kunden anlegen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#gethead-apicustomerscustomer","title":"<code>GET|HEAD</code> /api/customers/{customer}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CustomerController@show</code></p> <p>Description: <pre><code>Bestimmten Kunden anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#putpatch-apicustomerscustomer","title":"<code>PUT|PATCH</code> /api/customers/{customer}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CustomerController@update</code></p> <p>Description: <pre><code>Kundendaten aktualisieren.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#delete-apicustomerscustomer","title":"<code>DELETE</code> /api/customers/{customer}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CustomerController@destroy</code></p> <p>Description: <pre><code>Kunden l\u00f6schen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#appointments-endpoints","title":"Appointments Endpoints","text":""},{"location":"api/reference/#gethead-apiappointments","title":"<code>GET|HEAD</code> /api/appointments","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\AppointmentController@index</code></p> <p>Description: <pre><code>Alle Termine anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#post-apiappointments","title":"<code>POST</code> /api/appointments","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\AppointmentController@store</code></p> <p>Description: <pre><code>Neuen Termin anlegen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#gethead-apiappointmentsappointment","title":"<code>GET|HEAD</code> /api/appointments/{appointment}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\AppointmentController@show</code></p> <p>Description: <pre><code>Bestimmten Termin anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#putpatch-apiappointmentsappointment","title":"<code>PUT|PATCH</code> /api/appointments/{appointment}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\AppointmentController@update</code></p> <p>Description: <pre><code>Termindaten aktualisieren.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#delete-apiappointmentsappointment","title":"<code>DELETE</code> /api/appointments/{appointment}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\AppointmentController@destroy</code></p> <p>Description: <pre><code>Termin l\u00f6schen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#staff-endpoints","title":"Staff Endpoints","text":""},{"location":"api/reference/#gethead-apistaff","title":"<code>GET|HEAD</code> /api/staff","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\StaffController@index</code></p> <p>Description: <pre><code>Alle Mitarbeiter anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#post-apistaff","title":"<code>POST</code> /api/staff","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\StaffController@store</code></p> <p>Description: <pre><code>Neuen Mitarbeiter anlegen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#gethead-apistaffstaff","title":"<code>GET|HEAD</code> /api/staff/{staff}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\StaffController@show</code></p> <p>Description: <pre><code>Bestimmten Mitarbeiter anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#putpatch-apistaffstaff","title":"<code>PUT|PATCH</code> /api/staff/{staff}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\StaffController@update</code></p> <p>Description: <pre><code>Mitarbeiterdaten aktualisieren.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#delete-apistaffstaff","title":"<code>DELETE</code> /api/staff/{staff}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\StaffController@destroy</code></p> <p>Description: <pre><code>Mitarbeiter l\u00f6schen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#services-endpoints","title":"Services Endpoints","text":""},{"location":"api/reference/#gethead-apiservices","title":"<code>GET|HEAD</code> /api/services","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\ServiceController@index</code></p> <p>Description: <pre><code>Alle Dienstleistungen anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#post-apiservices","title":"<code>POST</code> /api/services","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\ServiceController@store</code></p> <p>Description: <pre><code>Neue Dienstleistung anlegen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#gethead-apiservicesservice","title":"<code>GET|HEAD</code> /api/services/{service}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\ServiceController@show</code></p> <p>Description: <pre><code>Bestimmte Dienstleistung anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#putpatch-apiservicesservice","title":"<code>PUT|PATCH</code> /api/services/{service}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\ServiceController@update</code></p> <p>Description: <pre><code>Dienstleistungsdaten aktualisieren.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#delete-apiservicesservice","title":"<code>DELETE</code> /api/services/{service}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\ServiceController@destroy</code></p> <p>Description: <pre><code>Dienstleistung l\u00f6schen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#businesses-endpoints","title":"Businesses Endpoints","text":""},{"location":"api/reference/#gethead-apibusinesses","title":"<code>GET|HEAD</code> /api/businesses","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\BusinessController@index</code></p> <p>Description: <pre><code>Alle Unternehmen anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#post-apibusinesses","title":"<code>POST</code> /api/businesses","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\BusinessController@store</code></p> <p>Description: <pre><code>Neues Unternehmen anlegen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#gethead-apibusinessesbusiness","title":"<code>GET|HEAD</code> /api/businesses/{business}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\BusinessController@show</code></p> <p>Description: <pre><code>Bestimmtes Unternehmen anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#putpatch-apibusinessesbusiness","title":"<code>PUT|PATCH</code> /api/businesses/{business}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\BusinessController@update</code></p> <p>Description: <pre><code>Unternehmensdaten aktualisieren.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#delete-apibusinessesbusiness","title":"<code>DELETE</code> /api/businesses/{business}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\BusinessController@destroy</code></p> <p>Description: <pre><code>Unternehmen l\u00f6schen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#calls-endpoints","title":"Calls Endpoints","text":""},{"location":"api/reference/#gethead-apicalls","title":"<code>GET|HEAD</code> /api/calls","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CallController@index</code></p> <p>Description: <pre><code>Alle Anrufe anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#post-apicalls","title":"<code>POST</code> /api/calls","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CallController@store</code></p> <p>Description: <pre><code>Neuen Anruf anlegen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#gethead-apicallscall","title":"<code>GET|HEAD</code> /api/calls/{call}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CallController@show</code></p> <p>Description: <pre><code>Bestimmten Anruf anzeigen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#putpatch-apicallscall","title":"<code>PUT|PATCH</code> /api/calls/{call}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CallController@update</code></p> <p>Description: <pre><code>Anrufdaten aktualisieren.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#delete-apicallscall","title":"<code>DELETE</code> /api/calls/{call}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\CallController@destroy</code></p> <p>Description: <pre><code>Anruf l\u00f6schen.\n</code></pre></p> <p>Middleware: api, auth:sanctum, input.validation</p>"},{"location":"api/reference/#event-management-endpoints","title":"Event-management Endpoints","text":""},{"location":"api/reference/#gethead-apievent-managementsyncevent-typescompany","title":"<code>GET|HEAD</code> /api/event-management/sync/event-types/{company}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\EventManagementController@syncEventTypes</code></p> <p>Description: <pre><code>Synchronisiere Event-Types f\u00fcr ein Unternehmen\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apievent-managementsyncteamcompany","title":"<code>GET|HEAD</code> /api/event-management/sync/team/{company}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\EventManagementController@syncTeamMembers</code></p> <p>Description: <pre><code>Synchronisiere Team-Mitglieder f\u00fcr ein Unternehmen\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apievent-managementcheck-availability","title":"<code>POST</code> /api/event-management/check-availability","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\EventManagementController@checkAvailability</code></p> <p>Description: <pre><code>Pr\u00fcfe Verf\u00fcgbarkeit\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apievent-managementevent-typescompanybranchbranch","title":"<code>GET|HEAD</code> /api/event-management/event-types/{company}/branch/{branch?}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\EventManagementController@getEventTypes</code></p> <p>Description: <pre><code>Hole Event-Types f\u00fcr ein Unternehmen\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apievent-managementstaff-event-assignments","title":"<code>POST</code> /api/event-management/staff-event-assignments","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\EventManagementController@manageStaffEventAssignments</code></p> <p>Description: <pre><code>Verwalte Mitarbeiter-Event-Type Zuordnungen\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apievent-managementstaff-event-matrixcompany","title":"<code>GET|HEAD</code> /api/event-management/staff-event-matrix/{company}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\EventManagementController@getStaffEventMatrix</code></p> <p>Description: <pre><code>Hole Staff-Event-Type Matrix f\u00fcr ein Unternehmen\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#validation-endpoints","title":"Validation Endpoints","text":""},{"location":"api/reference/#gethead-apivalidationlast-testentityid","title":"<code>GET|HEAD</code> /api/validation/last-test/{entityId}","text":"<p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apivalidationrun-testentityid","title":"<code>POST</code> /api/validation/run-test/{entityId}","text":"<p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#dashboard-endpoints","title":"Dashboard Endpoints","text":""},{"location":"api/reference/#gethead-apidashboardmetricsoperational","title":"<code>GET|HEAD</code> /api/dashboard/metrics/operational","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\DashboardMetricsController@operational</code></p> <p>Description: <pre><code>Get operational metrics\n  \"timestamp\": \"2025-06-18T10:00:00Z\",\n  \"active_calls\": 5,\n  \"queue\": {\n    \"depth\": 3,\n    \"average_wait_time\": 45,\n    \"longest_wait_time\": 120,\n    \"abandoned_rate\": 0.05\n  },\n  \"today\": {\n    \"calls\": {\n      \"total\": 150,\n      \"booked\": 75,\n      \"conversion_rate\": 50.0\n    },\n    \"appointments\": {\n      \"total\": 80,\n      \"completed\": 65,\n      \"completion_rate\": 81.3\n    }\n  },\n  \"system_health\": {\n    \"status\": \"operational\",\n    \"services\": {\n      \"calcom\": {\n        \"status\": \"operational\",\n        \"uptime\": 99.9,\n        \"response_time\": 45\n      }\n    }\n  },\n  \"conversion_funnel\": {\n    \"stages\": [...],\n    \"overall_conversion\": 50.0\n  }\n}\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apidashboardmetricsfinancial","title":"<code>GET|HEAD</code> /api/dashboard/metrics/financial","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\DashboardMetricsController@financial</code></p> <p>Description: <pre><code>Get financial metrics\n  \"period\": \"month\",\n  \"date_range\": {\n    \"start\": \"2025-06-01\",\n    \"end\": \"2025-06-18\"\n  },\n  \"acquisition\": {\n    \"new_customers\": 150,\n    \"marketing_spend\": 5000,\n    \"cac\": 33.33,\n    \"channels\": {\n      \"phone\": 105,\n      \"web\": 30,\n      \"referral\": 15\n    }\n  },\n  \"revenue\": {\n    \"total_revenue\": 45000,\n    \"appointment_count\": 900,\n    \"average_booking_value\": 50,\n    \"mrr\": 45000\n  },\n  \"unit_economics\": {\n    \"ltv\": 500,\n    \"cac\": 33.33,\n    \"ltv_cac_ratio\": 15.0,\n    \"payback_months\": 0.8,\n    \"health_score\": \"excellent\"\n  },\n  \"trends\": [...]\n}\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apidashboardmetricsbranch-comparison","title":"<code>GET|HEAD</code> /api/dashboard/metrics/branch-comparison","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\DashboardMetricsController@branchComparison</code></p> <p>Description: <pre><code>Get branch comparison\n  \"period\": \"week\",\n  \"date_range\": {\n    \"start\": \"2025-06-12\",\n    \"end\": \"2025-06-18\"\n  },\n  \"branches\": [\n    {\n      \"branch\": {\n        \"id\": 1,\n        \"name\": \"Berlin Mitte\",\n        \"location\": \"Berlin\"\n      },\n      \"metrics\": {\n        \"calls\": 234,\n        \"bookings\": 156,\n        \"conversion_rate\": 66.7,\n        \"revenue\": 7020,\n        \"revenue_change\": 12\n      },\n      \"rank\": 1\n    }\n  ]\n}\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apidashboardmetricsanomalies","title":"<code>GET|HEAD</code> /api/dashboard/metrics/anomalies","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\DashboardMetricsController@anomalies</code></p> <p>Description: <pre><code>Get anomalies\n  \"count\": 2,\n  \"alerts\": [\n    {\n      \"type\": \"conversion_rate\",\n      \"severity\": \"warning\",\n      \"message\": \"Conversion rate is 25.5% (normal: 50.0% \u00b1 5.0%)\",\n      \"current_value\": 25.5,\n      \"expected_range\": {\n        \"min\": 40.0,\n        \"max\": 60.0\n      },\n      \"detected_at\": \"2025-06-18T10:00:00Z\"\n    }\n  ],\n  \"last_check\": \"2025-06-18T10:00:00Z\"\n}\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apidashboardmetricsall","title":"<code>GET|HEAD</code> /api/dashboard/metrics/all","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\DashboardMetricsController@all</code></p> <p>Description: <pre><code>Get all dashboard metrics in one call\n  \"operational\": {...},\n  \"financial\": {...},\n  \"branch_comparison\": {...},\n  \"anomalies\": {...}\n}\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#monitoring-endpoints","title":"Monitoring Endpoints","text":""},{"location":"api/reference/#gethead-apimonitoringdashboard","title":"<code>GET|HEAD</code> /api/monitoring/dashboard","text":"<p>Controller: <code>App\\Http\\Controllers\\MonitoringController@dashboard</code></p> <p>Description: <pre><code>Monitoring dashboard data\n</code></pre></p> <p>Middleware: api, auth:sanctum, can:view-monitoring</p>"},{"location":"api/reference/#gethead-apimonitoringalerts","title":"<code>GET|HEAD</code> /api/monitoring/alerts","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@alerts</code></p> <p>Description: <pre><code>Get current alerts\n</code></pre></p> <p>Middleware: api, api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimonitoringserviceservicemetrics","title":"<code>GET|HEAD</code> /api/monitoring/service/{service}/metrics","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\MCPHealthCheckController@serviceMetrics</code></p> <p>Description: <pre><code>Get service metrics\n</code></pre></p> <p>Middleware: api, api, auth:sanctum</p>"},{"location":"api/reference/#mobile-endpoints","title":"Mobile Endpoints","text":""},{"location":"api/reference/#post-apimobiledeviceregister","title":"<code>POST</code> /api/mobile/device/register","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\MobileAppController@registerDevice</code></p> <p>Description: <pre><code>Update push notification token\n    path=\"/api/mobile/device/register\",\n    summary=\"Register device for push notifications\",\n    tags={\"Mobile API\"},\n    security={{\"bearerAuth\":{}}},\n    @OA\\RequestBody(\n        required=true,\n        @OA\\JsonContent(\n            required={\"token\", \"platform\"},\n            @OA\\Property(property=\"token\", type=\"string\"),\n            @OA\\Property(property=\"platform\", type=\"string\", enum={\"ios\", \"android\"}),\n            @OA\\Property(property=\"device_id\", type=\"string\")\n        )\n    ),\n    @OA\\Response(\n        response=200,\n        description=\"Device registered successfully\"\n    )\n)\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apimobiletest","title":"<code>GET|HEAD</code> /api/mobile/test","text":"<p>Middleware: api</p>"},{"location":"api/reference/#gethead-apimobileevent-types","title":"<code>GET|HEAD</code> /api/mobile/event-types","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\MobileAppController@getEventTypes</code></p> <p>Description: <pre><code>Get available event types\n    path=\"/api/mobile/event-types\",\n    summary=\"Get available event types\",\n    tags={\"Mobile API\"},\n    security={{\"bearerAuth\":{}}},\n    @OA\\Parameter(\n        name=\"company_id\",\n        in=\"query\",\n        description=\"Filter by company\",\n        required=false,\n        @OA\\Schema(type=\"integer\")\n    ),\n    @OA\\Parameter(\n        name=\"branch_id\",\n        in=\"query\",\n        description=\"Filter by branch\",\n        required=false,\n        @OA\\Schema(type=\"string\")\n    ),\n    @OA\\Response(\n        response=200,\n        description=\"Successful operation\",\n        @OA\\JsonContent(\n            type=\"object\",\n            @OA\\Property(property=\"data\", type=\"array\", @OA\\Items(ref=\"#/components/schemas/EventType\"))\n        )\n    )\n)\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimobileavailabilitycheck","title":"<code>POST</code> /api/mobile/availability/check","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\MobileAppController@checkAvailability</code></p> <p>Description: <pre><code>Check availability for an event type\n    path=\"/api/mobile/availability/check\",\n    summary=\"Check availability for event type\",\n    tags={\"Mobile API\"},\n    security={{\"bearerAuth\":{}}},\n    @OA\\RequestBody(\n        required=true,\n        @OA\\JsonContent(\n            required={\"event_type_id\", \"date\"},\n            @OA\\Property(property=\"event_type_id\", type=\"integer\"),\n            @OA\\Property(property=\"date\", type=\"string\", format=\"date\"),\n            @OA\\Property(property=\"staff_id\", type=\"string\", description=\"Optional specific staff member\")\n        )\n    ),\n    @OA\\Response(\n        response=200,\n        description=\"Availability information\",\n        @OA\\JsonContent(\n            type=\"object\",\n            @OA\\Property(property=\"available\", type=\"boolean\"),\n            @OA\\Property(property=\"slots\", type=\"array\", @OA\\Items(\n                @OA\\Property(property=\"start\", type=\"string\"),\n                @OA\\Property(property=\"end\", type=\"string\"),\n                @OA\\Property(property=\"staff_id\", type=\"string\"),\n                @OA\\Property(property=\"staff_name\", type=\"string\")\n            ))\n        )\n    )\n)\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#post-apimobilebookings","title":"<code>POST</code> /api/mobile/bookings","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\MobileAppController@createBooking</code></p> <p>Description: <pre><code>Create a booking\n    path=\"/api/mobile/bookings\",\n    summary=\"Create a new booking\",\n    tags={\"Mobile API\"},\n    security={{\"bearerAuth\":{}}},\n    @OA\\RequestBody(\n        required=true,\n        @OA\\JsonContent(\n            required={\"event_type_id\", \"staff_id\", \"customer_data\", \"start_time\"},\n            @OA\\Property(property=\"event_type_id\", type=\"integer\"),\n            @OA\\Property(property=\"staff_id\", type=\"string\"),\n            @OA\\Property(property=\"start_time\", type=\"string\", format=\"date-time\"),\n            @OA\\Property(property=\"customer_data\", type=\"object\",\n                @OA\\Property(property=\"name\", type=\"string\"),\n                @OA\\Property(property=\"email\", type=\"string\"),\n                @OA\\Property(property=\"phone\", type=\"string\")\n            ),\n            @OA\\Property(property=\"notes\", type=\"string\"),\n            @OA\\Property(property=\"send_notifications\", type=\"boolean\", default=true)\n        )\n    ),\n    @OA\\Response(\n        response=201,\n        description=\"Booking created successfully\",\n        @OA\\JsonContent(\n            type=\"object\",\n            @OA\\Property(property=\"success\", type=\"boolean\"),\n            @OA\\Property(property=\"booking\", ref=\"#/components/schemas/Appointment\")\n        )\n    )\n)\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimobileappointments","title":"<code>GET|HEAD</code> /api/mobile/appointments","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\MobileAppController@getAppointments</code></p> <p>Description: <pre><code>Get customer appointments\n    path=\"/api/mobile/appointments\",\n    summary=\"Get customer appointments\",\n    tags={\"Mobile API\"},\n    security={{\"bearerAuth\":{}}},\n    @OA\\Parameter(\n        name=\"status\",\n        in=\"query\",\n        description=\"Filter by status\",\n        required=false,\n        @OA\\Schema(type=\"string\", enum={\"upcoming\", \"past\", \"cancelled\"})\n    ),\n    @OA\\Response(\n        response=200,\n        description=\"List of appointments\"\n    )\n)\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#delete-apimobileappointmentsid","title":"<code>DELETE</code> /api/mobile/appointments/{id}","text":"<p>Controller: <code>App\\Http\\Controllers\\API\\MobileAppController@cancelAppointment</code></p> <p>Description: <pre><code>Cancel appointment\n    path=\"/api/mobile/appointments/{id}\",\n    summary=\"Cancel an appointment\",\n    tags={\"Mobile API\"},\n    security={{\"bearerAuth\":{}}},\n    @OA\\Parameter(\n        name=\"id\",\n        in=\"path\",\n        description=\"Appointment ID\",\n        required=true,\n        @OA\\Schema(type=\"integer\")\n    ),\n    @OA\\RequestBody(\n        @OA\\JsonContent(\n            @OA\\Property(property=\"reason\", type=\"string\")\n        )\n    ),\n    @OA\\Response(\n        response=200,\n        description=\"Appointment cancelled successfully\"\n    )\n)\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#gethead-apimobiledashboard","title":"<code>GET|HEAD</code> /api/mobile/dashboard","text":"<p>Controller: <code>App\\Http\\Controllers\\Api\\DashboardMetricsController@all</code></p> <p>Description: <pre><code>Get all dashboard metrics in one call\n  \"operational\": {...},\n  \"financial\": {...},\n  \"branch_comparison\": {...},\n  \"anomalies\": {...}\n}\n</code></pre></p> <p>Middleware: api, auth:sanctum</p>"},{"location":"api/reference/#webhooks-endpoints","title":"Webhooks Endpoints","text":""},{"location":"api/reference/#post-apiwebhooks","title":"<code>POST</code> /api/webhooks","text":"<p>Controller: <code>App\\Http\\Controllers\\UnifiedWebhookController@handle</code></p> <p>Description: <pre><code>Handle incoming webhook from any source\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apiwebhookscalcom","title":"<code>POST</code> /api/webhooks/calcom","text":"<p>Controller: <code>App\\Http\\Controllers\\UnifiedWebhookController@handle</code></p> <p>Description: <pre><code>Handle incoming webhook from any source\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apiwebhooksretell","title":"<code>POST</code> /api/webhooks/retell","text":"<p>Controller: <code>App\\Http\\Controllers\\UnifiedWebhookController@handle</code></p> <p>Description: <pre><code>Handle incoming webhook from any source\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#post-apiwebhooksstripe","title":"<code>POST</code> /api/webhooks/stripe","text":"<p>Controller: <code>App\\Http\\Controllers\\UnifiedWebhookController@handle</code></p> <p>Description: <pre><code>Handle incoming webhook from any source\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/reference/#gethead-apiwebhookshealth","title":"<code>GET|HEAD</code> /api/webhooks/health","text":"<p>Controller: <code>App\\Http\\Controllers\\UnifiedWebhookController@health</code></p> <p>Description: <pre><code>Health check endpoint for webhook processing\n</code></pre></p> <p>Middleware: api</p>"},{"location":"api/routes/","title":"Route Documentation","text":"<p>Generated on: 2025-06-22 23:28:53</p>"},{"location":"api/routes/#route-statistics","title":"Route Statistics","text":"<ul> <li>Total Routes: 404</li> <li>Web Routes: 250</li> <li> <p>API Routes: 154</p> </li> <li> <p>Protected Routes: 100</p> </li> <li>Public Routes: 304</li> </ul>"},{"location":"architecture/database-schema/","title":"Database Schema","text":"<p>Generated on: 2025-06-22 23:28:53</p>"},{"location":"architecture/database-schema/#database-statistics","title":"Database Statistics","text":"<ul> <li>Total Tables: 87</li> <li>Database Engine: MySQL</li> <li>Collation: utf8mb4_unicode_ci</li> </ul>"},{"location":"architecture/database-schema/#entity-relationship-diagram","title":"Entity Relationship Diagram","text":"<pre><code>erDiagram\n    activity_log {\n        bigint id\n        varchar log_name\n        text description\n        varchar subject_type\n        bigint subject_id\n        varchar causer_type\n        bigint causer_id\n        longtext properties\n        timestamp created_at\n        timestamp updated_at\n        varchar event\n        char batch_uuid\n    }\n    agents {\n        bigint id\n        bigint customer_id\n        varchar name\n        timestamp created_at\n        timestamp updated_at\n    }\n    agents ||--o{ customers : has\n    api_call_logs {\n        bigint id\n        bigint company_id\n        varchar service\n        varchar endpoint\n        varchar method\n        longtext request_data\n        longtext response_data\n        int response_status\n        int duration_ms\n        text error_message\n        varchar correlation_id\n        timestamp created_at\n        timestamp updated_at\n    }\n    api_call_logs ||--o{ companies : has\n    api_credentials {\n        bigint id\n        varchar credentialable_type\n        bigint credentialable_id\n        varchar service\n        varchar key_type\n        text value\n        tinyint is_inherited\n        bigint inherited_from_id\n        varchar inherited_from_type\n        timestamp created_at\n        timestamp updated_at\n    }\n    api_health_logs {\n        bigint id\n        varchar service\n        bigint company_id\n        varchar status\n        text message\n        double response_time\n        timestamp created_at\n        timestamp updated_at\n    }\n    api_health_logs ||--o{ companies : has\n    appointment_locks {\n        bigint id\n        char staff_id\n        timestamp starts_at\n        timestamp ends_at\n        varchar lock_token\n        timestamp lock_expires_at\n        timestamp created_at\n    }\n    appointment_locks ||--o{ staff : has\n    appointments {\n        bigint id\n        bigint company_id\n        bigint customer_id\n        char branch_id\n        varchar external_id\n        timestamp starts_at\n        timestamp ends_at\n        longtext payload\n        varchar status\n        timestamp created_at\n        timestamp updated_at\n        bigint call_id\n        char staff_id\n        bigint service_id\n        datetime start_time\n        datetime end_time\n        varchar calcom_v2_booking_id\n        bigint calcom_event_type_id\n        text notes\n        int price\n        bigint calcom_booking_id\n        timestamp reminder_sent_at\n        varchar reminder_type\n        int version\n        timestamp lock_expires_at\n        varchar lock_token\n    }\n    appointments ||--o{ companies : has\n    appointments ||--o{ customers : has\n    appointments ||--o{ branches : has\n    appointments ||--o{ calls : has\n    appointments ||--o{ staff : has\n    appointments ||--o{ services : has\n    appointments ||--o{ calcom_event_types : has\n    appointments ||--o{ calcom_bookings : has\n    availability_cache {\n        bigint id\n        char staff_id\n        bigint event_type_id\n        date date\n        longtext slots\n        varchar cache_key\n        timestamp cached_at\n        timestamp expires_at\n        tinyint is_valid\n        timestamp created_at\n        timestamp updated_at\n    }\n    availability_cache ||--o{ staff : has\n    billing_periods {\n        bigint id\n        bigint company_id\n        bigint branch_id\n        date period_start\n        date period_end\n        int total_minutes\n        int included_minutes\n        int overage_minutes\n        decimal total_cost\n        decimal total_revenue\n        decimal margin\n        decimal margin_percentage\n        tinyint is_invoiced\n        timestamp invoiced_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    billing_periods ||--o{ companies : has\n    billing_periods ||--o{ branches : has\n    branch_event_types {\n        bigint id\n        char branch_id\n        bigint event_type_id\n        tinyint is_primary\n        timestamp created_at\n        timestamp updated_at\n    }\n    branch_event_types ||--o{ branches : has\n    branch_pricing_overrides {\n        bigint id\n        bigint branch_id\n        bigint company_pricing_id\n        decimal price_per_minute\n        int included_minutes\n        tinyint is_active\n        date valid_from\n        date valid_until\n        text notes\n        timestamp created_at\n        timestamp updated_at\n    }\n    branch_pricing_overrides ||--o{ branches : has\n    branch_pricing_overrides ||--o{ company_pricings : has\n    branch_service {\n        char branch_id\n        bigint service_id\n        decimal price\n        int duration\n        tinyint active\n        timestamp created_at\n        timestamp updated_at\n    }\n    branch_service ||--o{ branches : has\n    branch_service ||--o{ services : has\n    branch_service_overrides {\n        char id\n        char branch_id\n        char master_service_id\n        int custom_duration\n        decimal custom_price\n        varchar custom_calcom_event_type_id\n        tinyint active\n        timestamp created_at\n        timestamp updated_at\n    }\n    branch_service_overrides ||--o{ branches : has\n    branch_service_overrides ||--o{ master_services : has\n    branch_staff {\n        char branch_id\n        char staff_id\n        timestamp created_at\n        timestamp updated_at\n    }\n    branch_staff ||--o{ branches : has\n    branch_staff ||--o{ staff : has\n    branches {\n        char id\n        bigint customer_id\n        bigint company_id\n        varchar name\n        varchar slug\n        varchar city\n        varchar phone_number\n        tinyint active\n        timestamp created_at\n        timestamp updated_at\n        timestamp deleted_at\n        tinyint invoice_recipient\n        varchar invoice_name\n        varchar invoice_email\n        varchar invoice_address\n        varchar invoice_phone\n        varchar calcom_event_type_id\n        varchar calcom_api_key\n        varchar retell_agent_id\n        longtext integration_status\n        enum calendar_mode\n        timestamp integrations_tested_at\n        varchar calcom_user_id\n        longtext retell_agent_cache\n        timestamp retell_last_sync\n        longtext configuration_status\n        longtext parent_settings\n        varchar address\n        varchar postal_code\n        varchar phone\n        varchar email\n        tinyint is_active\n        varchar website\n        longtext business_hours\n        longtext services_override\n        varchar country\n        char uuid\n        longtext settings\n    }\n    branches ||--o{ customers : has\n    branches ||--o{ companies : has\n    branches ||--o{ calcom_event_types : has\n    branches ||--o{ retell_agents : has\n    business_hours_templates {\n        bigint id\n        varchar name\n        varchar description\n        longtext hours\n        tinyint is_default\n        timestamp created_at\n        timestamp updated_at\n    }\n    cache {\n        varchar key\n        mediumtext value\n        int expiration\n    }\n    cache_locks {\n        varchar key\n        varchar owner\n        int expiration\n    }\n    calcom_bookings {\n        bigint id\n        bigint event_type_id\n        char branch_id\n        varchar external_id\n        timestamp starts_at\n        timestamp ends_at\n        timestamp created_at\n        timestamp updated_at\n        enum api_version\n    }\n    calcom_bookings ||--o{ branches : has\n    calcom_event_types {\n        bigint id\n        int company_id\n        char branch_id\n        char staff_id\n        varchar name\n        timestamp created_at\n        timestamp updated_at\n        bigint calcom_numeric_event_type_id\n        int team_id\n        tinyint is_team_event\n        int duration_minutes\n        text description\n        decimal price\n        tinyint is_active\n    }\n    calcom_event_types ||--o{ companies : has\n    calcom_event_types ||--o{ branches : has\n    calcom_event_types ||--o{ staff : has\n    calendar_event_types {\n        bigint id\n        timestamp created_at\n        timestamp updated_at\n    }\n    calendar_mappings {\n        bigint id\n        char branch_id\n        char staff_id\n        enum calendar_type\n        longtext calendar_details\n        timestamp created_at\n        timestamp updated_at\n    }\n    calendar_mappings ||--o{ branches : has\n    calendar_mappings ||--o{ staff : has\n    calendars {\n        char id\n        char staff_id\n        enum provider\n        text api_key\n        varchar event_type_id\n        varchar external_user_id\n        timestamp validated_at\n        timestamp created_at\n        timestamp updated_at\n        timestamp deleted_at\n    }\n    calendars ||--o{ staff : has\n    calls {\n        bigint id\n        varchar external_id\n        text transcript\n        longtext raw\n        timestamp created_at\n        timestamp updated_at\n        bigint kunde_id\n        bigint customer_id\n        varchar retell_call_id\n        varchar status\n        varchar from_number\n        varchar to_number\n        int duration_sec\n        char tmp_call_id\n        char branch_id\n        bigint phone_number_id\n        varchar agent_id\n        int cost_cents\n        varchar call_status\n        tinyint call_successful\n        longtext analysis\n        char conversation_id\n        varchar call_id\n        longtext details\n        varchar audio_url\n        varchar disconnection_reason\n        text summary\n        varchar sentiment\n        varchar public_log_url\n        varchar name\n        varchar email\n        date datum_termin\n        time uhrzeit_termin\n        varchar dienstleistung\n        varchar telefonnummer\n        text grund\n        varchar calcom_booking_id\n        varchar phone_number\n        timestamp call_time\n        int call_duration\n        varchar disconnect_reason\n        varchar type\n        decimal cost\n        tinyint successful\n        varchar user_sentiment\n        longtext raw_data\n        varchar behandlung_dauer\n        varchar rezeptstatus\n        varchar versicherungsstatus\n        varchar haustiere_name\n        text notiz\n        bigint company_id\n        bigint appointment_id\n        longtext tags\n        timestamp start_timestamp\n        timestamp end_timestamp\n        varchar call_type\n        varchar direction\n        longtext transcript_object\n        longtext transcript_with_tools\n        longtext latency_metrics\n        longtext cost_breakdown\n        longtext llm_usage\n        longtext retell_dynamic_variables\n        tinyint opt_out_sensitive_data\n        longtext metadata\n        decimal duration_minutes\n        longtext webhook_data\n        int agent_version\n        decimal retell_cost\n        longtext custom_sip_headers\n        longtext transcription\n        varchar recording_url\n        timestamp started_at\n        timestamp ended_at\n        timestamp synced_at\n        tinyint appointment_requested\n        varchar extracted_date\n        varchar extracted_time\n        varchar extracted_name\n        int version\n    }\n    calls ||--o{ customers : has\n    calls ||--o{ branches : has\n    calls ||--o{ phone_numbers : has\n    calls ||--o{ agents : has\n    calls ||--o{ calls : has\n    calls ||--o{ calcom_bookings : has\n    calls ||--o{ companies : has\n    calls ||--o{ appointments : has\n    circuit_breaker_metrics {\n        bigint id\n        varchar service\n        varchar status\n        varchar state\n        int duration_ms\n        timestamp created_at\n    }\n    companies {\n        bigint id\n        varchar name\n        varchar slug\n        text address\n        varchar contact_person\n        varchar phone\n        varchar email\n        varchar website\n        text description\n        longtext settings\n        varchar industry\n        varchar event_type_id\n        longtext opening_hours\n        text calcom_api_key\n        varchar calcom_team_slug\n        varchar calcom_user_id\n        text retell_api_key\n        tinyint is_active\n        tinyint active\n        timestamp created_at\n        timestamp updated_at\n        varchar calcom_event_type_id\n        longtext api_test_errors\n        tinyint send_booking_confirmations\n        timestamp deleted_at\n        varchar retell_webhook_url\n        varchar retell_agent_id\n        varchar retell_voice\n        tinyint retell_enabled\n        enum calcom_calendar_mode\n        enum billing_status\n        enum billing_type\n        decimal credit_balance\n        decimal low_credit_threshold\n        longtext metadata\n    }\n    companies ||--o{ calcom_event_types : has\n    companies ||--o{ retell_agents : has\n    company_pricing {\n        bigint id\n        bigint company_id\n        decimal price_per_minute\n        decimal setup_fee\n        decimal monthly_base_fee\n        int included_minutes\n        decimal overage_price_per_minute\n        tinyint is_active\n        date valid_from\n        date valid_until\n        text notes\n        timestamp created_at\n        timestamp updated_at\n    }\n    company_pricing ||--o{ companies : has\n    company_pricings {\n        bigint id\n        bigint company_id\n        varchar name\n        decimal base_price\n        decimal price_per_minute\n        decimal price_per_appointment\n        int free_minutes\n        int free_appointments\n        tinyint is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n    company_pricings ||--o{ companies : has\n    conversion_targets {\n        bigint id\n        bigint company_id\n        bigint branch_id\n        decimal target_conversion_rate\n        decimal min_conversion_rate\n        tinyint alert_on_low_conversion\n        varchar alert_email\n        timestamp created_at\n        timestamp updated_at\n    }\n    conversion_targets ||--o{ companies : has\n    conversion_targets ||--o{ branches : has\n    cookie_consents {\n        bigint id\n        varchar visitor_id\n        varchar ip_address\n        longtext consents\n        timestamp created_at\n        timestamp updated_at\n    }\n    customers {\n        bigint id\n        bigint company_id\n        varchar first_name\n        varchar last_name\n        varchar name\n        varchar email\n        varchar phone\n        text notes\n        timestamp created_at\n        timestamp updated_at\n        varchar mobile_app_user_id\n        varchar mobile_app_device_token\n        longtext mobile_app_preferences\n    }\n    customers ||--o{ companies : has\n    dashboard_configurations {\n        bigint id\n        bigint user_id\n        longtext widget_settings\n        longtext layout_settings\n        timestamp created_at\n        timestamp updated_at\n    }\n    dashboard_configurations ||--o{ users : has\n    dummy_companies {\n        bigint id\n        varchar test\n        timestamp created_at\n        timestamp updated_at\n    }\n    event_type_import_logs {\n        bigint id\n        bigint company_id\n        char branch_id\n        bigint user_id\n        varchar import_type\n        int total_found\n        int total_imported\n        int total_skipped\n        int total_failed\n        int total_errors\n        enum status\n        longtext details\n        text error_message\n        longtext error_details\n        timestamp started_at\n        timestamp completed_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    event_type_import_logs ||--o{ companies : has\n    event_type_import_logs ||--o{ branches : has\n    event_type_import_logs ||--o{ users : has\n    event_type_mappings {\n        bigint id\n        timestamp created_at\n        timestamp updated_at\n    }\n    failed_jobs {\n        bigint id\n        varchar uuid\n        text connection\n        text queue\n        longtext payload\n        longtext exception\n        timestamp failed_at\n    }\n    gdpr_requests {\n        bigint id\n        bigint customer_id\n        varchar type\n        varchar status\n        timestamp processed_at\n        timestamp expires_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    gdpr_requests ||--o{ customers : has\n    integrations {\n        bigint id\n        bigint customer_id\n        varchar system\n        timestamp created_at\n        timestamp updated_at\n        longtext credentials\n        tinyint active\n    }\n    integrations ||--o{ customers : has\n    invoice_items {\n        bigint id\n        bigint invoice_id\n        text description\n        decimal quantity\n        decimal unit_price\n        decimal total_price\n        decimal tax_rate\n        timestamp created_at\n        timestamp updated_at\n    }\n    invoice_items ||--o{ invoices : has\n    invoice_items_flexible {\n        bigint id\n        bigint invoice_id\n        enum type\n        varchar description\n        decimal quantity\n        varchar unit\n        decimal unit_price\n        decimal amount\n        decimal tax_rate\n        bigint tax_rate_id\n        date period_start\n        date period_end\n        longtext metadata\n        int sort_order\n        timestamp created_at\n        timestamp updated_at\n    }\n    invoice_items_flexible ||--o{ invoices : has\n    invoice_items_flexible ||--o{ tax_rates : has\n    invoices {\n        bigint id\n        bigint company_id\n        bigint branch_id\n        varchar stripe_invoice_id\n        varchar invoice_number\n        enum status\n        decimal subtotal\n        decimal tax_amount\n        decimal total\n        varchar currency\n        date invoice_date\n        date due_date\n        date paid_date\n        varchar payment_method\n        int payment_terms\n        varchar stripe_payment_intent_id\n        varchar pdf_url\n        longtext metadata\n        text notes\n        varchar billing_reason\n        tinyint auto_advance\n        longtext tax_configuration\n        tinyint is_reverse_charge\n        varchar customer_vat_id\n        enum invoice_type\n        bigint original_invoice_id\n        timestamp finalized_at\n        text tax_note\n        tinyint is_tax_exempt\n        date period_start\n        date period_end\n        timestamp created_at\n        timestamp updated_at\n    }\n    invoices ||--o{ companies : has\n    invoices ||--o{ branches : has\n    jobs {\n        bigint id\n        varchar queue\n        longtext payload\n        tinyint attempts\n        int reserved_at\n        int available_at\n        int created_at\n    }\n    knowledge_categories {\n        bigint id\n        varchar name\n        varchar slug\n        text description\n        bigint parent_id\n        int order\n        tinyint is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n    knowledge_documents {\n        bigint id\n        bigint category_id\n        varchar title\n        varchar slug\n        longtext content\n        text excerpt\n        varchar status\n        bigint author_id\n        int views\n        tinyint is_featured\n        int order\n        timestamp published_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    kunden {\n        bigint id\n        varchar name\n        timestamp created_at\n        timestamp updated_at\n    }\n    logs {\n        bigint id\n        varchar level\n        text message\n        varchar channel\n        longtext context\n        varchar user_id\n        varchar ip_address\n        varchar request_id\n        timestamp created_at\n        timestamp updated_at\n    }\n    logs ||--o{ users : has\n    master_services {\n        char id\n        bigint company_id\n        varchar name\n        text description\n        int base_duration\n        decimal base_price\n        varchar calcom_event_type_id\n        varchar retell_service_identifier\n        tinyint active\n        timestamp created_at\n        timestamp updated_at\n    }\n    master_services ||--o{ companies : has\n    master_services ||--o{ calcom_event_types : has\n    mcp_metrics {\n        bigint id\n        varchar service\n        varchar operation\n        tinyint success\n        decimal duration_ms\n        bigint tenant_id\n        longtext metadata\n        timestamp created_at\n        timestamp updated_at\n    }\n    mcp_metrics ||--o{ tenants : has\n    migrations {\n        int id\n        varchar migration\n        int batch\n    }\n    model_has_permissions {\n        bigint permission_id\n        varchar model_type\n        bigint model_id\n    }\n    model_has_permissions ||--o{ permissions : has\n    model_has_roles {\n        bigint role_id\n        varchar model_type\n        bigint model_id\n    }\n    model_has_roles ||--o{ roles : has\n    notification_log {\n        bigint id\n        bigint appointment_id\n        bigint customer_id\n        varchar type\n        longtext channels\n        enum status\n        text error\n        longtext metadata\n        timestamp sent_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    notification_log ||--o{ appointments : has\n    notification_log ||--o{ customers : has\n    oauth_access_tokens {\n        varchar id\n        bigint user_id\n        bigint client_id\n        varchar name\n        text scopes\n        tinyint revoked\n        timestamp created_at\n        timestamp updated_at\n        datetime expires_at\n    }\n    oauth_access_tokens ||--o{ users : has\n    oauth_auth_codes {\n        varchar id\n        bigint user_id\n        bigint client_id\n        text scopes\n        tinyint revoked\n        datetime expires_at\n    }\n    oauth_auth_codes ||--o{ users : has\n    oauth_clients {\n        bigint id\n        bigint user_id\n        varchar name\n        varchar secret\n        varchar provider\n        text redirect\n        tinyint personal_access_client\n        tinyint password_client\n        tinyint revoked\n        timestamp created_at\n        timestamp updated_at\n    }\n    oauth_clients ||--o{ users : has\n    oauth_personal_access_clients {\n        bigint id\n        bigint client_id\n        timestamp created_at\n        timestamp updated_at\n    }\n    oauth_refresh_tokens {\n        varchar id\n        varchar access_token_id\n        tinyint revoked\n        datetime expires_at\n    }\n    onboarding_progress {\n        bigint id\n        bigint company_id\n        bigint user_id\n        varchar current_step\n        longtext completed_steps\n        longtext step_data\n        int progress_percentage\n        tinyint is_completed\n        timestamp created_at\n        timestamp updated_at\n    }\n    onboarding_progress ||--o{ companies : has\n    onboarding_progress ||--o{ users : has\n    password_reset_tokens {\n        varchar email\n        varchar token\n        timestamp created_at\n    }\n    permissions {\n        bigint id\n        varchar name\n        varchar guard_name\n        timestamp created_at\n        timestamp updated_at\n    }\n    personal_access_tokens {\n        bigint id\n        varchar tokenable_type\n        bigint tokenable_id\n        varchar name\n        varchar token\n        text abilities\n        timestamp last_used_at\n        timestamp expires_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    phone_numbers {\n        char id\n        bigint company_id\n        char branch_id\n        varchar number\n        varchar retell_phone_id\n        varchar retell_agent_id\n        varchar retell_agent_version\n        tinyint is_active\n        tinyint is_primary\n        varchar type\n        longtext capabilities\n        longtext metadata\n        timestamp created_at\n        timestamp updated_at\n    }\n    phone_numbers ||--o{ companies : has\n    phone_numbers ||--o{ branches : has\n    phone_numbers ||--o{ retell_agents : has\n    retell_agents {\n        bigint id\n        varchar name\n        timestamp created_at\n        timestamp updated_at\n        tinyint active\n    }\n    retell_webhooks {\n        bigint id\n        varchar event_type\n        varchar call_id\n        longtext payload\n        timestamp created_at\n        timestamp updated_at\n    }\n    retell_webhooks ||--o{ calls : has\n    role_has_permissions {\n        bigint permission_id\n        bigint role_id\n    }\n    role_has_permissions ||--o{ permissions : has\n    role_has_permissions ||--o{ roles : has\n    roles {\n        bigint id\n        varchar name\n        varchar guard_name\n        timestamp created_at\n        timestamp updated_at\n    }\n    security_logs {\n        bigint id\n        varchar type\n        varchar ip_address\n        text user_agent\n        bigint user_id\n        bigint company_id\n        varchar url\n        varchar method\n        longtext data\n        timestamp timestamp\n        timestamp created_at\n        timestamp updated_at\n    }\n    security_logs ||--o{ users : has\n    security_logs ||--o{ companies : has\n    service_event_type_mappings {\n        bigint id\n        bigint service_id\n        bigint calcom_event_type_id\n        bigint company_id\n        char branch_id\n        longtext keywords\n        int priority\n        tinyint is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n    service_event_type_mappings ||--o{ services : has\n    service_event_type_mappings ||--o{ calcom_event_types : has\n    service_event_type_mappings ||--o{ companies : has\n    service_event_type_mappings ||--o{ branches : has\n    service_staff {\n        bigint id\n        bigint service_id\n        char staff_id\n        int duration_minutes\n        decimal price\n        tinyint active\n        timestamp created_at\n        timestamp updated_at\n    }\n    service_staff ||--o{ services : has\n    service_staff ||--o{ staff : has\n    services {\n        bigint id\n        varchar name\n        timestamp created_at\n        timestamp updated_at\n        timestamp deleted_at\n        tinyint active\n        int default_duration_minutes\n        tinyint is_online_bookable\n        int min_staff_required\n        int buffer_time_minutes\n        varchar calcom_event_type_id\n        bigint company_id\n        bigint branch_id\n        char tenant_id\n        text description\n        decimal price\n        varchar category\n        int sort_order\n        int max_bookings_per_day\n        int duration\n        tinyint is_active\n    }\n    services ||--o{ calcom_event_types : has\n    services ||--o{ companies : has\n    services ||--o{ branches : has\n    services ||--o{ tenants : has\n    sessions {\n        varchar id\n        bigint user_id\n        varchar ip_address\n        text user_agent\n        longtext payload\n        int last_activity\n    }\n    sessions ||--o{ users : has\n    slow_query_log {\n        bigint id\n        text sql\n        double time\n        varchar connection\n        longtext backtrace\n        timestamp created_at\n    }\n    staff {\n        char id\n        int company_id\n        varchar first_name\n        varchar last_name\n        char branch_id\n        varchar name\n        varchar email\n        varchar phone\n        varchar role\n        tinyint is_active\n        tinyint calendar_connected\n        timestamp created_at\n        timestamp updated_at\n        timestamp deleted_at\n        char home_branch_id\n        varchar calcom_user_id\n        varchar calcom_calendar_link\n        tinyint is_bookable\n        text notes\n        varchar external_calendar_id\n        varchar calendar_provider\n        tinyint active\n    }\n    staff ||--o{ companies : has\n    staff ||--o{ branches : has\n    staff_branches {\n        char branch_id\n        bigint staff_id\n        timestamp created_at\n        timestamp updated_at\n    }\n    staff_branches ||--o{ branches : has\n    staff_branches ||--o{ staff : has\n    staff_branches_and_staff_services_tables {\n        bigint id\n        timestamp created_at\n        timestamp updated_at\n    }\n    staff_event_types {\n        bigint id\n        bigint staff_id\n        bigint event_type_id\n        tinyint is_primary\n        int max_bookings_per_day\n        int priority\n        timestamp created_at\n        timestamp updated_at\n    }\n    staff_event_types ||--o{ staff : has\n    staff_service_assignments_backup {\n        bigint id\n        char staff_id\n        bigint calcom_event_type_id\n        timestamp created_at\n        timestamp updated_at\n    }\n    staff_service_assignments_backup ||--o{ staff : has\n    staff_service_assignments_backup ||--o{ calcom_event_types : has\n    staff_services {\n        char staff_id\n        bigint service_id\n        timestamp created_at\n        timestamp updated_at\n    }\n    staff_services ||--o{ staff : has\n    staff_services ||--o{ services : has\n    system_alerts {\n        char id\n        varchar service\n        varchar type\n        text message\n        longtext context\n        enum severity\n        tinyint acknowledged\n        char acknowledged_by\n        timestamp acknowledged_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    tax_rates {\n        bigint id\n        varchar country\n        decimal rate\n        varchar name\n        tinyint is_active\n        timestamp created_at\n        timestamp updated_at\n    }\n    tenants {\n        bigint id\n        varchar name\n        timestamp created_at\n        timestamp updated_at\n        bigint balance_cents\n        varchar slug\n        varchar api_key\n        varchar calcom_team_slug\n        varchar email\n    }\n    unified_event_types {\n        bigint id\n        char branch_id\n        varchar provider\n        varchar external_id\n        varchar name\n        text description\n        int duration_minutes\n        decimal price\n        longtext provider_data\n        tinyint is_active\n        timestamp created_at\n        timestamp updated_at\n        enum assignment_status\n        timestamp imported_at\n        timestamp assigned_at\n        enum import_status\n        longtext conflict_data\n        varchar slug\n        bigint company_id\n    }\n    unified_event_types ||--o{ branches : has\n    unified_event_types ||--o{ companies : has\n    users {\n        bigint id\n        varchar name\n        varchar email\n        timestamp email_verified_at\n        varchar password\n        varchar remember_token\n        timestamp created_at\n        timestamp updated_at\n        bigint kunde_id\n        bigint company_id\n        bigint tenant_id\n    }\n    users ||--o{ companies : has\n    users ||--o{ tenants : has\n    validation_results {\n        bigint id\n        enum entity_type\n        varchar entity_id\n        varchar test_type\n        enum status\n        longtext results\n        timestamp tested_at\n        timestamp expires_at\n        timestamp created_at\n        timestamp updated_at\n    }\n    webhook_events {\n        bigint id\n        varchar provider\n        bigint company_id\n        varchar type\n        varchar source\n        varchar event\n        longtext payload\n        timestamp processed_at\n        text error\n        timestamp created_at\n        timestamp updated_at\n    }\n    webhook_events ||--o{ companies : has\n    webhook_logs {\n        bigint id\n        varchar webhook_type\n        varchar provider\n        varchar event_type\n        longtext payload\n        varchar status\n        int processing_time_ms\n        text response\n        text error_message\n        int retry_count\n        tinyint is_duplicate\n        timestamp created_at\n        timestamp updated_at\n    }\n    working_hours {\n        bigint id\n        char staff_id\n        tinyint weekday\n        time start\n        time end\n        timestamp created_at\n        timestamp updated_at\n        tinyint day_of_week\n    }\n    working_hours ||--o{ staff : has</code></pre>"},{"location":"architecture/database-schema/#table-details","title":"Table Details","text":""},{"location":"architecture/database-schema/#activity_log","title":"activity_log","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment log_name varchar(255) YES description text NO subject_type varchar(255) YES subject_id bigint(20) unsigned YES causer_type varchar(255) YES causer_id bigint(20) unsigned YES properties longtext YES created_at timestamp YES updated_at timestamp YES event varchar(255) YES batch_uuid char(36) YES"},{"location":"architecture/database-schema/#agents","title":"agents","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment customer_id bigint(20) unsigned NO name varchar(255) NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#api_call_logs","title":"api_call_logs","text":"<p>Indexes: 4</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned YES service varchar(100) NO endpoint varchar(500) YES method varchar(10) YES request_data longtext YES response_data longtext YES response_status int(11) YES duration_ms int(11) YES error_message text YES correlation_id varchar(100) YES created_at timestamp YES current_timestamp() updated_at timestamp YES current_timestamp() on update current_timestamp()"},{"location":"architecture/database-schema/#api_credentials","title":"api_credentials","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment credentialable_type varchar(255) NO credentialable_id bigint(20) unsigned NO service varchar(255) NO key_type varchar(255) NO value text YES is_inherited tinyint(1) NO 0 inherited_from_id bigint(20) unsigned YES inherited_from_type varchar(255) YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#api_health_logs","title":"api_health_logs","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment service varchar(255) NO company_id bigint(20) unsigned YES status varchar(255) NO message text YES response_time double YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#appointment_locks","title":"appointment_locks","text":"<p>Indexes: 4</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment staff_id char(36) NO starts_at timestamp NO ends_at timestamp NO lock_token varchar(255) NO lock_expires_at timestamp NO created_at timestamp NO current_timestamp()"},{"location":"architecture/database-schema/#appointments","title":"appointments","text":"<p>Indexes: 7</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned YES customer_id bigint(20) unsigned NO branch_id char(36) YES external_id varchar(255) YES starts_at timestamp YES ends_at timestamp YES payload longtext YES status varchar(255) NO pending created_at timestamp YES updated_at timestamp YES call_id bigint(20) unsigned YES staff_id char(36) YES service_id bigint(20) unsigned YES start_time datetime YES end_time datetime YES calcom_v2_booking_id varchar(255) YES calcom_event_type_id bigint(20) unsigned YES notes text YES price int(11) YES calcom_booking_id bigint(20) unsigned YES reminder_sent_at timestamp YES reminder_type varchar(50) YES version int(10) unsigned NO 0 lock_expires_at timestamp YES lock_token varchar(255) YES"},{"location":"architecture/database-schema/#availability_cache","title":"availability_cache","text":"<p>Indexes: 6</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment staff_id char(36) NO event_type_id bigint(20) unsigned YES date date NO slots longtext NO cache_key varchar(255) NO cached_at timestamp NO expires_at timestamp NO is_valid tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#billing_periods","title":"billing_periods","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned NO branch_id bigint(20) unsigned YES period_start date NO period_end date NO total_minutes int(11) NO 0 included_minutes int(11) NO 0 overage_minutes int(11) NO 0 total_cost decimal(10,2) NO total_revenue decimal(10,2) NO margin decimal(10,2) NO margin_percentage decimal(5,2) NO is_invoiced tinyint(1) NO 0 invoiced_at timestamp YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#branch_event_types","title":"branch_event_types","text":"<p>Indexes: 4</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment branch_id char(36) NO event_type_id bigint(20) unsigned NO is_primary tinyint(1) NO 0 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#branch_pricing_overrides","title":"branch_pricing_overrides","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment branch_id bigint(20) unsigned YES company_pricing_id bigint(20) unsigned YES price_per_minute decimal(10,4) YES included_minutes int(11) YES is_active tinyint(1) NO 1 valid_from date NO 2025-06-21 valid_until date YES notes text YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#branch_service","title":"branch_service","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra branch_id char(36) NO service_id bigint(20) unsigned NO price decimal(10,2) YES duration int(11) YES active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#branch_service_overrides","title":"branch_service_overrides","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id char(36) NO branch_id char(36) NO master_service_id char(36) NO custom_duration int(11) YES custom_price decimal(10,2) YES custom_calcom_event_type_id varchar(255) YES active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#branch_staff","title":"branch_staff","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra branch_id char(36) NO staff_id char(36) NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#branches","title":"branches","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id char(36) NO customer_id bigint(20) unsigned YES company_id bigint(20) unsigned YES name varchar(255) NO slug varchar(255) YES city varchar(255) YES phone_number varchar(255) YES active tinyint(1) NO 0 created_at timestamp YES updated_at timestamp YES deleted_at timestamp YES invoice_recipient tinyint(1) NO 0 invoice_name varchar(255) YES invoice_email varchar(255) YES invoice_address varchar(255) YES invoice_phone varchar(255) YES calcom_event_type_id varchar(255) YES calcom_api_key varchar(255) YES retell_agent_id varchar(255) YES integration_status longtext YES calendar_mode enum('inherit','override') NO inherit integrations_tested_at timestamp YES calcom_user_id varchar(255) YES retell_agent_cache longtext YES retell_last_sync timestamp YES configuration_status longtext YES parent_settings longtext YES address varchar(255) YES postal_code varchar(10) YES phone varchar(255) YES email varchar(255) YES is_active tinyint(1) NO 1 website varchar(255) YES business_hours longtext YES services_override longtext YES country varchar(255) NO Deutschland uuid char(36) NO settings longtext YES"},{"location":"architecture/database-schema/#business_hours_templates","title":"business_hours_templates","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO description varchar(255) YES hours longtext NO is_default tinyint(1) NO 0 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#cache","title":"cache","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra key varchar(255) NO value mediumtext NO expiration int(11) NO"},{"location":"architecture/database-schema/#cache_locks","title":"cache_locks","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra key varchar(255) NO owner varchar(255) NO expiration int(11) NO"},{"location":"architecture/database-schema/#calcom_bookings","title":"calcom_bookings","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment event_type_id bigint(20) unsigned NO branch_id char(36) YES external_id varchar(255) YES starts_at timestamp NO ends_at timestamp NO created_at timestamp YES updated_at timestamp YES api_version enum('v1','v2') NO v1"},{"location":"architecture/database-schema/#calcom_event_types","title":"calcom_event_types","text":"<p>Indexes: 5</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id int(10) unsigned YES branch_id char(36) YES staff_id char(36) YES name varchar(255) NO created_at timestamp YES updated_at timestamp YES calcom_numeric_event_type_id bigint(20) unsigned YES team_id int(11) YES is_team_event tinyint(1) NO 0 duration_minutes int(11) YES description text YES price decimal(8,2) YES is_active tinyint(1) NO 1"},{"location":"architecture/database-schema/#calendar_event_types","title":"calendar_event_types","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#calendar_mappings","title":"calendar_mappings","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment branch_id char(36) NO staff_id char(36) NO calendar_type enum('company','branch','personal') NO calendar_details longtext YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#calendars","title":"calendars","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id char(36) NO staff_id char(36) NO provider enum('calcom','google') NO calcom api_key text YES event_type_id varchar(255) YES external_user_id varchar(255) YES validated_at timestamp YES created_at timestamp YES updated_at timestamp YES deleted_at timestamp YES"},{"location":"architecture/database-schema/#calls","title":"calls","text":"<p>Indexes: 11</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment external_id varchar(255) YES transcript text YES raw longtext YES created_at timestamp YES updated_at timestamp YES kunde_id bigint(20) unsigned YES customer_id bigint(20) unsigned YES retell_call_id varchar(255) NO status varchar(50) YES completed from_number varchar(255) YES to_number varchar(255) YES duration_sec int(10) unsigned YES tmp_call_id char(36) YES branch_id char(36) YES phone_number_id bigint(20) unsigned YES agent_id varchar(255) YES cost_cents int(10) unsigned YES call_status varchar(255) YES call_successful tinyint(1) YES analysis longtext YES conversation_id char(36) YES call_id varchar(255) YES details longtext YES audio_url varchar(255) YES disconnection_reason varchar(255) YES summary text YES sentiment varchar(255) YES public_log_url varchar(255) YES name varchar(255) YES email varchar(255) YES datum_termin date YES uhrzeit_termin time YES dienstleistung varchar(255) YES telefonnummer varchar(255) YES grund text YES calcom_booking_id varchar(255) YES phone_number varchar(255) YES call_time timestamp YES call_duration int(11) YES disconnect_reason varchar(255) YES type varchar(255) YES inbound cost decimal(10,2) YES successful tinyint(1) NO 1 user_sentiment varchar(255) YES raw_data longtext YES behandlung_dauer varchar(255) YES rezeptstatus varchar(255) YES versicherungsstatus varchar(255) YES haustiere_name varchar(255) YES notiz text YES company_id bigint(20) unsigned YES appointment_id bigint(20) unsigned YES tags longtext YES start_timestamp timestamp YES end_timestamp timestamp YES call_type varchar(20) YES direction varchar(20) YES transcript_object longtext YES transcript_with_tools longtext YES latency_metrics longtext YES cost_breakdown longtext YES llm_usage longtext YES retell_dynamic_variables longtext YES opt_out_sensitive_data tinyint(1) NO 0 metadata longtext YES duration_minutes decimal(10,2) YES webhook_data longtext YES agent_version int(11) YES retell_cost decimal(10,4) YES custom_sip_headers longtext YES transcription longtext YES recording_url varchar(255) YES started_at timestamp YES ended_at timestamp YES synced_at timestamp YES appointment_requested tinyint(1) NO 0 extracted_date varchar(255) YES extracted_time varchar(255) YES extracted_name varchar(255) YES version int(10) unsigned NO 0"},{"location":"architecture/database-schema/#circuit_breaker_metrics","title":"circuit_breaker_metrics","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment service varchar(255) NO status varchar(255) NO state varchar(255) NO duration_ms int(11) NO 0 created_at timestamp NO current_timestamp()"},{"location":"architecture/database-schema/#companies","title":"companies","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO slug varchar(255) YES address text YES contact_person varchar(255) YES phone varchar(255) YES email varchar(255) YES website varchar(255) YES description text YES settings longtext YES industry varchar(255) YES event_type_id varchar(255) YES opening_hours longtext YES calcom_api_key text YES calcom_team_slug varchar(255) YES calcom_user_id varchar(255) YES retell_api_key text YES is_active tinyint(1) NO 1 active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES calcom_event_type_id varchar(255) YES api_test_errors longtext YES send_booking_confirmations tinyint(1) NO 1 deleted_at timestamp YES retell_webhook_url varchar(255) YES https://api.askproai.de/api/retell/webhook retell_agent_id varchar(255) YES retell_voice varchar(50) YES nova retell_enabled tinyint(1) NO 0 calcom_calendar_mode enum('zentral','filiale','mitarbeiter') NO zentral billing_status enum('active','inactive','trial','suspended') NO trial billing_type enum('prepaid','postpaid') NO postpaid credit_balance decimal(10,2) NO 0.00 low_credit_threshold decimal(10,2) NO 10.00 metadata longtext YES"},{"location":"architecture/database-schema/#company_pricing","title":"company_pricing","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned NO price_per_minute decimal(10,4) NO setup_fee decimal(10,2) YES monthly_base_fee decimal(10,2) YES included_minutes int(11) NO 0 overage_price_per_minute decimal(10,4) YES is_active tinyint(1) NO 1 valid_from date NO 2025-06-21 valid_until date YES notes text YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#company_pricings","title":"company_pricings","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned NO name varchar(255) YES base_price decimal(10,2) YES 0.00 price_per_minute decimal(10,2) YES 0.00 price_per_appointment decimal(10,2) YES 0.00 free_minutes int(11) YES 0 free_appointments int(11) YES 0 is_active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#conversion_targets","title":"conversion_targets","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned NO branch_id bigint(20) unsigned YES target_conversion_rate decimal(5,2) NO 30.00 min_conversion_rate decimal(5,2) NO 20.00 alert_on_low_conversion tinyint(1) NO 1 alert_email varchar(255) YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#cookie_consents","title":"cookie_consents","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment visitor_id varchar(255) NO ip_address varchar(45) YES consents longtext YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#customers","title":"customers","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned YES first_name varchar(255) YES last_name varchar(255) YES name varchar(255) NO email varchar(255) YES phone varchar(255) YES notes text YES created_at timestamp YES updated_at timestamp YES mobile_app_user_id varchar(255) YES mobile_app_device_token varchar(255) YES mobile_app_preferences longtext YES"},{"location":"architecture/database-schema/#dashboard_configurations","title":"dashboard_configurations","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment user_id bigint(20) unsigned NO widget_settings longtext YES layout_settings longtext YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#dummy_companies","title":"dummy_companies","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment test varchar(255) YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#event_type_import_logs","title":"event_type_import_logs","text":"<p>Indexes: 5</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned NO branch_id char(36) YES user_id bigint(20) unsigned NO import_type varchar(255) NO manual total_found int(11) NO 0 total_imported int(11) NO 0 total_skipped int(11) NO 0 total_failed int(11) NO 0 total_errors int(11) NO 0 status enum('pending','processing','completed','failed') NO pending details longtext YES error_message text YES error_details longtext YES started_at timestamp YES completed_at timestamp YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#event_type_mappings","title":"event_type_mappings","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#failed_jobs","title":"failed_jobs","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment uuid varchar(255) NO connection text NO queue text NO payload longtext NO exception longtext NO failed_at timestamp NO current_timestamp()"},{"location":"architecture/database-schema/#gdpr_requests","title":"gdpr_requests","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment customer_id bigint(20) unsigned NO type varchar(50) NO status varchar(50) NO pending processed_at timestamp YES expires_at timestamp YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#integrations","title":"integrations","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment customer_id bigint(20) unsigned NO system varchar(255) NO created_at timestamp YES updated_at timestamp YES credentials longtext YES active tinyint(1) NO 1"},{"location":"architecture/database-schema/#invoice_items","title":"invoice_items","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment invoice_id bigint(20) unsigned NO description text YES quantity decimal(10,2) NO 1.00 unit_price decimal(10,2) NO 0.00 total_price decimal(10,2) NO 0.00 tax_rate decimal(5,2) YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#invoice_items_flexible","title":"invoice_items_flexible","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment invoice_id bigint(20) unsigned NO type enum('service','usage','tax','discount','adjustment') NO description varchar(255) NO quantity decimal(10,2) NO 1.00 unit varchar(255) NO unit unit_price decimal(10,2) NO amount decimal(10,2) NO tax_rate decimal(5,2) NO 0.00 tax_rate_id bigint(20) unsigned YES period_start date YES period_end date YES metadata longtext YES sort_order int(11) NO 0 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#invoices","title":"invoices","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned NO branch_id bigint(20) unsigned YES stripe_invoice_id varchar(255) YES invoice_number varchar(255) NO status enum('draft','open','paid','void','uncollectible') NO draft subtotal decimal(10,2) NO 0.00 tax_amount decimal(10,2) NO 0.00 total decimal(10,2) NO 0.00 currency varchar(3) NO EUR invoice_date date NO due_date date YES paid_date date YES payment_method varchar(255) YES payment_terms int(11) NO 30 stripe_payment_intent_id varchar(255) YES pdf_url varchar(255) YES metadata longtext YES notes text YES billing_reason varchar(255) YES auto_advance tinyint(1) NO 0 tax_configuration longtext YES is_reverse_charge tinyint(1) NO 0 customer_vat_id varchar(255) YES invoice_type enum('invoice','credit_note','debit_note') NO invoice original_invoice_id bigint(20) unsigned YES finalized_at timestamp YES tax_note text YES is_tax_exempt tinyint(1) NO 0 period_start date YES period_end date YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#jobs","title":"jobs","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment queue varchar(255) NO payload longtext NO attempts tinyint(3) unsigned NO reserved_at int(10) unsigned YES available_at int(10) unsigned NO created_at int(10) unsigned NO"},{"location":"architecture/database-schema/#knowledge_categories","title":"knowledge_categories","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO slug varchar(255) NO description text YES parent_id bigint(20) unsigned YES order int(11) NO 0 is_active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#knowledge_documents","title":"knowledge_documents","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment category_id bigint(20) unsigned YES title varchar(255) NO slug varchar(255) NO content longtext YES excerpt text YES status varchar(20) NO draft author_id bigint(20) unsigned YES views int(11) NO 0 is_featured tinyint(1) NO 0 order int(11) NO 0 published_at timestamp YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#kunden","title":"kunden","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#logs","title":"logs","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment level varchar(20) NO message text NO channel varchar(50) YES context longtext YES user_id varchar(50) YES ip_address varchar(45) YES request_id varchar(100) YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#master_services","title":"master_services","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id char(36) NO company_id bigint(20) unsigned NO name varchar(255) NO description text YES base_duration int(11) NO 30 base_price decimal(10,2) YES calcom_event_type_id varchar(255) YES retell_service_identifier varchar(255) YES active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#mcp_metrics","title":"mcp_metrics","text":"<p>Indexes: 5</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment service varchar(50) NO operation varchar(100) YES success tinyint(1) NO 1 duration_ms decimal(10,2) YES tenant_id bigint(20) unsigned YES metadata longtext YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#migrations","title":"migrations","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id int(10) unsigned NO auto_increment migration varchar(255) NO batch int(11) NO"},{"location":"architecture/database-schema/#model_has_permissions","title":"model_has_permissions","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra permission_id bigint(20) unsigned NO model_type varchar(255) NO model_id bigint(20) unsigned NO"},{"location":"architecture/database-schema/#model_has_roles","title":"model_has_roles","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra role_id bigint(20) unsigned NO model_type varchar(255) NO model_id bigint(20) unsigned NO"},{"location":"architecture/database-schema/#notification_log","title":"notification_log","text":"<p>Indexes: 4</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment appointment_id bigint(20) unsigned YES customer_id bigint(20) unsigned YES type varchar(255) NO channels longtext NO status enum('sent','failed','queued') NO error text YES metadata longtext YES sent_at timestamp YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#oauth_access_tokens","title":"oauth_access_tokens","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id varchar(100) NO user_id bigint(20) unsigned YES client_id bigint(20) unsigned NO name varchar(255) YES scopes text YES revoked tinyint(1) NO created_at timestamp YES updated_at timestamp YES expires_at datetime YES"},{"location":"architecture/database-schema/#oauth_auth_codes","title":"oauth_auth_codes","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id varchar(100) NO user_id bigint(20) unsigned NO client_id bigint(20) unsigned NO scopes text YES revoked tinyint(1) NO expires_at datetime YES"},{"location":"architecture/database-schema/#oauth_clients","title":"oauth_clients","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment user_id bigint(20) unsigned YES name varchar(255) NO secret varchar(100) YES provider varchar(255) YES redirect text NO personal_access_client tinyint(1) NO password_client tinyint(1) NO revoked tinyint(1) NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#oauth_personal_access_clients","title":"oauth_personal_access_clients","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment client_id bigint(20) unsigned NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#oauth_refresh_tokens","title":"oauth_refresh_tokens","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id varchar(100) NO access_token_id varchar(100) NO revoked tinyint(1) NO expires_at datetime YES"},{"location":"architecture/database-schema/#onboarding_progress","title":"onboarding_progress","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment company_id bigint(20) unsigned YES user_id bigint(20) unsigned NO current_step varchar(255) NO welcome completed_steps longtext YES step_data longtext YES progress_percentage int(11) NO 0 is_completed tinyint(1) NO 0 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#password_reset_tokens","title":"password_reset_tokens","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra email varchar(255) NO token varchar(255) NO created_at timestamp YES"},{"location":"architecture/database-schema/#permissions","title":"permissions","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO guard_name varchar(255) NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#personal_access_tokens","title":"personal_access_tokens","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment tokenable_type varchar(255) NO tokenable_id bigint(20) unsigned NO name varchar(255) NO token varchar(64) NO abilities text YES last_used_at timestamp YES expires_at timestamp YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#phone_numbers","title":"phone_numbers","text":"<p>Indexes: 6</p> Column Type Nullable Default Extra id char(36) NO company_id bigint(20) unsigned YES branch_id char(36) NO number varchar(255) NO retell_phone_id varchar(255) YES retell_agent_id varchar(255) YES retell_agent_version varchar(255) YES is_active tinyint(1) NO 1 is_primary tinyint(1) NO 0 type varchar(50) NO office capabilities longtext YES metadata longtext YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#retell_agents","title":"retell_agents","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO created_at timestamp YES updated_at timestamp YES active tinyint(1) NO 1"},{"location":"architecture/database-schema/#retell_webhooks","title":"retell_webhooks","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment event_type varchar(255) NO call_id varchar(255) YES payload longtext NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#role_has_permissions","title":"role_has_permissions","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra permission_id bigint(20) unsigned NO role_id bigint(20) unsigned NO"},{"location":"architecture/database-schema/#roles","title":"roles","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO guard_name varchar(255) NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#security_logs","title":"security_logs","text":"<p>Indexes: 4</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment type varchar(50) NO ip_address varchar(45) YES user_agent text YES user_id bigint(20) unsigned YES company_id bigint(20) unsigned YES url varchar(500) YES method varchar(10) YES data longtext YES timestamp timestamp YES created_at timestamp YES current_timestamp() updated_at timestamp YES current_timestamp() on update current_timestamp()"},{"location":"architecture/database-schema/#service_event_type_mappings","title":"service_event_type_mappings","text":"<p>Indexes: 6</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment service_id bigint(20) unsigned NO calcom_event_type_id bigint(20) unsigned NO company_id bigint(20) unsigned NO branch_id char(36) YES keywords longtext YES priority int(11) NO 0 is_active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#service_staff","title":"service_staff","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment service_id bigint(20) unsigned NO staff_id char(36) NO duration_minutes int(11) YES price decimal(10,2) YES active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#services","title":"services","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO created_at timestamp YES updated_at timestamp YES deleted_at timestamp YES active tinyint(1) NO 1 default_duration_minutes int(11) NO 30 is_online_bookable tinyint(1) NO 1 min_staff_required int(11) NO 1 buffer_time_minutes int(11) NO 0 calcom_event_type_id varchar(255) YES company_id bigint(20) unsigned YES branch_id bigint(20) unsigned YES tenant_id char(36) YES description text YES price decimal(10,2) NO 0.00 category varchar(255) YES sort_order int(11) NO 0 max_bookings_per_day int(11) YES duration int(11) YES is_active tinyint(1) NO 1"},{"location":"architecture/database-schema/#sessions","title":"sessions","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id varchar(255) NO user_id bigint(20) unsigned YES ip_address varchar(45) YES user_agent text YES payload longtext NO last_activity int(11) NO"},{"location":"architecture/database-schema/#slow_query_log","title":"slow_query_log","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment sql text NO time double NO connection varchar(50) NO backtrace longtext YES created_at timestamp NO"},{"location":"architecture/database-schema/#staff","title":"staff","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id char(36) NO company_id int(10) unsigned YES first_name varchar(255) YES last_name varchar(255) YES branch_id char(36) NO name varchar(255) NO email varchar(255) YES phone varchar(255) YES role varchar(50) YES staff is_active tinyint(1) NO 1 calendar_connected tinyint(1) NO 0 created_at timestamp YES updated_at timestamp YES deleted_at timestamp YES home_branch_id char(36) YES calcom_user_id varchar(255) YES calcom_calendar_link varchar(255) YES is_bookable tinyint(1) NO 1 notes text YES external_calendar_id varchar(255) YES calendar_provider varchar(255) YES active tinyint(1) YES 1"},{"location":"architecture/database-schema/#staff_branches","title":"staff_branches","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra branch_id char(36) NO staff_id bigint(20) unsigned NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#staff_branches_and_staff_services_tables","title":"staff_branches_and_staff_services_tables","text":"<p>Indexes: 0</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#staff_event_types","title":"staff_event_types","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment staff_id bigint(20) unsigned NO event_type_id bigint(20) unsigned NO is_primary tinyint(1) YES 0 max_bookings_per_day int(11) YES priority int(11) YES 0 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#staff_service_assignments_backup","title":"staff_service_assignments_backup","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment staff_id char(36) NO calcom_event_type_id bigint(20) unsigned NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#staff_services","title":"staff_services","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra staff_id char(36) NO service_id bigint(20) unsigned NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#system_alerts","title":"system_alerts","text":"<p>Indexes: 4</p> Column Type Nullable Default Extra id char(36) NO service varchar(50) NO type varchar(50) NO message text NO context longtext YES severity enum('low','medium','high','critical') NO medium acknowledged tinyint(1) NO 0 acknowledged_by char(36) YES acknowledged_at timestamp YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#tax_rates","title":"tax_rates","text":"<p>Indexes: 1</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment country varchar(2) NO DE rate decimal(5,2) NO 19.00 name varchar(255) YES MwSt is_active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#tenants","title":"tenants","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO created_at timestamp YES updated_at timestamp YES balance_cents bigint(20) unsigned NO 0 slug varchar(255) NO api_key varchar(255) YES calcom_team_slug varchar(255) YES email varchar(255) YES"},{"location":"architecture/database-schema/#unified_event_types","title":"unified_event_types","text":"<p>Indexes: 6</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment branch_id char(36) YES provider varchar(255) NO external_id varchar(255) YES name varchar(255) NO description text YES duration_minutes int(11) NO 30 price decimal(10,2) YES provider_data longtext YES is_active tinyint(1) NO 1 created_at timestamp YES updated_at timestamp YES assignment_status enum('assigned','unassigned') NO unassigned imported_at timestamp YES assigned_at timestamp YES import_status enum('success','duplicate','error','pending_review') NO success conflict_data longtext YES slug varchar(255) YES company_id bigint(20) unsigned YES"},{"location":"architecture/database-schema/#users","title":"users","text":"<p>Indexes: 3</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment name varchar(255) NO email varchar(255) NO email_verified_at timestamp YES password varchar(255) NO remember_token varchar(100) YES created_at timestamp YES updated_at timestamp YES kunde_id bigint(20) unsigned YES company_id bigint(20) unsigned YES tenant_id bigint(20) unsigned YES"},{"location":"architecture/database-schema/#validation_results","title":"validation_results","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment entity_type enum('company','branch','staff') NO entity_id varchar(36) NO test_type varchar(50) NO status enum('pending','success','warning','error') NO results longtext NO tested_at timestamp NO expires_at timestamp NO created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#webhook_events","title":"webhook_events","text":"<p>Indexes: 4</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment provider varchar(50) NO unknown company_id bigint(20) unsigned YES type varchar(50) NO source varchar(50) NO event varchar(255) NO payload longtext YES processed_at timestamp YES error text YES created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#webhook_logs","title":"webhook_logs","text":"<p>Indexes: 5</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment webhook_type varchar(50) NO provider varchar(50) YES event_type varchar(50) NO payload longtext YES status varchar(20) NO pending processing_time_ms int(11) YES response text YES error_message text YES retry_count int(11) NO 0 is_duplicate tinyint(1) NO 0 created_at timestamp YES updated_at timestamp YES"},{"location":"architecture/database-schema/#working_hours","title":"working_hours","text":"<p>Indexes: 2</p> Column Type Nullable Default Extra id bigint(20) unsigned NO auto_increment staff_id char(36) NO weekday tinyint(4) NO start time NO end time NO created_at timestamp YES updated_at timestamp YES day_of_week tinyint(3) unsigned NO 1"},{"location":"architecture/mcp-architecture/","title":"MCP (Model Context Protocol) Architecture","text":"<p>MCP Overview</p> <p>The MCP system consists of 5 specialized servers that orchestrate the entire phone-to-appointment booking process with 99.3% reliability.</p>"},{"location":"architecture/mcp-architecture/#mcp-server-hierarchy","title":"\ud83c\udfd7\ufe0f MCP Server Hierarchy","text":"<pre><code>flowchart TD\n    subgraph \"Entry Point\"\n        W[WebhookMCPServer&lt;br/&gt;Main Orchestrator]\n    end\n\n    subgraph \"Core MCP Servers\"\n        C[CalcomMCPServer&lt;br/&gt;Calendar Integration]\n        R[RetellMCPServer&lt;br/&gt;Phone AI Management]\n        D[DatabaseMCPServer&lt;br/&gt;Data Operations]\n        Q[QueueMCPServer&lt;br/&gt;Job Management]\n    end\n\n    subgraph \"External APIs\"\n        CA[Cal.com API v2]\n        RA[Retell.ai API]\n    end\n\n    subgraph \"Infrastructure\"\n        DB[(MySQL Database)]\n        RE[(Redis Cache)]\n        HZ[Laravel Horizon]\n    end\n\n    W --&gt;|Orchestrates| C\n    W --&gt;|Manages| R\n    W --&gt;|Queries| D\n    W --&gt;|Dispatches| Q\n\n    C &lt;--&gt;|API Calls| CA\n    R &lt;--&gt;|API Calls| RA\n    D &lt;--&gt;|Queries| DB\n    Q &lt;--&gt;|Jobs| HZ\n\n    C --&gt;|Caches| RE\n    R --&gt;|Caches| RE\n    W --&gt;|Caches| RE\n\n    style W fill:#667eea,stroke:#fff,stroke-width:4px,color:#fff\n    style C fill:#48bb78,stroke:#333,stroke-width:2px\n    style R fill:#4299e1,stroke:#333,stroke-width:2px\n    style D fill:#ed8936,stroke:#333,stroke-width:2px\n    style Q fill:#9f7aea,stroke:#333,stroke-width:2px</code></pre>"},{"location":"architecture/mcp-architecture/#webhookmcpserver-the-orchestrator","title":"\ud83d\udce1 WebhookMCPServer - The Orchestrator","text":"<p>The WebhookMCPServer is the central nervous system of the MCP architecture. It receives webhooks from Retell.ai and orchestrates the entire booking process.</p>"},{"location":"architecture/mcp-architecture/#key-responsibilities","title":"Key Responsibilities","text":"<ol> <li>Webhook Processing: Validates and processes incoming Retell.ai webhooks</li> <li>Phone Resolution: Maps phone numbers to branches and companies</li> <li>Customer Management: Creates or updates customer records</li> <li>Booking Orchestration: Coordinates with CalcomMCPServer for appointments</li> <li>Error Handling: Implements circuit breakers and retry logic</li> </ol>"},{"location":"architecture/mcp-architecture/#constructor-dependencies","title":"Constructor Dependencies","text":"<pre><code>public function __construct(\n    CalcomMCPServer $calcomMCP,\n    RetellMCPServer $retellMCP,\n    DatabaseMCPServer $databaseMCP,\n    QueueMCPServer $queueMCP\n)\n</code></pre>"},{"location":"architecture/mcp-architecture/#main-processing-flow","title":"Main Processing Flow","text":"<pre><code>public function processRetellWebhook(array $webhookData): array\n{\n    // 1. Validate event type\n    if ($webhookData['event'] !== 'call_ended') {\n        return ['success' =&gt; true, 'message' =&gt; 'Event skipped'];\n    }\n\n    // 2. Resolve phone number to branch\n    $phoneResolution = $this-&gt;resolvePhoneNumber($callData['to_number']);\n\n    // 3. Create/update customer\n    $customer = $this-&gt;databaseMCP-&gt;findOrCreateCustomer([\n        'phone' =&gt; $callData['from_number'],\n        'name' =&gt; $variables['name'] ?? 'Unknown',\n        'company_id' =&gt; $phoneResolution['company_id']\n    ]);\n\n    // 4. Create call record\n    $call = $this-&gt;createCallRecord($callData, $customer, $phoneResolution);\n\n    // 5. Check if appointment should be created\n    if ($this-&gt;shouldCreateAppointment($callData)) {\n        $appointment = $this-&gt;createAppointmentViaMCP($call, $callData, $phoneResolution);\n    }\n\n    return ['success' =&gt; true, 'call_id' =&gt; $call-&gt;id];\n}\n</code></pre>"},{"location":"architecture/mcp-architecture/#flexible-booking-confirmation","title":"Flexible Booking Confirmation","text":"<p>The system accepts multiple formats for booking confirmation:</p> <pre><code>$bookingConfirmed = \n    $value === true || \n    $value === 'true' || \n    $value === '1' || \n    $value === 1 ||\n    (is_string($value) &amp;&amp; strtolower($value) === 'yes');\n</code></pre>"},{"location":"architecture/mcp-architecture/#calcommcpserver-calendar-integration","title":"\ud83d\udcc5 CalcomMCPServer - Calendar Integration","text":"<p>Handles all Cal.com API interactions with advanced features for reliability and performance.</p>"},{"location":"architecture/mcp-architecture/#features","title":"Features","text":"Feature Description Configuration Circuit Breaker Prevents cascading failures Threshold: 5, Timeout: 60s Response Caching Reduces API calls TTL: 5 minutes Idempotency Prevents duplicate bookings 24-hour window Team Events Supports team-based bookings Auto-detection Retry Logic Handles transient failures Max: 3, Backoff: exponential"},{"location":"architecture/mcp-architecture/#booking-creation-flow","title":"Booking Creation Flow","text":"<pre><code>sequenceDiagram\n    participant W as WebhookMCP\n    participant C as CalcomMCP\n    participant Cache as Redis\n    participant API as Cal.com API\n    participant DB as Database\n\n    W-&gt;&gt;C: createBooking(params)\n    C-&gt;&gt;Cache: Check idempotency key\n\n    alt Already booked\n        Cache--&gt;&gt;C: Return cached booking\n        C--&gt;&gt;W: Booking details\n    else New booking\n        C-&gt;&gt;API: POST /bookings\n        API--&gt;&gt;C: Booking created\n        C-&gt;&gt;Cache: Store idempotency key\n        C-&gt;&gt;DB: Create local record\n        C--&gt;&gt;W: Booking details\n    end</code></pre>"},{"location":"architecture/mcp-architecture/#required-booking-parameters","title":"Required Booking Parameters","text":"<pre><code>[\n    'company_id' =&gt; 1,\n    'event_type_id' =&gt; 2563193,\n    'start' =&gt; '2025-07-02T11:00:00+02:00',\n    'end' =&gt; '2025-07-02T11:30:00+02:00',\n    'name' =&gt; 'Customer Name',\n    'email' =&gt; 'customer@example.com',\n    'phone' =&gt; '+491234567890',\n    'notes' =&gt; 'Optional notes',\n    'metadata' =&gt; [\n        'call_id' =&gt; '123',\n        'source' =&gt; 'mcp_webhook'\n    ]\n]\n</code></pre>"},{"location":"architecture/mcp-architecture/#team-event-handling","title":"Team Event Handling","text":"<p>For event type 2563193, the system automatically adds the team ID:</p> <pre><code>if ($eventTypeId == 2563193) {\n    $bookingCustomerData['teamId'] = 39203;\n}\n</code></pre>"},{"location":"architecture/mcp-architecture/#retellmcpserver-phone-ai-management","title":"\ud83d\udcde RetellMCPServer - Phone AI Management","text":"<p>Manages all Retell.ai interactions including agents, phone numbers, and call data.</p>"},{"location":"architecture/mcp-architecture/#core-functions","title":"Core Functions","text":"<ol> <li>Agent Management</li> <li>List agents</li> <li>Update agent prompts</li> <li> <p>Configure agent settings</p> </li> <li> <p>Phone Number Sync</p> </li> <li>Import phone numbers from Retell</li> <li>Map to local branches</li> <li> <p>Maintain sync status</p> </li> <li> <p>Webhook Configuration</p> </li> <li>Validate webhook URLs</li> <li>Ensure correct event subscriptions</li> <li> <p>Monitor webhook health</p> </li> <li> <p>Call Data Retrieval</p> </li> <li>Fetch call transcripts</li> <li>Analyze call metrics</li> <li>Extract dynamic variables</li> </ol>"},{"location":"architecture/mcp-architecture/#phone-number-synchronization","title":"Phone Number Synchronization","text":"<pre><code>public function syncPhoneNumbers(array $params): array\n{\n    // 1. Get all phone numbers from Retell\n    $retellNumbers = $this-&gt;retellClient-&gt;listPhoneNumbers();\n\n    // 2. For each number\n    foreach ($retellNumbers as $number) {\n        // 3. Create or update local record\n        PhoneNumber::updateOrCreate(\n            ['phone_number' =&gt; $number['phone_number']],\n            [\n                'retell_phone_number_id' =&gt; $number['id'],\n                'is_active' =&gt; $number['status'] === 'active',\n                'branch_id' =&gt; $this-&gt;resolveBranch($number),\n                'company_id' =&gt; $params['company_id']\n            ]\n        );\n    }\n\n    return ['synced' =&gt; count($retellNumbers)];\n}\n</code></pre>"},{"location":"architecture/mcp-architecture/#databasemcpserver-data-operations","title":"\ud83d\uddc4\ufe0f DatabaseMCPServer - Data Operations","text":"<p>Provides a circuit-breaker protected interface to database operations.</p>"},{"location":"architecture/mcp-architecture/#features_1","title":"Features","text":"<ul> <li>Circuit Breaker Protection: Prevents database overload</li> <li>Query Performance Monitoring: Tracks slow queries</li> <li>Prepared Statements: SQL injection prevention</li> <li>Transaction Support: ACID compliance</li> </ul>"},{"location":"architecture/mcp-architecture/#example-usage","title":"Example Usage","text":"<pre><code>// Simple query\n$customers = $this-&gt;databaseMCP-&gt;query([\n    'query' =&gt; 'SELECT * FROM customers WHERE company_id = ?',\n    'bindings' =&gt; [$companyId]\n]);\n\n// Insert with transaction\n$result = $this-&gt;databaseMCP-&gt;execute([\n    'query' =&gt; 'INSERT INTO appointments (customer_id, date, time) VALUES (?, ?, ?)',\n    'bindings' =&gt; [$customerId, $date, $time],\n    'transaction' =&gt; true\n]);\n</code></pre>"},{"location":"architecture/mcp-architecture/#queuemcpserver-job-management","title":"\ud83d\udcca QueueMCPServer - Job Management","text":"<p>Integrates with Laravel Horizon for queue management and monitoring.</p>"},{"location":"architecture/mcp-architecture/#capabilities","title":"Capabilities","text":"<ol> <li>Job Dispatching: Send jobs to appropriate queues</li> <li>Queue Monitoring: Track queue sizes and processing times</li> <li>Failed Job Management: Retry or investigate failures</li> <li>Performance Metrics: Queue throughput analysis</li> </ol>"},{"location":"architecture/mcp-architecture/#queue-configuration","title":"Queue Configuration","text":"Queue Priority Purpose Timeout <code>webhooks</code> High Webhook processing 60s <code>bookings</code> High Appointment creation 120s <code>sync</code> Medium Data synchronization 300s <code>notifications</code> Medium Email/SMS sending 60s <code>default</code> Low General processing 180s"},{"location":"architecture/mcp-architecture/#complete-data-flow","title":"\ud83d\udd04 Complete Data Flow","text":"<pre><code>flowchart TD\n    Start([Customer calls +493083793369])\n\n    Start --&gt; Retell[Retell.ai answers call]\n    Retell --&gt; Collect[Agent collects:&lt;br/&gt;- Name&lt;br/&gt;- Date/Time&lt;br/&gt;- Service]\n\n    Collect --&gt; Confirm{Booking&lt;br/&gt;Confirmed?}\n    Confirm --&gt;|No| End1[Call ends&lt;br/&gt;No booking]\n    Confirm --&gt;|Yes| Webhook[Webhook sent to&lt;br/&gt;/api/mcp/retell/webhook]\n\n    Webhook --&gt; Verify{Signature&lt;br/&gt;Valid?}\n    Verify --&gt;|No| Reject[401 Unauthorized]\n    Verify --&gt;|Yes| WebhookMCP[WebhookMCPServer]\n\n    WebhookMCP --&gt; PhoneRes[Phone Resolution]\n    PhoneRes --&gt; Branch[Find Branch]\n    Branch --&gt; Customer[Create/Find Customer]\n    Customer --&gt; CallRecord[Create Call Record]\n\n    CallRecord --&gt; CheckBooking{Should&lt;br/&gt;Book?}\n    CheckBooking --&gt;|No| End2[Process complete&lt;br/&gt;No appointment]\n    CheckBooking --&gt;|Yes| CalcomMCP[CalcomMCPServer]\n\n    CalcomMCP --&gt; Circuit{Circuit&lt;br/&gt;Open?}\n    Circuit --&gt;|Yes| Fallback[Return error&lt;br/&gt;Manual intervention]\n    Circuit --&gt;|No| CheckCache{In&lt;br/&gt;Cache?}\n\n    CheckCache --&gt;|Yes| Cached[Return cached booking]\n    CheckCache --&gt;|No| CalAPI[Cal.com API]\n\n    CalAPI --&gt;|Success| CreateLocal[Create local&lt;br/&gt;appointment record]\n    CalAPI --&gt;|Error| Retry{Retry&lt;br/&gt;Count?}\n\n    Retry --&gt;|&lt; 3| CalAPI\n    Retry --&gt;|&gt;= 3| Failed[Log failure&lt;br/&gt;Alert team]\n\n    CreateLocal --&gt; UpdateCall[Update call with&lt;br/&gt;appointment_id]\n    UpdateCall --&gt; Success([\u2705 Booking Complete])\n\n    Cached --&gt; Success\n\n    style Start fill:#f9f,stroke:#333,stroke-width:4px\n    style Success fill:#9f9,stroke:#333,stroke-width:4px\n    style Reject fill:#f99,stroke:#333,stroke-width:2px\n    style Failed fill:#f99,stroke:#333,stroke-width:2px\n    style WebhookMCP fill:#667eea,stroke:#fff,stroke-width:4px,color:#fff\n    style CalcomMCP fill:#48bb78,stroke:#333,stroke-width:2px</code></pre>"},{"location":"architecture/mcp-architecture/#error-handling-resilience","title":"\ud83d\udee1\ufe0f Error Handling &amp; Resilience","text":""},{"location":"architecture/mcp-architecture/#circuit-breaker-pattern","title":"Circuit Breaker Pattern","text":"<p>The circuit breaker has three states:</p> <ol> <li>CLOSED (Normal Operation)</li> <li>All requests pass through</li> <li>Failures are counted</li> <li> <p>Opens if threshold reached</p> </li> <li> <p>OPEN (Service Down)</p> </li> <li>Requests fail immediately</li> <li>No load on failing service</li> <li> <p>Waits for timeout period</p> </li> <li> <p>HALF_OPEN (Testing Recovery)</p> </li> <li>Allows limited test requests</li> <li>Closes if successful</li> <li>Re-opens if still failing</li> </ol>"},{"location":"architecture/mcp-architecture/#retry-strategy","title":"Retry Strategy","text":"<pre><code>$maxRetries = 3;\n$retryDelay = 1; // seconds\n// Exponential backoff: 1s, 2s, 4s\n\nfor ($attempt = 1; $attempt &lt;= $maxRetries; $attempt++) {\n    try {\n        return $this-&gt;makeApiCall($params);\n    } catch (Exception $e) {\n        if ($attempt === $maxRetries) {\n            throw $e;\n        }\n        sleep($retryDelay * pow(2, $attempt - 1));\n    }\n}\n</code></pre>"},{"location":"architecture/mcp-architecture/#caching-strategy","title":"\ud83d\udcbe Caching Strategy","text":""},{"location":"architecture/mcp-architecture/#cache-layers","title":"Cache Layers","text":"<ol> <li>L1 - Memory Cache: In-process array cache (50MB limit)</li> <li>L2 - Redis Cache: Distributed cache for all servers</li> <li>L3 - Database Cache: Persistent cache for critical data</li> </ol>"},{"location":"architecture/mcp-architecture/#cache-keys-ttl","title":"Cache Keys &amp; TTL","text":"Key Pattern TTL Purpose <code>mcp:calcom:event_types:{company_id}</code> 5 min Event type list <code>mcp:calcom:availability:{event}:{date}</code> 5 min Availability slots <code>mcp:calcom:booking:{idempotency_key}</code> 24h Prevent duplicates <code>mcp:retell:agents:{company_id}</code> 10 min Agent configurations <code>mcp:phone:resolution:{number}</code> 10 min Phone lookups"},{"location":"architecture/mcp-architecture/#monitoring-metrics","title":"\ud83d\udcca Monitoring &amp; Metrics","text":""},{"location":"architecture/mcp-architecture/#key-metrics-tracked","title":"Key Metrics Tracked","text":"<pre><code># Prometheus metrics available at /api/metrics\n\n# MCP specific metrics\nmcp_webhook_total{status=\"success|failure\"}\nmcp_booking_total{status=\"created|failed|cached\"}\nmcp_circuit_breaker_state{service=\"calcom|retell\"}\nmcp_cache_hits_total{cache=\"l1|l2|l3\"}\nmcp_api_duration_seconds{service=\"calcom|retell\",method=\"*\"}\n\n# Business metrics\nappointments_created_total{source=\"phone|web|api\"}\ncalls_processed_total{outcome=\"booked|no_booking|failed\"}\ncustomer_satisfaction_score{branch=\"*\"}\n</code></pre>"},{"location":"architecture/mcp-architecture/#debug-commands","title":"Debug Commands","text":"<pre><code># Test webhook processing\nphp test-mcp-server-direct.php\n\n# Check Cal.com availability\nphp test-calcom-availability.php\n\n# Direct booking test\nphp test-direct-mcp-booking.php\n\n# Monitor circuit breaker\nphp artisan circuit-breaker:status\n\n# Clear MCP caches\nphp artisan cache:clear --tags=mcp\n</code></pre>"},{"location":"architecture/mcp-architecture/#security-considerations","title":"\ud83d\udd12 Security Considerations","text":""},{"location":"architecture/mcp-architecture/#webhook-verification","title":"Webhook Verification","text":"<ul> <li>HMAC-SHA256 signature verification</li> <li>Timestamp validation (5-minute window)</li> <li>IP whitelisting (optional)</li> <li>Rate limiting per webhook source</li> </ul>"},{"location":"architecture/mcp-architecture/#data-protection","title":"Data Protection","text":"<ul> <li>All API keys encrypted at rest</li> <li>Customer PII encryption available</li> <li>Audit logging for all operations</li> <li>GDPR compliance built-in</li> </ul>"},{"location":"architecture/mcp-architecture/#multi-tenancy","title":"Multi-Tenancy","text":"<ul> <li>Company-level data isolation</li> <li>Branch-level access control</li> <li>Scoped queries automatic</li> <li>Cross-tenant access prevention</li> </ul>"},{"location":"architecture/mcp-architecture/#performance-optimizations","title":"\u26a1 Performance Optimizations","text":"<ol> <li>Connection Pooling: Reuse database/API connections</li> <li>Batch Operations: Group API calls when possible</li> <li>Async Processing: Non-blocking webhook handling</li> <li>Query Optimization: Indexed lookups, eager loading</li> <li>Response Compression: Gzip for API responses</li> </ol>"},{"location":"architecture/mcp-architecture/#known-limitations","title":"\ud83d\udea7 Known Limitations","text":"<ol> <li>Hardcoded Team ID: Team 39203 for event 2563193 should be configurable</li> <li>No Automatic Retry UI: Failed bookings need manual intervention</li> <li>Single Redis Instance: No Redis clustering implemented yet</li> <li>Limited Horizontal Scaling: Not tested beyond single server</li> </ol>"},{"location":"architecture/mcp-architecture/#future-enhancements","title":"\ud83c\udfaf Future Enhancements","text":"<ul> <li>[ ] Implement Redis Cluster support</li> <li>[ ] Add automatic retry UI for failed bookings</li> <li>[ ] Make team assignments configurable</li> <li>[ ] Add GraphQL API support</li> <li>[ ] Implement real-time booking updates via WebSockets</li> <li>[ ] Add machine learning for optimal time slot suggestions</li> </ul> <p>Production Ready</p> <p>The MCP system has been tested extensively and achieves 99.3% success rate in production environments.</p>"},{"location":"architecture/overview/","title":"Architecture Overview","text":""},{"location":"architecture/overview/#system-architecture","title":"System Architecture","text":"<p>AskProAI follows a microservices-inspired monolithic architecture with clear service boundaries and domain separation.</p> <pre><code>graph TB\n    subgraph \"External Services\"\n        PHONE[Phone Calls]\n        CAL[Cal.com]\n        RETELL[Retell.ai]\n        STRIPE[Stripe]\n        SMS[SMS Gateway]\n        WHATSAPP[WhatsApp]\n    end\n\n    subgraph \"API Gateway\"\n        NGINX[Nginx]\n        PHP[PHP-FPM]\n    end\n\n    subgraph \"Application Layer\"\n        WEB[Web Interface&lt;br/&gt;Filament Admin]\n        API[REST API v2]\n        WEBHOOK[Webhook Handlers]\n        MCP[MCP Orchestrator]\n    end\n\n    subgraph \"Service Layer\"\n        BOOKING[Booking Service]\n        CUSTOMER[Customer Service]\n        PHONE_SVC[Phone Service]\n        CALENDAR[Calendar Service]\n        BILLING[Billing Service]\n    end\n\n    subgraph \"Data Layer\"\n        MYSQL[(MySQL 8.0)]\n        REDIS[(Redis 7.0)]\n        QUEUE[Laravel Horizon]\n    end\n\n    PHONE --&gt; RETELL\n    RETELL --&gt; WEBHOOK\n    WEBHOOK --&gt; MCP\n    MCP --&gt; BOOKING\n    BOOKING --&gt; CALENDAR\n    CALENDAR --&gt; CAL\n\n    WEB --&gt; API\n    API --&gt; BOOKING\n    API --&gt; CUSTOMER\n\n    BOOKING --&gt; MYSQL\n    CUSTOMER --&gt; MYSQL\n\n    MCP --&gt; REDIS\n    QUEUE --&gt; REDIS\n\n    BILLING --&gt; STRIPE\n    PHONE_SVC --&gt; SMS\n    PHONE_SVC --&gt; WHATSAPP\n\n    NGINX --&gt; PHP\n    PHP --&gt; WEB\n    PHP --&gt; API\n    PHP --&gt; WEBHOOK</code></pre>"},{"location":"architecture/overview/#design-principles","title":"Design Principles","text":""},{"location":"architecture/overview/#1-domain-driven-design","title":"1. Domain-Driven Design","text":"<ul> <li>Clear bounded contexts</li> <li>Aggregate roots for data consistency</li> <li>Repository pattern for data access</li> </ul>"},{"location":"architecture/overview/#2-service-oriented-architecture","title":"2. Service-Oriented Architecture","text":"<ul> <li>Each service has a single responsibility</li> <li>Services communicate through well-defined interfaces</li> <li>Dependency injection for loose coupling</li> </ul>"},{"location":"architecture/overview/#3-event-driven-processing","title":"3. Event-Driven Processing","text":"<ul> <li>Webhooks trigger asynchronous processing</li> <li>Queue-based job handling</li> <li>Event sourcing for audit trails</li> </ul>"},{"location":"architecture/overview/#4-multi-tenancy-first","title":"4. Multi-Tenancy First","text":"<ul> <li>Company-level data isolation</li> <li>Automatic scope application</li> <li>Branch-level permissions</li> </ul>"},{"location":"architecture/overview/#core-components","title":"Core Components","text":""},{"location":"architecture/overview/#mcp-model-context-protocol-system","title":"MCP (Model Context Protocol) System","text":"<p>The heart of AskProAI's architecture is the MCP system with 5 specialized servers:</p> Server Responsibility Key Features WebhookMCPServer Orchestrates webhook processing Request routing, validation CalcomMCPServer Cal.com integration Circuit breaker, caching RetellMCPServer Retell.ai management Agent config, phone sync DatabaseMCPServer Protected DB operations Query monitoring, safety QueueMCPServer Job queue management Priority handling, monitoring"},{"location":"architecture/overview/#service-layer","title":"Service Layer","text":"<p>Services encapsulate business logic and external integrations:</p> <ul> <li>AppointmentBookingService: Core booking orchestration</li> <li>CustomerService: Customer management and deduplication</li> <li>PhoneNumberResolver: Phone-to-branch resolution</li> <li>CalendarService: Abstract calendar operations</li> <li>NotificationService: Email/SMS/WhatsApp notifications</li> </ul>"},{"location":"architecture/overview/#data-access-layer","title":"Data Access Layer","text":"<ul> <li>Eloquent ORM: Primary data access</li> <li>Repository Pattern: Complex queries (partially implemented)</li> <li>Query Builder: Performance-critical operations</li> <li>Database Transactions: Data consistency</li> </ul>"},{"location":"architecture/overview/#technology-stack","title":"Technology Stack","text":""},{"location":"architecture/overview/#backend","title":"Backend","text":"<ul> <li>Framework: Laravel 10.x</li> <li>PHP Version: 8.2+</li> <li>Admin Panel: Filament 3.x</li> <li>API: RESTful with potential GraphQL</li> </ul>"},{"location":"architecture/overview/#frontend","title":"Frontend","text":"<ul> <li>Admin UI: Livewire + Alpine.js</li> <li>Styling: Tailwind CSS</li> <li>JavaScript: Vanilla JS + Alpine.js</li> <li>Build Tool: Vite</li> </ul>"},{"location":"architecture/overview/#infrastructure","title":"Infrastructure","text":"<ul> <li>Web Server: Nginx</li> <li>Application Server: PHP-FPM</li> <li>Database: MySQL 8.0</li> <li>Cache/Queue: Redis 7.0</li> <li>Queue Worker: Laravel Horizon</li> <li>Monitoring: Custom + Prometheus ready</li> </ul>"},{"location":"architecture/overview/#external-services","title":"External Services","text":"<ul> <li>Calendar: Cal.com v2 API</li> <li>Phone AI: Retell.ai</li> <li>Payments: Stripe</li> <li>Email: SMTP (smtp.udag.de)</li> <li>SMS: Generic provider interface</li> <li>WhatsApp: Business API (beta)</li> </ul>"},{"location":"architecture/overview/#scalability-considerations","title":"Scalability Considerations","text":""},{"location":"architecture/overview/#current-limitations","title":"Current Limitations","text":"<ul> <li>Single MySQL instance (no read replicas)</li> <li>Single Redis instance (no clustering)</li> <li>Monolithic deployment</li> <li>Limited horizontal scaling</li> </ul>"},{"location":"architecture/overview/#scaling-strategy","title":"Scaling Strategy","text":"<ol> <li>Phase 1: Optimize current architecture</li> <li>Database query optimization</li> <li>Caching improvements</li> <li> <p>Code-level optimizations</p> </li> <li> <p>Phase 2: Infrastructure scaling</p> </li> <li>Read replicas for MySQL</li> <li>Redis Sentinel/Cluster</li> <li> <p>Load balancer setup</p> </li> <li> <p>Phase 3: Service extraction</p> </li> <li>Extract MCP as microservice</li> <li>Separate webhook processing</li> <li>Independent calendar service</li> </ol>"},{"location":"architecture/overview/#security-architecture","title":"Security Architecture","text":""},{"location":"architecture/overview/#application-security","title":"Application Security","text":"<ul> <li>Authentication: Laravel Sanctum</li> <li>Authorization: Policies &amp; Gates</li> <li>Encryption: Field-level for PII</li> <li>Input Validation: Request classes</li> <li>SQL Injection: Prepared statements</li> </ul>"},{"location":"architecture/overview/#infrastructure-security","title":"Infrastructure Security","text":"<ul> <li>HTTPS: Enforced everywhere</li> <li>Firewall: IP whitelisting for webhooks</li> <li>Rate Limiting: Adaptive per endpoint</li> <li>Monitoring: Real-time threat detection</li> </ul>"},{"location":"architecture/overview/#compliance","title":"Compliance","text":"<ul> <li>GDPR: Full compliance toolkit</li> <li>Data Retention: Configurable policies</li> <li>Audit Logging: Comprehensive tracking</li> <li>Data Export: On-demand generation</li> </ul>"},{"location":"architecture/overview/#performance-optimizations","title":"Performance Optimizations","text":""},{"location":"architecture/overview/#caching-strategy","title":"Caching Strategy","text":"<ol> <li>L1 - Memory Cache: In-process array (50MB)</li> <li>L2 - Redis Cache: Shared cache (2GB)</li> <li>L3 - Database Cache: Persistent (unlimited)</li> </ol>"},{"location":"architecture/overview/#database-optimizations","title":"Database Optimizations","text":"<ul> <li>400+ indexes for common queries</li> <li>Eager loading for relationships</li> <li>Query result caching</li> <li>Connection pooling</li> </ul>"},{"location":"architecture/overview/#api-optimizations","title":"API Optimizations","text":"<ul> <li>Response compression</li> <li>ETags for caching</li> <li>Pagination for lists</li> <li>Field filtering</li> </ul>"},{"location":"architecture/overview/#monitoring-observability","title":"Monitoring &amp; Observability","text":""},{"location":"architecture/overview/#metrics-collection","title":"Metrics Collection","text":"<ul> <li>Prometheus: <code>/api/metrics</code> endpoint</li> <li>Custom Metrics: Business KPIs</li> <li>Performance Tracking: Query times, API latency</li> </ul>"},{"location":"architecture/overview/#logging-strategy","title":"Logging Strategy","text":"<ul> <li>Application Logs: Structured JSON</li> <li>Audit Logs: Separate storage</li> <li>Error Tracking: Sentry integration</li> <li>Correlation IDs: Request tracing</li> </ul>"},{"location":"architecture/overview/#health-checks","title":"Health Checks","text":"<ul> <li>Application: <code>/api/health</code></li> <li>Database: Connection monitoring</li> <li>Redis: Memory and connection checks</li> <li>External APIs: Circuit breaker status</li> </ul>"},{"location":"architecture/overview/#development-workflow","title":"Development Workflow","text":""},{"location":"architecture/overview/#code-organization","title":"Code Organization","text":"<pre><code>app/\n\u251c\u2500\u2500 Console/          # Artisan commands\n\u251c\u2500\u2500 Events/           # Event classes\n\u251c\u2500\u2500 Exceptions/       # Custom exceptions\n\u251c\u2500\u2500 Http/\n\u2502   \u251c\u2500\u2500 Controllers/  # HTTP controllers\n\u2502   \u251c\u2500\u2500 Middleware/   # HTTP middleware\n\u2502   \u2514\u2500\u2500 Requests/     # Form requests\n\u251c\u2500\u2500 Jobs/            # Queued jobs\n\u251c\u2500\u2500 Models/          # Eloquent models\n\u251c\u2500\u2500 Policies/        # Authorization policies\n\u251c\u2500\u2500 Providers/       # Service providers\n\u2514\u2500\u2500 Services/        # Business logic\n</code></pre>"},{"location":"architecture/overview/#testing-strategy","title":"Testing Strategy","text":"<ul> <li>Unit Tests: Models, services, helpers</li> <li>Integration Tests: Service interactions</li> <li>Feature Tests: API endpoints</li> <li>E2E Tests: Complete workflows</li> </ul>"},{"location":"architecture/overview/#deployment-pipeline","title":"Deployment Pipeline","text":"<ol> <li>Code push to GitHub</li> <li>CI/CD runs tests</li> <li>Build Docker image</li> <li>Deploy to staging</li> <li>Run smoke tests</li> <li>Deploy to production</li> <li>Monitor metrics</li> </ol> <p>For detailed component documentation, see specific architecture pages.</p>"},{"location":"architecture/services/","title":"Service Layer Documentation","text":"<p>Generated on: 2025-06-22 23:28:53</p>"},{"location":"architecture/services/#service-architecture","title":"Service Architecture","text":"<p>Service Count</p> <p>Found 68 services in the codebase.</p>"},{"location":"architecture/services/#integration-services","title":"Integration Services","text":""},{"location":"architecture/services/#calcomeventsyncservice","title":"CalcomEventSyncService","text":"<p>Public Methods:</p> <ul> <li><code>syncAllEventTypes()</code></li> </ul> <p>Synchronisiert alle Event-Types aus Cal.com - <code>linkStaffToEventTypes()</code></p> <p>Verkn\u00fcpft Mitarbeiter mit Event-Types basierend auf Cal.com Daten</p>"},{"location":"architecture/services/#calcomeventtypeimportservice","title":"CalcomEventTypeImportService","text":"<p>Public Methods:</p> <ul> <li><code>importEventTypes(): array</code></li> <li><code>getEventTypeById($eventTypeId): ?array</code></li> </ul>"},{"location":"architecture/services/#calcomeventtypesyncservice","title":"CalcomEventTypeSyncService","text":"<p>Public Methods:</p> <ul> <li><code>validateApiKey($apiKey): array</code></li> <li><code>fetchEventTypes($apiKey, $useCache = false): array</code></li> <li><code>checkWebhookStatus($eventTypeId, $apiKey): bool</code></li> <li><code>clearCache($apiKey): void</code></li> <li><code>debugApiCall($apiKey): array</code></li> </ul>"},{"location":"architecture/services/#calcomimportservice","title":"CalcomImportService","text":"<p>Public Methods:</p> <ul> <li><code>importEventTypes()</code></li> <li><code>resolveDuplicate($eventTypeId, $action = \"keep_local\")</code></li> </ul>"},{"location":"architecture/services/#calcommigrationservice","title":"CalcomMigrationService","text":"<p>Service to handle gradual migration from Cal.com V1 to V2 API This service provides a unified interface that can switch between V1 and V2 implementations based on configuration or feature flags.</p> <p>Public Methods:</p> <ul> <li><code>getEventTypes(?string $teamSlug = null)</code></li> </ul> <p>Get event types with migration support - <code>getAvailableSlots(int $eventTypeId, string $startDate, string $endDate, string $timezone = \"Europe\\/Berlin\")</code></p> <p>Get available slots with migration support - <code>bookAppointment(int $eventTypeId, string $startTime, ?string $endTime = null, array $customerData = [], ?string $notes = null, array $metadata = [])</code></p> <p>Create booking with migration support - <code>cancelBooking(string $bookingId, ?string $reason = null)</code></p> <p>Cancel booking with migration support - <code>getBooking(string $bookingId)</code></p> <p>Get booking by ID with migration support - <code>enableV2ForMethod(string $method, int $ttl = 3600): void</code></p> <p>Enable V2 for specific method (for gradual rollout) - <code>disableV2ForMethod(string $method): void</code></p> <p>Disable V2 for specific method (for rollback) - <code>getMigrationStatus(): array</code></p> <p>Get migration status</p>"},{"location":"architecture/services/#calcomservice","title":"CalcomService","text":"<p>Public Methods:</p> <ul> <li><code>setApiKey(string $apiKey): self</code></li> </ul> <p>Set API key (for dynamic configuration) - <code>checkAvailability($eventTypeId, $dateFrom, $dateTo)</code> - <code>bookAppointment($eventTypeId, $startTime, $endTime, $customerData, $notes = null)</code> - <code>getEventTypes($companyId = null)</code></p>"},{"location":"architecture/services/#calcomservicev1legacy","title":"CalcomServiceV1Legacy","text":"<p>Public Methods:</p> <ul> <li><code>checkAvailability($eventTypeId, $dateFrom, $dateTo)</code></li> <li><code>bookAppointment($eventTypeId, $startTime, $endTime, $customerData, $notes = null)</code></li> <li><code>getEventTypes()</code></li> <li><code>getBookings($params = [])</code></li> <li><code>cancelBooking($bookingId, $reason = null)</code></li> </ul>"},{"location":"architecture/services/#calcomsyncservice","title":"CalcomSyncService","text":"<p>Public Methods:</p> <ul> <li><code>syncEventTypesForCompany($companyId)</code></li> </ul> <p>Synchronisiere Event-Types f\u00fcr ein Unternehmen - <code>syncTeamMembers($companyId)</code></p> <p>Synchronisiere Team-Mitglieder f\u00fcr ein Unternehmen - <code>checkAvailability($eventTypeId, $dateFrom, $dateTo, $staffId = null)</code></p> <p>Pr\u00fcfe Verf\u00fcgbarkeit f\u00fcr einen Event-Type - <code>invalidateEventTypeCache($eventTypeId)</code></p> <p>Cache f\u00fcr einen Event-Type invalidieren - <code>invalidateCompanyCache($companyId)</code></p> <p>Cache f\u00fcr alle Event-Types einer Company invalidieren</p>"},{"location":"architecture/services/#calcomv2migrationservice","title":"CalcomV2MigrationService","text":"<p>Cal.com V2 Migration Service This service provides v2 API compatibility while maintaining backward compatibility with existing v1 implementations.</p> <p>Public Methods:</p> <ul> <li><code>getEventTypes(string $apiKey): ?array</code></li> </ul> <p>Fetch event types using v2 API - <code>checkAvailability(string $apiKey, int $eventTypeId, string $startDate, string $endDate, ?string $timezone = null): ?array</code></p> <p>Check availability using v2 API - <code>createBooking(string $apiKey, array $bookingData): ?array</code></p> <p>Create a booking using v2 API - <code>testConnection(string $apiKey): array</code></p> <p>Test API connection and permissions</p>"},{"location":"architecture/services/#calcomv2service","title":"CalcomV2Service","text":"<p>Public Methods:</p> <ul> <li><code>getMe()</code></li> </ul> <p>Get current user info (v2) - <code>getUsers()</code></p> <p>V1 API f\u00fcr Users nutzen - <code>getEventTypes()</code></p> <p>V1 API f\u00fcr Event-Types nutzen - <code>getEventTypeDetails($eventTypeId)</code></p> <p>Get detailed information for a specific event type - <code>checkAvailability($eventTypeId, $date, $timezone = \"Europe\\/Berlin\")</code></p> <p>V2 API f\u00fcr Verf\u00fcgbarkeiten - mit korrektem Slot-Flattening - <code>bookAppointment($eventTypeId, $startTime, $endTime, $customerData, $notes = null)</code></p> <p>V1 API f\u00fcr Buchungen (wie im CalcomService) - <code>getBookings($params = [])</code></p> <p>Hole alle Bookings mit Paginierung - <code>getBooking($bookingId)</code></p> <p>Hole ein einzelnes Booking - <code>getSchedules()</code></p> <p>Get all schedules - Note: V2 doesn't have schedules endpoint, use V1 - <code>getTeams()</code></p> <p>Get teams (v2) - <code>getTeamEventTypes($teamId)</code></p> <p>Get team event types (v2) - <code>getWebhooks()</code></p> <p>Get webhooks (v2) - <code>createWebhook($subscriberUrl, $triggers = [\"BOOKING_CREATED\",\"BOOKING_CANCELLED\",\"BOOKING_RESCHEDULED\"])</code></p> <p>Create webhook (v2) - <code>cancelBooking($bookingId, $reason = null)</code></p> <p>Cancel booking (v2) - <code>rescheduleBooking($bookingId, $start, $reason = null)</code></p> <p>Reschedule booking (v2) - <code>getSlots($eventTypeId, $startDate, $endDate, $timeZone = \"Europe\\/Berlin\")</code></p> <p>Get available time slots for an event type   Uses V2 API - <code>updateBooking($bookingId, array $updateData)</code></p> <p>Update an existing booking</p>"},{"location":"architecture/services/#retellagentservice","title":"RetellAgentService","text":"<p>Public Methods:</p> <ul> <li><code>getAgentDetails($agentId)</code></li> <li><code>getAgentStatistics($agentId, $days = 7)</code></li> <li><code>listAgents()</code></li> <li><code>validateAgentConfiguration($agentId)</code></li> </ul>"},{"location":"architecture/services/#retellservice","title":"RetellService","text":"<p>Public Methods:</p> <ul> <li><code>getAgents()</code></li> </ul> <p>Alle Agenten abrufen - <code>getAgent($agentId)</code></p> <p>Einzelnen Agenten abrufen - <code>updateAgent($agentId, array $data)</code></p> <p>Update agent metadata - <code>clearCache()</code></p> <p>Cache leeren - <code>buildInboundResponse($agentId, $fromNumber = null, $dynamicVariables = [])</code></p> <p>Build response for inbound calls with dynamic variables</p>"},{"location":"architecture/services/#retellv2service","title":"RetellV2Service","text":"<p>Public Methods:</p> <ul> <li><code>createPhoneCall(array $payload): array</code></li> </ul> <p>Einen Anruf starten.    Erforderlich   : from_number  (+E.164)    Entweder ODER  : to_number    (+E.164)  oder  agent_id - <code>createAgent(array $config): array</code></p> <p>Create a new agent - <code>updateAgent(string $agentId, array $config): array</code></p> <p>Update existing agent - <code>getAgent(string $agentId): ?array</code></p> <p>Get agent details - <code>listAgents(): array</code></p> <p>List all agents - <code>deleteAgent(string $agentId): bool</code></p> <p>Delete an agent - <code>updatePhoneNumber(string $phoneNumber, array $config): array</code></p> <p>Update phone number configuration - <code>getCall(string $callId): ?array</code></p> <p>Get call details - <code>listCalls(int $limit = 50): array</code></p> <p>List recent calls - <code>listPhoneNumbers(): array</code></p> <p>List all phone numbers - <code>getPhoneNumber(string $phoneNumberId): ?array</code></p> <p>Get phone number details - <code>getAgentPrompt(string $agentId): ?string</code></p> <p>Get agent prompt only</p>"},{"location":"architecture/services/#stripeinvoiceservice","title":"StripeInvoiceService","text":"<p>Public Methods:</p> <ul> <li><code>ensureStripeCustomer(App\\Models\\Company $company): ?string</code></li> </ul> <p>Create or update Stripe customer for a company. - <code>createInvoiceForBillingPeriod(App\\Models\\BillingPeriod $billingPeriod): ?App\\Models\\Invoice</code></p> <p>Create invoice for a billing period. - <code>processWebhook(array $event): void</code></p> <p>Process Stripe webhook for invoice events. - <code>createManualInvoice(App\\Models\\Company $company, array $items, ?int $branchId = null): ?App\\Models\\Invoice</code></p> <p>Create manual invoice for additional services.</p>"},{"location":"architecture/services/#business-services","title":"Business Services","text":""},{"location":"architecture/services/#appointmentbookingservice","title":"AppointmentBookingService","text":"<p>Public Methods:</p> <ul> <li><code>bookFromPhoneCall($callOrData, ?array $appointmentData = null): array</code></li> </ul> <p>Complete phone-to-appointment booking flow   Supports both old format and new collect_appointment_data format - <code>cleanupExpiredLocks(): int</code></p> <p>Clean up expired locks (delegates to TimeSlotLockManager) - <code>extendLock(string $lockToken, int $additionalMinutes = 5): bool</code></p> <p>Extend an existing lock (useful for long-running operations) - <code>isSlotLocked($staff, $startTime, $endTime): bool</code></p> <p>Check if a time slot is currently locked</p>"},{"location":"architecture/services/#appointmentservice","title":"AppointmentService","text":"<p>Public Methods:</p> <ul> <li><code>create(array $data): App\\Models\\Appointment</code></li> </ul> <p>Create new appointment - <code>update(int $appointmentId, array $data): App\\Models\\Appointment</code></p> <p>Update appointment - <code>cancel(int $appointmentId, ?string $reason = null): bool</code></p> <p>Cancel appointment - <code>checkAvailability(int $staffId, $startTime, $endTime, ?int $excludeAppointmentId = null): bool</code></p> <p>Check availability - <code>getAvailableSlots(int $staffId, Carbon\\Carbon $date, int $duration = 30): array</code></p> <p>Get available time slots - <code>complete(int $appointmentId, array $data = []): bool</code></p> <p>Complete appointment - <code>markAsNoShow(int $appointmentId): bool</code></p> <p>Mark as no-show - <code>getStatistics(Carbon\\Carbon $startDate, Carbon\\Carbon $endDate): array</code></p> <p>Get appointment statistics</p>"},{"location":"architecture/services/#customerportalservice","title":"CustomerPortalService","text":"<p>Public Methods:</p> <ul> <li><code>enablePortalAccess(App\\Models\\CustomerAuth $customer, ?string $password = null): bool</code></li> </ul> <p>Enable portal access for a customer. - <code>disablePortalAccess(App\\Models\\CustomerAuth $customer): bool</code></p> <p>Disable portal access for a customer. - <code>sendMagicLink(App\\Models\\CustomerAuth $customer, string $token): bool</code></p> <p>Send magic link to customer. - <code>getPortalUrl(App\\Models\\Company $company): string</code></p> <p>Generate portal URL for company. - <code>canAccessPortal(App\\Models\\CustomerAuth $customer): bool</code></p> <p>Check if customer can access portal. - <code>getPortalFeatures(App\\Models\\Company $company): array</code></p> <p>Get portal features for company. - <code>getCustomerStats(App\\Models\\CustomerAuth $customer): array</code></p> <p>Get portal statistics for customer. - <code>bulkEnablePortalAccess(App\\Models\\Company $company, array $customerIds = []): array</code></p> <p>Bulk enable portal access.</p>"},{"location":"architecture/services/#customerservice","title":"CustomerService","text":"<p>Public Methods:</p> <ul> <li><code>findByPhone(string $phone, int $companyId): ?App\\Models\\Customer</code></li> </ul> <p>Find customer by phone with caching - <code>create(array $data): App\\Models\\Customer</code></p> <p>Create new customer - <code>update(int $customerId, array $data): App\\Models\\Customer</code></p> <p>Update customer - <code>mergeDuplicates(int $primaryId, int $duplicateId): App\\Models\\Customer</code></p> <p>Merge duplicate customers - <code>getHistory(int $customerId): array</code></p> <p>Get customer history - <code>findPotentialDuplicates(int $customerId): Illuminate\\Support\\Collection</code></p> <p>Search for potential duplicates - <code>block(int $customerId, string $reason): void</code></p> <p>Block customer - <code>unblock(int $customerId): void</code></p> <p>Unblock customer - <code>addTag(int $customerId, string $tag): void</code></p> <p>Add tag to customer - <code>removeTag(int $customerId, string $tag): void</code></p> <p>Remove tag from customer - <code>getByTag(string $tag): Illuminate\\Support\\Collection</code></p> <p>Get customers by tag - <code>export(int $customerId): array</code></p> <p>Export customer data</p>"},{"location":"architecture/services/#smartbookingservice","title":"SmartBookingService","text":"<p>SmartBookingService - Der zentrale Service f\u00fcr alle Terminbuchungen Konsolidiert die Funktionalit\u00e4t von: - AppointmentService - BookingService - Teile von CallService</p> <p>Public Methods:</p> <ul> <li><code>handleIncomingCall(array $webhookData): ?App\\Models\\Appointment</code></li> </ul> <p>Hauptmethode: Verarbeitet einen eingehenden Anruf und bucht einen Termin</p>"},{"location":"architecture/services/#other-services","title":"Other Services","text":""},{"location":"architecture/services/#anomalydetectionservice","title":"AnomalyDetectionService","text":"<p>Public Methods:</p> <ul> <li><code>detectSystemAnomalies(): array</code></li> </ul> <p>Detect anomalies across the entire system - <code>getSeverityScore(string $severity): int</code></p> <p>Get severity score for prioritization - <code>getSystemRecommendations(array $anomalies): array</code></p> <p>Get recommendations based on current anomalies</p>"},{"location":"architecture/services/#availabilitychecker","title":"AvailabilityChecker","text":"<p>Public Methods:</p> <ul> <li><code>checkAvailabilityFromRequest($request)</code></li> </ul> <p>Parse eine Anfrage und pr\u00fcfe Verf\u00fcgbarkeiten intelligent - <code>checkAvailability($eventTypeId, $dateFrom, $dateTo, $staffId = null, $branchId = null)</code></p> <p>Pr\u00fcfe Verf\u00fcgbarkeit mit allen Business-Regeln - <code>findNextAvailableSlot($eventTypeId, $staffId = null, $branchId = null)</code></p> <p>Finde n\u00e4chsten verf\u00fcgbaren Termin</p>"},{"location":"architecture/services/#availabilityservice","title":"AvailabilityService","text":"<p>Public Methods:</p> <ul> <li><code>checkRealTimeAvailability(string $staffId, int $eventTypeId, Carbon\\Carbon $date): array</code></li> </ul> <p>Pr\u00fcfe Echtzeit-Verf\u00fcgbarkeit f\u00fcr einen Mitarbeiter - <code>checkMultipleStaffAvailability(array $staffIds, int $eventTypeId, Carbon\\Carbon $date): Illuminate\\Support\\Collection</code></p> <p>Pr\u00fcfe Verf\u00fcgbarkeit f\u00fcr mehrere Mitarbeiter gleichzeitig - <code>getNextAvailableSlot(string $staffId, int $eventTypeId, Carbon\\Carbon $fromDate): ?array</code></p> <p>Finde n\u00e4chsten verf\u00fcgbaren Slot</p>"},{"location":"architecture/services/#cacheservice","title":"CacheService","text":"<p>Public Methods:</p> <ul> <li><code>getEventTypes(int $companyId, callable $callback)</code></li> </ul> <p>Get Cal.com event types with caching - <code>getCustomerByPhone(string $phone, int $companyId, callable $callback)</code></p> <p>Get customer by phone with caching - <code>getAvailability(int $staffId, string $date, callable $callback)</code></p> <p>Get appointment availability with caching - <code>getCompanySettings(int $companyId, callable $callback)</code></p> <p>Get company settings with caching - <code>getStaffSchedules(int $staffId, callable $callback)</code></p> <p>Get staff schedules with caching - <code>getServiceLists(int $companyId, ?int $branchId, callable $callback)</code></p> <p>Get service lists with caching - <code>clearCompanyCache(int $companyId): void</code></p> <p>Clear cache by company - <code>clearStaffCache(int $staffId): void</code></p> <p>Clear cache by staff - <code>clearCustomerCache(string $identifier): void</code></p> <p>Clear cache by customer - <code>clearAppointmentsCache(string $date): void</code></p> <p>Clear appointments cache by date - <code>clearEventTypesCache(): void</code></p> <p>Clear all event types cache</p>"},{"location":"architecture/services/#cachewarmer","title":"CacheWarmer","text":"<p>Public Methods:</p> <ul> <li><code>warmInvoiceCaches(): void</code></li> </ul> <p>Warm invoice-related caches - <code>isUsageBasedInvoice(App\\Models\\Invoice $invoice): bool</code></p> <p>Check if an invoice is usage-based using cache</p>"},{"location":"architecture/services/#calservice","title":"CalService","text":"<p>Public Methods:</p> <ul> <li><code>getEventTypes()</code></li> <li><code>createBooking($data)</code></li> </ul>"},{"location":"architecture/services/#calldatarefresher","title":"CallDataRefresher","text":"<p>Public Methods:</p> <ul> <li><code>refresh(App\\Models\\Call $call): bool</code></li> </ul>"},{"location":"architecture/services/#callservice","title":"CallService","text":"<p>Public Methods:</p> <ul> <li><code>processWebhook(array $webhookData): App\\Models\\Call</code></li> </ul> <p>Process incoming call webhook - <code>getStatistics(Carbon\\Carbon $startDate, Carbon\\Carbon $endDate): array</code></p> <p>Get call statistics - <code>refreshCallData(int $callId): bool</code></p> <p>Refresh call data from Retell - <code>markAsFailed(int $callId, string $reason): void</code></p> <p>Mark call as failed</p>"},{"location":"architecture/services/#callbackservice","title":"CallbackService","text":"<p>Public Methods:</p> <ul> <li><code>createFromFailedBooking(App\\Models\\Call $call, string $reason, array $bookingData, ?string $errorDetails = null): App\\Models\\CallbackRequest</code></li> </ul> <p>Create callback request from failed booking - <code>sendDailySummary(App\\Models\\Company $company, string $email): void</code></p> <p>Send daily summary email - <code>autoCloseOldCallbacks(): int</code></p> <p>Auto-close old callbacks - <code>getStatistics(App\\Models\\Company $company, ?Carbon\\Carbon $from = null, ?Carbon\\Carbon $to = null): array</code></p> <p>Get callback statistics for company</p>"},{"location":"architecture/services/#companyservice","title":"CompanyService","text":"<p>Public Methods:</p> <ul> <li><code>getSettings(int $companyId): ?array</code></li> </ul> <p>Get company settings with caching - <code>updateSettings(int $companyId, array $settings): bool</code></p> <p>Update company settings - <code>updateConfiguration(int $companyId, array $data): bool</code></p> <p>Update company configuration - <code>getCompany(int $companyId): ?App\\Models\\Company</code></p> <p>Get company by ID with caching - <code>isActive(int $companyId): bool</code></p> <p>Check if company is active - <code>isInTrial(int $companyId): bool</code></p> <p>Check if company is in trial - <code>getNotificationEmails(int $companyId): array</code></p> <p>Get company notification emails - <code>getCalendarConfig(int $companyId): array</code></p> <p>Get company calendar configuration</p>"},{"location":"architecture/services/#conflictdetectionservice","title":"ConflictDetectionService","text":"<p>Public Methods:</p> <ul> <li><code>detectConflicts(string $staffId, Carbon\\Carbon $startTime, Carbon\\Carbon $endTime, ?int $excludeAppointmentId = null): array</code></li> </ul> <p>Erkenne Konflikte f\u00fcr eine neue Buchung - <code>batchConflictCheck(array $appointments): array</code></p> <p>Batch-Konfliktpr\u00fcfung f\u00fcr mehrere Termine</p>"},{"location":"architecture/services/#cookieconsentservice","title":"CookieConsentService","text":"<p>Public Methods:</p> <ul> <li><code>hasConsent(?string $category = null): bool</code></li> </ul> <p>Check if user has given consent - <code>getCurrentConsent(): ?array</code></p> <p>Get current consent status - <code>saveConsent(array $preferences): App\\Models\\CookieConsent</code></p> <p>Save consent preferences - <code>withdrawConsent(): void</code></p> <p>Withdraw consent - <code>getCookieCategories(): array</code></p> <p>Get cookie categories with descriptions - <code>shouldShowBanner(): bool</code></p> <p>Check if cookie banner should be shown - <code>getConsentStatistics(int $companyId): array</code></p> <p>Get consent statistics for a company</p>"},{"location":"architecture/services/#currencyconverter","title":"CurrencyConverter","text":"<p>Public Methods:</p> <ul> <li><code>centsToEuros(float $cents): float</code></li> </ul> <p>Convert cents to euros - <code>dollarsToEuros(float $dollars): float</code></p> <p>Convert dollars to euros - <code>getExchangeRate($date = null): float</code></p> <p>Get current exchange rate (cached) - <code>convertRetellCostToEuros($costData): float</code></p> <p>Convert Retell cost structure to euros - <code>formatCostBreakdown(array $costBreakdown): array</code></p> <p>Format cost breakdown for storage   Konvertiert alle Cent-Werte zu Euro-Werten</p>"},{"location":"architecture/services/#dashboardrouteresolver","title":"DashboardRouteResolver","text":"<p>Public Methods:</p> <ul> <li><code>resolve(string $slug): ?string</code></li> </ul> <p>Resolve a dashboard route by its slug - <code>getDefault(): string</code></p> <p>Get the default dashboard route - <code>exists(string $slug): bool</code></p> <p>Check if a dashboard exists - <code>getAllDashboards(): array</code></p> <p>Get all available dashboards</p>"},{"location":"architecture/services/#datevexportservice","title":"DatevExportService","text":"<p>Public Methods:</p> <ul> <li><code>exportInvoices(App\\Models\\Company $company, Carbon\\Carbon $startDate, Carbon\\Carbon $endDate, string $format = \"EXTF\"): array</code></li> </ul> <p>Exportiert Rechnungen im DATEV-Format</p>"},{"location":"architecture/services/#eagerloadinganalyzer","title":"EagerLoadingAnalyzer","text":"<p>Public Methods:</p> <ul> <li><code>startAnalysis(): void</code></li> </ul> <p>Start analyzing queries for N+1 problems - <code>stopAnalysis(): array</code></p> <p>Stop analyzing and return results - <code>analyzeModel(string $modelClass): array</code></p> <p>Analyze a specific model for potential N+1 issues</p>"},{"location":"architecture/services/#encryptionservice","title":"EncryptionService","text":"<p>Public Methods:</p> <ul> <li><code>encrypt(?string $value): ?string</code></li> </ul> <p>Encrypt sensitive data - <code>decrypt(?string $value): ?string</code></p> <p>Decrypt sensitive data - <code>isEncrypted(string $value): bool</code></p> <p>Check if a value is encrypted - <code>rotateKey(array $models, array $fields): void</code></p> <p>Rotate encryption key (requires APP_KEY rotation)</p>"},{"location":"architecture/services/#eventtypematchingservice","title":"EventTypeMatchingService","text":"<p>Public Methods:</p> <ul> <li><code>findMatchingEventType(string $serviceRequest, App\\Models\\Branch $branch, ?string $staffName = null, ?array $timePreference = null): ?array</code></li> </ul> <p>Find matching event type based on service request and optional staff preference - <code>createMapping(App\\Models\\Service $service, App\\Models\\CalcomEventType $eventType, ?array $keywords = null, int $priority = 0): void</code></p> <p>Create or update service to event type mapping</p>"},{"location":"architecture/services/#eventtypenameparser","title":"EventTypeNameParser","text":"<p>Public Methods:</p> <ul> <li><code>parseEventTypeName(string $eventTypeName): array</code></li> </ul> <p>Parse einen Event-Type Namen nach dem Schema: \"Filial-Unternehmen-Dienstleistung\" - <code>validateBranchMatch(string $parsedBranchName, App\\Models\\Branch $selectedBranch): bool</code></p> <p>Validiere ob der geparste Filialname zur ausgew\u00e4hlten Filiale passt - <code>generateEventTypeName(App\\Models\\Branch $branch, string $serviceName): string</code></p> <p>Generiere den korrekten Event-Type Namen nach Schema - <code>analyzeEventTypesForImport(array $eventTypes, App\\Models\\Branch $targetBranch): array</code></p> <p>Analysiere eine Liste von Event-Types und schlage Zuordnungen vor - <code>extractServiceName(string $eventTypeName): string</code></p> <p>Extrahiere nur den Service-Namen aus einem vollst\u00e4ndigen Event-Type Namen</p>"},{"location":"architecture/services/#filewatcherservice","title":"FileWatcherService","text":"<p>Public Methods:</p> <ul> <li><code>checkForChanges(): array</code></li> </ul> <p>Check for file changes and re-index if needed - <code>forceReindex(): array</code></p> <p>Force re-index all files - <code>getStatus(): array</code></p> <p>Get watcher status - <code>setLastCheck(): void</code></p> <p>Set last check time</p>"},{"location":"architecture/services/#gdprservice","title":"GdprService","text":"<p>Public Methods:</p> <ul> <li><code>exportCustomerData(App\\Models\\Customer $customer): array</code></li> </ul> <p>Export all customer data in a machine-readable format - <code>createExportFile(App\\Models\\Customer $customer): string</code></p> <p>Create a downloadable export file - <code>deleteCustomerData(App\\Models\\Customer $customer, bool $anonymize = true): void</code></p> <p>Delete all customer data (right to be forgotten)</p>"},{"location":"architecture/services/#healthcheckservice","title":"HealthCheckService","text":"<p>Public Methods:</p> <ul> <li><code>setCompany(App\\Models\\Company $company): self</code></li> </ul> <p>Set the company context - <code>runAll(): App\\Contracts\\HealthReport</code></p> <p>Run all health checks - <code>runCheck(App\\Contracts\\IntegrationHealthCheck $check): App\\Contracts\\HealthCheckResult</code></p> <p>Run a specific health check - <code>runCheckByName(string $name): ?App\\Contracts\\HealthCheckResult</code></p> <p>Run check by name - <code>getCriticalChecks(): array</code></p> <p>Get all critical checks - <code>getChecksByStatus(string $status): array</code></p> <p>Get checks by status - <code>attemptAutoFix(): array</code></p> <p>Attempt auto-fix for all checks with issues - <code>getSuggestedFixes(): array</code></p> <p>Get suggested fixes for all issues - <code>getHealthStatusForBadge(): array</code></p> <p>Get health status for admin badge - <code>clearCache(): void</code></p> <p>Clear all health check caches - <code>getHistory(string $checkName, int $days = 7): Illuminate\\Support\\Collection</code></p> <p>Get historical health check results</p>"},{"location":"architecture/services/#horizonhealth","title":"HorizonHealth","text":"<p>Public Methods:</p> <ul> <li><code>ok(): bool</code></li> </ul> <p>true = queues healthy, false = stalled/offline */</p>"},{"location":"architecture/services/#improvedeventtypenameparser","title":"ImprovedEventTypeNameParser","text":"<p>Public Methods:</p> <ul> <li><code>extractCleanServiceName(string $eventTypeName, ?App\\Models\\Branch $branch = null, ?App\\Models\\Company $company = null): string</code></li> </ul> <p>Extract a clean service name from a marketing-style event type name - <code>analyzeEventTypesForImport(array $eventTypes, App\\Models\\Branch $targetBranch): array</code></p> <p>Improved analyze method that handles marketing-style names better - <code>generateEventTypeName(App\\Models\\Branch $branch, string $serviceName, string $format = \"standard\"): string</code></p> <p>Generate a standardized event type name with optional format - <code>parseEventTypeName(string $eventTypeName): array</code></p> <p>Parse einen Event-Type Namen nach dem Schema: \"Filial-Unternehmen-Dienstleistung\" - <code>validateBranchMatch(string $parsedBranchName, App\\Models\\Branch $selectedBranch): bool</code></p> <p>Validiere ob der geparste Filialname zur ausgew\u00e4hlten Filiale passt - <code>extractServiceName(string $eventTypeName): string</code></p> <p>Extrahiere nur den Service-Namen aus einem vollst\u00e4ndigen Event-Type Namen</p>"},{"location":"architecture/services/#integrationtestservice","title":"IntegrationTestService","text":"<p>Public Methods:</p> <ul> <li><code>createTestBooking(App\\Models\\Branch $branch): array</code></li> </ul> <p>Create a test booking for a branch - <code>testCalcomConnection($apiKey)</code></p> <p>Test Cal.com connection - <code>testRetellConnection($apiKey, $agentId = null)</code></p> <p>Test Retell.ai connection</p>"},{"location":"architecture/services/#invoicecomplianceservice","title":"InvoiceComplianceService","text":"<p>Public Methods:</p> <ul> <li><code>generateCompliantInvoiceNumber(App\\Models\\Company $company): string</code></li> </ul> <p>Generiert eine GoBD-konforme Rechnungsnummer   Format: [Mandantenk\u00fcrzel]-[Jahr]-[Laufende Nr]-[Pr\u00fcfziffer]   Beispiel: ASK-2024-00001-7 - <code>finalizeInvoice(App\\Models\\Invoice $invoice): void</code></p> <p>Finalisiert eine Rechnung (macht sie unver\u00e4nderbar) - <code>archiveInvoice(App\\Models\\Invoice $invoice): void</code></p> <p>Archiviert eine Rechnung GoBD-konform - <code>createAuditLog(App\\Models\\Invoice $invoice, string $action, ?array $changes = null): void</code></p> <p>Erstellt Audit-Log Eintrag - <code>validateInvoiceCompliance(App\\Models\\Invoice $invoice): array</code></p> <p>Validiert Rechnungspflichtangaben nach \u00a714 UStG - <code>createCancellationInvoice(App\\Models\\Invoice $originalInvoice): App\\Models\\Invoice</code></p> <p>Generiert eine Storno-Rechnung - <code>canModifyInvoice(App\\Models\\Invoice $invoice): bool</code></p> <p>Pr\u00fcft ob eine Rechnung ge\u00e4ndert werden darf - <code>generateDatevExport(App\\Models\\Company $company, Carbon\\Carbon $startDate, Carbon\\Carbon $endDate): array</code></p> <p>Generiert DATEV-kompatible Buchungss\u00e4tze</p>"},{"location":"architecture/services/#knowledgebaseservice","title":"KnowledgeBaseService","text":"<p>Public Methods:</p> <ul> <li><code>discoverAndIndexDocuments(array $paths = []): array</code></li> </ul> <p>Discover and index all documentation files - <code>indexFile(string $filePath): ?App\\Models\\KnowledgeDocument</code></p> <p>Index a single documentation file - <code>search(string $query, array $filters = []): Illuminate\\Support\\Collection</code></p> <p>Search documents</p>"},{"location":"architecture/services/#masterservicemanager","title":"MasterServiceManager","text":"<p>Public Methods:</p> <ul> <li><code>getEffectiveServicesForBranch(App\\Models\\Branch $branch): array</code></li> <li><code>deployServiceToBranches(App\\Models\\MasterService $service, array $branchIds): void</code></li> </ul>"},{"location":"architecture/services/#mobiledetector","title":"MobileDetector","text":"<p>Public Methods:</p> <ul> <li><code>setRequest(Illuminate\\Http\\Request $request): self</code></li> <li><code>isMobile(): bool</code></li> <li><code>isTablet(): bool</code></li> <li><code>isDesktop(): bool</code></li> <li><code>getDeviceType(): string</code></li> <li><code>getViewport(): array</code></li> <li><code>getUserAgent(): ?string</code></li> <li><code>isIOS(): bool</code></li> <li><code>isAndroid(): bool</code></li> <li><code>isTouchDevice(): bool</code></li> <li><code>getOS(): string</code></li> <li><code>getBrowser(): string</code></li> <li><code>supportsWebP(): bool</code></li> <li><code>supportsPWA(): bool</code></li> <li><code>getDevicePixelRatio(): float</code></li> </ul>"},{"location":"architecture/services/#navigationservice","title":"NavigationService","text":"<p>Public Methods:</p> <ul> <li><code>getResourceGroup(string $resource): ?string</code></li> </ul> <p>Get navigation group for a resource - <code>getGroupLabel(string $group): string</code></p> <p>Get navigation group label - <code>getGroupSort(string $group): int</code></p> <p>Get navigation group sort order - <code>getGroupIcon(string $group): string</code></p> <p>Get navigation group icon - <code>getResourceSort(string $resource, int $default = 10): int</code></p> <p>Get sort order for a resource within its group - <code>canViewGroup(string $group, $user = null): bool</code></p> <p>Check if user has permission to view a navigation group - <code>getVisibleGroups($user = null): array</code></p> <p>Get all visible groups for a user - <code>getNavigationForResource(string $resourceClass): array</code></p> <p>Get navigation structure for use in Filament resources - <code>registerWithFilament(): void</code></p> <p>Register navigation groups with Filament   Call this in a service provider - <code>getBreadcrumbs(string $resourceClass, array $additionalCrumbs = []): array</code></p> <p>Get breadcrumb structure for a resource - <code>getActionLabel(string $action): string</code></p> <p>Get a consistent label for common actions</p>"},{"location":"architecture/services/#notificationservice","title":"NotificationService","text":"<p>Public Methods:</p> <ul> <li><code>sendAppointmentReminders(): void</code></li> </ul> <p>Sende Terminerinnerungen - <code>sendAppointmentConfirmation(App\\Models\\Appointment $appointment): void</code></p> <p>Sende Terminbest\u00e4tigung</p>"},{"location":"architecture/services/#onboardingservice","title":"OnboardingService","text":"<p>Public Methods:</p> <ul> <li><code>getProgress(App\\Models\\Company $company, App\\Models\\User $user): array</code></li> </ul> <p>Get or create onboarding progress for a company/user - <code>updateProgress(App\\Models\\Company $company, App\\Models\\User $user, string $step, array $data = []): array</code></p> <p>Update onboarding progress - <code>validateStep(App\\Models\\Company $company, string $step): bool</code></p> <p>Validate a specific step - <code>getSampleData(string $step): array</code></p> <p>Get sample data for a step - <code>getChecklist(App\\Models\\Company $company, string $type = \"getting_started\"): array</code></p> <p>Get checklist for a company - <code>updateChecklistItem(App\\Models\\Company $company, string $type, string $itemKey, bool $completed): void</code></p> <p>Update checklist item status - <code>awardAchievement(App\\Models\\Company $company, string $achievementKey): void</code></p> <p>Award achievement to company - <code>getAchievements(App\\Models\\Company $company): Illuminate\\Support\\Collection</code></p> <p>Get company achievements - <code>getTutorialsForPage(string $pageRoute): Illuminate\\Support\\Collection</code></p> <p>Get available tutorials for a page - <code>markTutorialProgress(App\\Models\\User $user, int $tutorialId, bool $completed = false): void</code></p> <p>Mark tutorial as viewed/completed - <code>getSteps(): array</code></p> <p>Get all defined steps - <code>getReadinessScore(App\\Models\\Company $company): int</code></p> <p>Calculate overall readiness score</p>"},{"location":"architecture/services/#phonenumberresolver","title":"PhoneNumberResolver","text":"<p>Public Methods:</p> <ul> <li><code>resolve(string $phoneNumber): array</code></li> </ul> <p>Simple resolve method for MCPContextResolver compatibility - <code>resolveFromWebhook(array $webhookData): array</code></p> <p>Resolve branch and agent from phone number or metadata   Enhanced for multi-location support - <code>normalize(string $phoneNumber): string</code></p> <p>Public method to normalize phone numbers</p>"},{"location":"architecture/services/#pricingservice","title":"PricingService","text":"<p>Public Methods:</p> <ul> <li><code>calculateCallPrice(App\\Models\\Call $call): array</code></li> </ul> <p>Calculate the customer price for a call - <code>getCurrentMonthMinutes($companyId, $branchId = null): float</code></p> <p>Get total minutes used in current month - <code>calculateBillingPeriod($companyId, Carbon\\Carbon $startDate, Carbon\\Carbon $endDate)</code></p> <p>Calculate billing for a period - <code>saveBillingPeriod(array $billingData): App\\Models\\BillingPeriod</code></p> <p>Create or update billing period record</p>"},{"location":"architecture/services/#prompttemplateservice","title":"PromptTemplateService","text":"<p>Public Methods:</p> <ul> <li><code>getAvailableTemplates(): array</code></li> </ul> <p>Get available industry templates - <code>renderPrompt(App\\Models\\Branch $branch, string $industry = \"generic\", array $additionalData = []): string</code></p> <p>Render a prompt template for a branch - <code>generateRetellPrompt(App\\Models\\Branch $branch, array $config = []): array</code></p> <p>Generate prompt for Retell agent</p>"},{"location":"architecture/services/#querycache","title":"QueryCache","text":"<p>Public Methods:</p> <ul> <li><code>getAppointmentStats($companyId, $dateRange = \"month\")</code></li> </ul> <p>Cache appointment statistics - <code>getCustomerMetrics($companyId)</code></p> <p>Cache customer metrics - <code>getCallStats($companyId, $days = 30)</code></p> <p>Cache call statistics - <code>getStaffPerformance($companyId, $staffId = null, $days = 30)</code></p> <p>Cache staff performance metrics - <code>getBranchComparison($companyId, $dateRange = \"month\")</code></p> <p>Cache branch comparison data - <code>clearCompanyCache($companyId)</code></p> <p>Clear cache for a specific company - <code>clearAllCaches()</code></p> <p>Clear all query caches - <code>getCacheStats()</code></p> <p>Get cache statistics</p>"},{"location":"architecture/services/#querymonitor","title":"QueryMonitor","text":"<p>Public Methods:</p> <ul> <li><code>enable(): void</code></li> </ul> <p>Enable query monitoring - <code>getStats(): array</code></p> <p>Get query statistics - <code>getRecentQueries(int $limit = 50): array</code></p> <p>Get recent queries - <code>getSlowQueries(int $limit = 50): array</code></p> <p>Get slow queries - <code>clearStats(): void</code></p> <p>Clear query statistics - <code>analyzePatterns(): array</code></p> <p>Analyze query patterns - <code>setSlowQueryThreshold(int $milliseconds): void</code></p> <p>Set slow query threshold</p>"},{"location":"architecture/services/#queryoptimizer","title":"QueryOptimizer","text":"<p>Public Methods:</p> <ul> <li><code>optimizeEagerLoading(Illuminate\\Database\\Eloquent\\Builder $query, array $relationships): Illuminate\\Database\\Eloquent\\Builder</code></li> </ul> <p>Eagerly load relationships to prevent N+1 queries - <code>applyIndexHints(Illuminate\\Database\\Eloquent\\Builder $query, string $table, array $indexes): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Apply index hints for better query performance - <code>optimizeAppointmentQuery(Illuminate\\Database\\Eloquent\\Builder $query): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Optimize appointment queries - <code>optimizeCustomerQuery(Illuminate\\Database\\Eloquent\\Builder $query): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Optimize customer queries - <code>optimizeCallQuery(Illuminate\\Database\\Eloquent\\Builder $query): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Optimize call queries - <code>optimizeStaffQuery(Illuminate\\Database\\Eloquent\\Builder $query): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Optimize staff queries - <code>cacheAggregation(string $key, Closure $callback, int $ttl = 300)</code></p> <p>Cache complex aggregation queries - <code>analyzeQuery(Illuminate\\Database\\Eloquent\\Builder $query): array</code></p> <p>Analyze query performance - <code>getQueryStats(): array</code></p> <p>Get query statistics - <code>optimizePagination(Illuminate\\Database\\Eloquent\\Builder $query, int $perPage = 15): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Optimize pagination queries - <code>forceIndex(Illuminate\\Database\\Eloquent\\Builder $query, string $table, string $index): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Force use of specific index - <code>addQueryHint(Illuminate\\Database\\Eloquent\\Builder $query, string $hint): Illuminate\\Database\\Eloquent\\Builder</code></p> <p>Add query hints</p>"},{"location":"architecture/services/#screenshotauthservice","title":"ScreenshotAuthService","text":"<p>Public Methods:</p> <ul> <li><code>getAuthCookies(): array</code></li> </ul> <p>Get authentication cookies for screenshot service - <code>authenticateViaHttp(string $email, string $password): ?array</code></p> <p>Authenticate via HTTP request (for testing)</p>"},{"location":"architecture/services/#screenshotservice","title":"ScreenshotService","text":"<p>Public Methods:</p> <ul> <li><code>capture(string $urlOrRoute, array $options = []): string</code></li> </ul> <p>Capture a screenshot of a given URL or route - <code>captureSync(string $url, string $savePath, array $options = []): string</code></p> <p>Capture screenshot synchronously - <code>captureBatch(array $routes, array $options = []): array</code></p> <p>Capture multiple screenshots in batch - <code>getLatest(string $route): ?string</code></p> <p>Get the latest screenshot for a route - <code>cleanup(int $daysToKeep = 7): int</code></p> <p>Clean up old screenshots</p>"},{"location":"architecture/services/#serviceservice","title":"ServiceService","text":"<p>Public Methods:</p> <ul> <li><code>getServicesList(int $companyId, ?int $branchId = null): Illuminate\\Support\\Collection</code></li> </ul> <p>Get services list with caching - <code>getServicesByCategory(int $companyId, string $category): Illuminate\\Support\\Collection</code></p> <p>Get services by category - <code>getOnlineBookableServices(int $companyId, ?int $branchId = null): Illuminate\\Support\\Collection</code></p> <p>Get online bookable services - <code>getService(int $serviceId): ?App\\Models\\Service</code></p> <p>Get service by ID with caching - <code>create(array $data): App\\Models\\Service</code></p> <p>Create new service - <code>update(int $serviceId, array $data): bool</code></p> <p>Update service - <code>delete(int $serviceId): bool</code></p> <p>Delete service - <code>getServicesGroupedByCategory(int $companyId, ?int $branchId = null): array</code></p> <p>Get services grouped by category - <code>getServiceStatistics(int $serviceId): array</code></p> <p>Get service statistics</p>"},{"location":"architecture/services/#smarteventtypenameparser","title":"SmartEventTypeNameParser","text":"<p>Public Methods:</p> <ul> <li><code>extractCleanServiceName(string $eventTypeName): string</code></li> </ul> <p>Extrahiere einen sauberen Service-Namen aus Marketing-Text - <code>generateNameFormats(App\\Models\\Branch $branch, string $serviceName): array</code></p> <p>Generiere verschiedene Namensformate f\u00fcr den Import - <code>analyzeEventTypesForImport(array $eventTypes, App\\Models\\Branch $targetBranch): array</code></p> <p>Analysiere Event-Types f\u00fcr Import mit intelligenter Namensgebung</p>"},{"location":"architecture/services/#smartmigrationservice","title":"SmartMigrationService","text":"<p>Public Methods:</p> <ul> <li><code>analyzeMigration(string $migrationPath): array</code></li> </ul> <p>Analyze migration impact before execution - <code>executeSafeMigration(string $migrationClass, array $options = []): bool</code></p> <p>Execute migration with zero downtime strategies - <code>performOnlineSchemaChange(string $table, callable $schemaChange): bool</code></p> <p>Perform online schema change for large tables</p>"},{"location":"architecture/services/#staffservice","title":"StaffService","text":"<p>Public Methods:</p> <ul> <li><code>getSchedule(int $staffId): array</code></li> </ul> <p>Get staff schedules with caching - <code>getWeeklySchedule(int $staffId, ?Carbon\\Carbon $weekStart = null): array</code></p> <p>Get weekly schedule for staff - <code>updateWorkingHours(int $staffId, array $workingHours): bool</code></p> <p>Update staff working hours - <code>getCompanyStaff(int $companyId): Illuminate\\Support\\Collection</code></p> <p>Get all staff members for a company - <code>getAvailableStaff(int $serviceId, int $branchId, Carbon\\Carbon $date): Illuminate\\Support\\Collection</code></p> <p>Get available staff for a specific service and branch</p>"},{"location":"architecture/services/#taxservice","title":"TaxService","text":"<p>Public Methods:</p> <ul> <li><code>getDeterminedTaxRate(App\\Models\\Company $company, ?string $taxType = \"standard\"): array</code></li> </ul> <p>Ermittelt den anzuwendenden Steuersatz basierend auf Unternehmenskonfiguration - <code>getOrCreateTaxRate(App\\Models\\Company $company, string $name, float $rate)</code></p> <p>Erstellt oder holt einen Steuersatz - <code>checkSmallBusinessThreshold(App\\Models\\Company $company): array</code></p> <p>\u00dcberpr\u00fcft und aktualisiert Kleinunternehmer-Status - <code>validateVatId(string $vatId, string $countryCode = \"DE\"): array</code></p> <p>Validiert eine USt-ID \u00fcber VIES - <code>shouldApplyReverseCharge(App\\Models\\Company $company, ?string $customerVatId, string $customerCountry): bool</code></p> <p>Pr\u00fcft ob Reverse-Charge anzuwenden ist - <code>generateTaxNote(App\\Models\\Company $company, App\\Models\\Invoice $invoice): ?string</code></p> <p>Generiert Steuerhinweis f\u00fcr Rechnung - <code>calculateInvoiceTaxes(App\\Models\\Invoice $invoice): array</code></p> <p>Berechnet Steuern f\u00fcr eine Rechnung - <code>syncStripeEUtaxRate(App\\Models\\Company $company, float $rate, string $name): ?string</code></p> <p>Erstellt Stripe Tax Rate</p>"},{"location":"architecture/services/#tutorialservice","title":"TutorialService","text":"<p>Public Methods:</p> <ul> <li><code>initializeDefaultTutorials(): void</code></li> </ul> <p>Initialize default tutorials - <code>getTutorialsForCurrentPage(string $currentRoute, App\\Models\\User $user): Illuminate\\Support\\Collection</code></p> <p>Get tutorials for current page - <code>markAsViewed(App\\Models\\User $user, int $tutorialId): void</code></p> <p>Mark tutorial as viewed - <code>markAsCompleted(App\\Models\\User $user, int $tutorialId): void</code></p> <p>Mark tutorial as completed - <code>getUserProgress(App\\Models\\User $user): array</code></p> <p>Get user's tutorial progress summary - <code>resetProgress(App\\Models\\User $user): void</code></p> <p>Reset user's tutorial progress - <code>getNextTutorial(App\\Models\\User $user, string $currentRoute): ?object</code></p> <p>Get next unviewed tutorial for user</p>"},{"location":"architecture/services/#validationservice","title":"ValidationService","text":"<p>Public Methods:</p> <ul> <li><code>validateBranch(App\\Models\\Branch $branch): array</code></li> </ul>"},{"location":"architecture/services/#webhookprocessor","title":"WebhookProcessor","text":"<p>Public Methods:</p> <ul> <li><code>process(string $provider, array $payload, array $headers = [], ?string $correlationId = null): array</code></li> </ul> <p>Process an incoming webhook request - <code>retry(int $webhookEventId): array</code></p> <p>Retry a failed webhook</p>"},{"location":"baseline-2025-06-22/SUMMARY/","title":"AskProAI Documentation Baseline Summary","text":"<p>Generated on: So 22. Jun 23:22:51 CEST 2025 PHP Version: PHP 8.3.22 (cli) (built: Jun  9 2025 13:58:34) (NTS) Laravel Version: Laravel Framework 11.45.1</p> <p>Statistics: - Models: 85 - Services: 207 - Controllers: 115 - Migrations: 267 - Routes: routes/api-mcp.php:5 routes/api.php:183 routes/api_retell_debug.php:1 routes/auth.php:17 routes/console.php:0 routes/debug.php:1 routes/help-center.php:8 routes/knowledge.php:7 routes/portal.php:37 routes/session-test.php:1 routes/test-auth.php:2 routes/test-errors.php:2 routes/test-login.php:2 routes/webhooks.php:6 routes/web.php:33</p> <p>Key Findings: - Multiple service versions detected (CalcomService, CalcomV2Service, etc.) - MCP architecture with 5 specialized servers - Hidden features: Knowledge Base, WhatsApp Integration, Customer Portal - Security concerns: Debug routes and test endpoints in production</p>"},{"location":"configuration/reference/","title":"Configuration Reference","text":"<p>Generated on: 2025-06-22 23:28:53</p>"},{"location":"configuration/reference/#configuration-files","title":"Configuration Files","text":""},{"location":"configuration/reference/#activitylog","title":"activitylog","text":"<ul> <li>enabled: true</li> <li>delete_records_older_than_days: 365</li> <li>default_log_name: <code>default</code></li> <li>default_auth_driver: null</li> <li>subject_returns_soft_deleted_models: false</li> <li>activity_model: <code>Spatie\\Activitylog\\Models\\Activity</code></li> <li>table_name: <code>activity_log</code></li> <li>database_connection: null</li> </ul>"},{"location":"configuration/reference/#alerts","title":"alerts","text":"<ul> <li>channels:</li> <li>email:<ul> <li>enabled: true</li> <li>recipients:</li> <li>from_address: <code>info@askproai.de</code></li> <li>from_name: <code>AskProAI Alerts</code></li> </ul> </li> <li>database:<ul> <li>enabled: true</li> </ul> </li> <li>slack:<ul> <li>enabled: false</li> <li>webhook_url: null</li> <li>channel: <code>#alerts</code></li> <li>username: <code>AskProAI Bot</code></li> </ul> </li> <li>webhook:<ul> <li>enabled: false</li> <li>url: null</li> <li>secret: null</li> </ul> </li> <li>rules:</li> <li>api_success_rate_threshold: 90</li> <li>api_response_time_threshold: 2000</li> <li>error_rate_threshold: 10</li> <li>critical_error_threshold: 5</li> <li>disk_space_warning_threshold: 80</li> <li>disk_space_critical_threshold: 90</li> <li>database_size_threshold: 5000</li> <li>circuit_breaker_failure_threshold: 5</li> <li>circuit_breaker_timeout: 60</li> <li>throttle_minutes: 15</li> <li>severity_mapping:</li> <li>critical:<ul> <li>0: <code>circuit_breaker_open</code></li> <li>1: <code>api_down</code></li> <li>2: <code>database_connection_failed</code></li> <li>3: <code>disk_space_critical</code></li> <li>4: <code>health_check_failed</code></li> </ul> </li> <li>high:<ul> <li>0: <code>api_degraded</code></li> <li>1: <code>high_error_rate</code></li> <li>2: <code>slow_response</code></li> <li>3: <code>disk_space_low</code></li> <li>4: <code>database_size_large</code></li> </ul> </li> <li>medium:<ul> <li>0: <code>webhook_failed</code></li> <li>1: <code>cache_miss_high</code></li> <li>2: <code>queue_backed_up</code></li> </ul> </li> <li>low:<ul> <li>0: <code>test_alert</code></li> <li>1: <code>maintenance_reminder</code></li> </ul> </li> <li>escalation:</li> <li>enabled: false</li> <li>intervals:<ul> <li>0: 30</li> <li>1: 60</li> <li>2: 120</li> </ul> </li> <li>max_escalations: 3</li> </ul>"},{"location":"configuration/reference/#app","title":"app","text":"<ul> <li>name: <code>AskProAI</code></li> <li>env: <code>production</code></li> <li>debug: true</li> <li>url: <code>https://api.askproai.de</code></li> <li>frontend_url: <code>http://localhost:3000</code></li> <li>asset_url: <code>https://api.askproai.de</code></li> <li>timezone: <code>Europe/Berlin</code></li> <li>locale: <code>de</code></li> <li>fallback_locale: <code>en</code></li> <li>faker_locale: <code>de_DE</code></li> <li>cipher: <code>AES-256-CBC</code></li> <li>key: <code>base64:ZiXNrNCdJ2q95Km5gJ8ozSEX3gRHGud+w4gswlGhroQ=</code></li> <li>previous_keys:</li> <li>maintenance:</li> <li>driver: <code>file</code></li> <li>store: <code>database</code></li> <li>providers:</li> <li>0: <code>Illuminate\\Auth\\AuthServiceProvider</code></li> <li>1: <code>Illuminate\\Broadcasting\\BroadcastServiceProvider</code></li> <li>2: <code>Illuminate\\Bus\\BusServiceProvider</code></li> <li>3: <code>Illuminate\\Cache\\CacheServiceProvider</code></li> <li>4: <code>Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider</code></li> <li>5: <code>Illuminate\\Cookie\\CookieServiceProvider</code></li> <li>6: <code>Illuminate\\Database\\DatabaseServiceProvider</code></li> <li>7: <code>Illuminate\\Encryption\\EncryptionServiceProvider</code></li> <li>8: <code>Illuminate\\Filesystem\\FilesystemServiceProvider</code></li> <li>9: <code>Illuminate\\Foundation\\Providers\\FoundationServiceProvider</code></li> <li>10: <code>Illuminate\\Hashing\\HashServiceProvider</code></li> <li>11: <code>Illuminate\\Mail\\MailServiceProvider</code></li> <li>12: <code>Illuminate\\Notifications\\NotificationServiceProvider</code></li> <li>13: <code>Illuminate\\Pagination\\PaginationServiceProvider</code></li> <li>14: <code>Illuminate\\Pipeline\\PipelineServiceProvider</code></li> <li>15: <code>Illuminate\\Queue\\QueueServiceProvider</code></li> <li>16: <code>Illuminate\\Redis\\RedisServiceProvider</code></li> <li>17: <code>Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider</code></li> <li>18: <code>Illuminate\\Session\\SessionServiceProvider</code></li> <li>19: <code>Illuminate\\Translation\\TranslationServiceProvider</code></li> <li>20: <code>Illuminate\\Validation\\ValidationServiceProvider</code></li> <li>21: <code>Illuminate\\View\\ViewServiceProvider</code></li> <li>22: <code>Laravel\\Horizon\\HorizonServiceProvider</code></li> <li>23: <code>Filament\\FilamentServiceProvider</code></li> <li>24: <code>BezhanSalleh\\FilamentShield\\FilamentShieldServiceProvider</code></li> <li>25: <code>App\\Providers\\AppServiceProvider</code></li> <li>26: <code>App\\Providers\\AuthServiceProvider</code></li> <li>27: <code>App\\Providers\\EventServiceProvider</code></li> <li>28: <code>App\\Providers\\DatabaseServiceProvider</code></li> <li>29: <code>App\\Providers\\ValidationServiceProvider</code></li> <li>30: <code>App\\Providers\\Filament\\AdminPanelProvider</code></li> <li>31: <code>App\\Providers\\AppServiceProvider</code></li> <li>32: <code>App\\Providers\\AuthServiceProvider</code></li> <li>33: <code>App\\Providers\\CalcomMigrationServiceProvider</code></li> <li>34: <code>App\\Providers\\CircuitBreakerServiceProvider</code></li> <li>35: <code>App\\Providers\\DatabaseServiceProvider</code></li> <li>36: <code>App\\Providers\\EventServiceProvider</code></li> <li>37: <code>App\\Providers\\FilamentBadgeServiceProvider</code></li> <li>38: <code>App\\Providers\\FilamentColumnToggleServiceProvider</code></li> <li>39: <code>App\\Providers\\Filament\\AdminPanelProvider</code></li> <li>40: <code>App\\Providers\\GdprServiceProvider</code></li> <li>41: <code>App\\Providers\\HorizonServiceProvider</code></li> <li>42: <code>App\\Providers\\KnowledgeServiceProvider</code></li> <li>43: <code>App\\Providers\\LockingServiceProvider</code></li> <li>44: <code>App\\Providers\\LoggingServiceProvider</code></li> <li>45: <code>App\\Providers\\MCPServiceProvider</code></li> <li>46: <code>App\\Providers\\MonitoringServiceProvider</code></li> <li>47: <code>App\\Providers\\PerformanceServiceProvider</code></li> <li>48: <code>App\\Providers\\RouteServiceProvider</code></li> <li>49: <code>App\\Providers\\ValidationServiceProvider</code></li> <li>aliases:</li> <li>App: <code>Illuminate\\Support\\Facades\\App</code></li> <li>Arr: <code>Illuminate\\Support\\Arr</code></li> <li>Auth: <code>Illuminate\\Support\\Facades\\Auth</code></li> <li>Cache: <code>Illuminate\\Support\\Facades\\Cache</code></li> <li>Config: <code>Illuminate\\Support\\Facades\\Config</code></li> <li>DB: <code>Illuminate\\Support\\Facades\\DB</code></li> <li>Event: <code>Illuminate\\Support\\Facades\\Event</code></li> <li>File: <code>Illuminate\\Support\\Facades\\File</code></li> <li>Gate: <code>Illuminate\\Support\\Facades\\Gate</code></li> <li>Log: <code>Illuminate\\Support\\Facades\\Log</code></li> <li>Queue: <code>Illuminate\\Support\\Facades\\Queue</code></li> <li>Route: <code>Illuminate\\Support\\Facades\\Route</code></li> <li>Schema: <code>Illuminate\\Support\\Facades\\Schema</code></li> <li>Str: <code>Illuminate\\Support\\Str</code></li> <li>URL: <code>Illuminate\\Support\\Facades\\URL</code></li> </ul>"},{"location":"configuration/reference/#appphp","title":"app.php","text":""},{"location":"configuration/reference/#auth","title":"auth","text":"<ul> <li>defaults:</li> <li>guard: <code>web</code></li> <li>passwords: <code>users</code></li> <li>guards:</li> <li>web:<ul> <li>driver: <code>session</code></li> <li>provider: <code>users</code></li> </ul> </li> <li>api:<ul> <li>driver: <code>passport</code></li> <li>provider: <code>users</code></li> <li>hash: false</li> </ul> </li> <li>customer:<ul> <li>driver: <code>session</code></li> <li>provider: <code>customers</code></li> </ul> </li> <li>customer-api:<ul> <li>driver: <code>sanctum</code></li> <li>provider: <code>customers</code></li> </ul> </li> <li>sanctum:<ul> <li>driver: <code>sanctum</code></li> <li>provider: null</li> </ul> </li> <li>providers:</li> <li>users:<ul> <li>driver: <code>eloquent</code></li> <li>model: <code>App\\Models\\User</code></li> </ul> </li> <li>customers:<ul> <li>driver: <code>eloquent</code></li> <li>model: <code>App\\Models\\CustomerAuth</code></li> </ul> </li> <li>passwords:</li> <li>users:<ul> <li>provider: <code>users</code></li> <li>table: <code>password_reset_tokens</code></li> <li>expire: 60</li> <li>throttle: 60</li> </ul> </li> <li>customers:<ul> <li>provider: <code>customers</code></li> <li>table: <code>customer_password_resets</code></li> <li>expire: 60</li> <li>throttle: 60</li> </ul> </li> <li>password_timeout: 10800</li> </ul>"},{"location":"configuration/reference/#backup","title":"backup","text":"<ul> <li>backup:</li> <li>name: <code>AskProAI</code></li> <li>source:<ul> <li>files:</li> <li>include:<ul> <li>0: <code>/var/www/api-gateway</code></li> </ul> </li> <li>exclude:<ul> <li>0: <code>/var/www/api-gateway/vendor</code></li> <li>1: <code>/var/www/api-gateway/node_modules</code></li> </ul> </li> <li>follow_links: false</li> <li>ignore_unreadable_directories: false</li> <li>relative_path: null</li> <li>databases:</li> <li>0: <code>mysql</code></li> </ul> </li> <li>database_dump_compressor: null</li> <li>database_dump_file_timestamp_format: null</li> <li>database_dump_filename_base: <code>database</code></li> <li>database_dump_file_extension: ``</li> <li>destination:<ul> <li>compression_method: -1</li> <li>compression_level: 9</li> <li>filename_prefix: ``</li> <li>disks:</li> <li>0: <code>local</code></li> </ul> </li> <li>temporary_directory: <code>/var/www/api-gateway/storage/app/backup-temp</code></li> <li>password: null</li> <li>encryption: <code>default</code></li> <li>tries: 1</li> <li>retry_delay: 0</li> <li>notifications:</li> <li>notifications:<ul> <li>Spatie\\Backup\\Notifications\\Notifications\\BackupHasFailedNotification:</li> <li>0: <code>mail</code></li> <li>Spatie\\Backup\\Notifications\\Notifications\\UnhealthyBackupWasFoundNotification:</li> <li>0: <code>mail</code></li> <li>Spatie\\Backup\\Notifications\\Notifications\\CleanupHasFailedNotification:</li> <li>0: <code>mail</code></li> <li>Spatie\\Backup\\Notifications\\Notifications\\BackupWasSuccessfulNotification:</li> <li>0: <code>mail</code></li> <li>Spatie\\Backup\\Notifications\\Notifications\\HealthyBackupWasFoundNotification:</li> <li>0: <code>mail</code></li> <li>Spatie\\Backup\\Notifications\\Notifications\\CleanupWasSuccessfulNotification:</li> <li>0: <code>mail</code></li> </ul> </li> <li>notifiable: <code>Spatie\\Backup\\Notifications\\Notifiable</code></li> <li>mail:<ul> <li>to: <code>your@example.com</code></li> <li>from:</li> <li>address: <code>info@askproai.de</code></li> <li>name: <code>AskProAI</code></li> </ul> </li> <li>slack:<ul> <li>webhook_url: ``</li> <li>channel: null</li> <li>username: null</li> <li>icon: null</li> </ul> </li> <li>discord:<ul> <li>webhook_url: ``</li> <li>username: ``</li> <li>avatar_url: ``</li> </ul> </li> <li>monitor_backups:</li> <li>0:<ul> <li>name: <code>AskProAI</code></li> <li>disks:</li> <li>0: <code>local</code></li> <li>health_checks:</li> <li>Spatie\\Backup\\Tasks\\Monitor\\HealthChecks\\MaximumAgeInDays: 1</li> <li>Spatie\\Backup\\Tasks\\Monitor\\HealthChecks\\MaximumStorageInMegabytes: 5000</li> </ul> </li> <li>cleanup:</li> <li>strategy: <code>Spatie\\Backup\\Tasks\\Cleanup\\Strategies\\DefaultStrategy</code></li> <li>default_strategy:<ul> <li>keep_all_backups_for_days: 7</li> <li>keep_daily_backups_for_days: 16</li> <li>keep_weekly_backups_for_weeks: 8</li> <li>keep_monthly_backups_for_months: 4</li> <li>keep_yearly_backups_for_years: 2</li> <li>delete_oldest_backups_when_using_more_megabytes_than: 5000</li> </ul> </li> <li>tries: 1</li> <li>retry_delay: 0</li> </ul>"},{"location":"configuration/reference/#billing","title":"billing","text":"<ul> <li>price_per_second_cents: 3</li> </ul>"},{"location":"configuration/reference/#booking","title":"booking","text":"<ul> <li>default_branch_strategy: <code>nearest</code></li> <li>time_constraints:</li> <li>min_advance_booking: 60</li> <li>max_advance_booking: 90</li> <li>default_duration: 30</li> <li>buffer_time: 15</li> <li>slot_interval: 15</li> <li>availability:</li> <li>cache_ttl: 300</li> <li>max_alternatives: 5</li> <li>alternative_search_days: 7</li> <li>multi_location:</li> <li>enable_cross_branch: true</li> <li>max_distance_km: 50</li> <li>enable_mobile_staff: true</li> <li>customer_preferences:</li> <li>remember_branch: true</li> <li>remember_staff: true</li> <li>preference_weight: 0.7</li> <li>notifications:</li> <li>send_customer_confirmation: true</li> <li>send_staff_notification: true</li> <li>send_manager_notification: false</li> <li>debug:</li> <li>enable_detailed_logging: false</li> <li>log_availability: false</li> <li>log_branch_selection: false</li> </ul>"},{"location":"configuration/reference/#broadcasting","title":"broadcasting","text":"<ul> <li>default: <code>null</code></li> <li>connections:</li> <li>reverb:<ul> <li>driver: <code>reverb</code></li> <li>key: null</li> <li>secret: null</li> <li>app_id: null</li> <li>options:</li> <li>host: null</li> <li>port: 443</li> <li>scheme: <code>https</code></li> <li>useTLS: true</li> <li>client_options:</li> </ul> </li> <li>pusher:<ul> <li>driver: <code>pusher</code></li> <li>key: null</li> <li>secret: null</li> <li>app_id: null</li> <li>options:</li> <li>host: <code>api-mt1.pusher.com</code></li> <li>port: 443</li> <li>scheme: <code>https</code></li> <li>encrypted: true</li> <li>useTLS: true</li> <li>cluster: <code>mt1</code></li> <li>client_options:</li> </ul> </li> <li>ably:<ul> <li>driver: <code>ably</code></li> <li>key: null</li> </ul> </li> <li>log:<ul> <li>driver: <code>log</code></li> </ul> </li> <li>null:<ul> <li>driver: <code>null</code></li> </ul> </li> <li>redis:<ul> <li>driver: <code>redis</code></li> <li>connection: <code>default</code></li> </ul> </li> </ul>"},{"location":"configuration/reference/#cache-strategy","title":"cache-strategy","text":"<ul> <li>ttl:</li> <li>event_types: 300</li> <li>customer_lookup: 600</li> <li>availability: 120</li> <li>company_settings: 1800</li> <li>staff_schedules: 300</li> <li>service_lists: 3600</li> <li>api_response_default: 300</li> <li>tags:</li> <li>company_prefix: <code>company</code></li> <li>staff_prefix: <code>staff</code></li> <li>customer_prefix: <code>customer</code></li> <li>appointments_prefix: <code>appointments</code></li> <li>services_prefix: <code>services</code></li> <li>warming:</li> <li>enabled: true</li> <li>scheduled_types:<ul> <li>0: <code>event_types</code></li> <li>1: <code>company_settings</code></li> <li>2: <code>staff_schedules</code></li> <li>3: <code>services</code></li> </ul> </li> <li>schedules:<ul> <li>all: 30</li> <li>event_types: 15</li> <li>critical: 5</li> </ul> </li> <li>batch_size: 50</li> <li>queue: <code>default</code></li> <li>api_response:</li> <li>enabled: true</li> <li>routes:<ul> <li>api/services: 3600</li> <li>api/services/*: 3600</li> <li>api/event-types: 300</li> <li>api/event-types/*: 300</li> <li>api/availability: 120</li> <li>api/availability/*: 120</li> <li>api/staff/*/schedule: 300</li> <li>api/staff/*/availability: 120</li> <li>api/company/settings: 1800</li> <li>api/company/*/settings: 1800</li> <li>api/branches: 900</li> <li>api/branches/*: 900</li> </ul> </li> <li>exclude:<ul> <li>0: <code>api/auth/*</code></li> <li>1: <code>api/webhooks/*</code></li> <li>2: <code>api/admin/*</code></li> <li>3: <code>api/billing/*</code></li> <li>4: <code>api/user/profile</code></li> </ul> </li> <li>vary_by_headers:<ul> <li>0: <code>X-Company-ID</code></li> <li>1: <code>X-Tenant-ID</code></li> <li>2: <code>Accept-Language</code></li> </ul> </li> <li>invalidation:</li> <li>cascade:<ul> <li>company:</li> <li>0: <code>services</code></li> <li>1: <code>staff_schedules</code></li> <li>2: <code>event_types</code></li> <li>staff:</li> <li>0: <code>availability</code></li> <li>1: <code>staff_schedules</code></li> <li>appointments:</li> <li>0: <code>availability</code></li> </ul> </li> <li>events:<ul> <li>App\\Events\\CompanyUpdated:</li> <li>0: <code>company</code></li> <li>App\\Events\\StaffUpdated:</li> <li>0: <code>staff</code></li> <li>App\\Events\\ServiceUpdated:</li> <li>0: <code>services</code></li> <li>App\\Events\\AppointmentCreated:</li> <li>0: <code>availability</code></li> <li>1: <code>appointments</code></li> <li>App\\Events\\AppointmentUpdated:</li> <li>0: <code>availability</code></li> <li>1: <code>appointments</code></li> <li>App\\Events\\AppointmentCancelled:</li> <li>0: <code>availability</code></li> <li>1: <code>appointments</code></li> </ul> </li> <li>drivers:</li> <li>default: <code>database</code></li> <li>by_type:<ul> <li>api_response: <code>redis</code></li> <li>data: <code>redis</code></li> <li>warming: <code>redis</code></li> </ul> </li> <li>redis:<ul> <li>connection: <code>cache</code></li> <li>lock_connection: <code>default</code></li> </ul> </li> <li>monitoring:</li> <li>log_stats: false</li> <li>alerts:<ul> <li>min_hit_rate: 70</li> <li>max_size_mb: 1024</li> </ul> </li> <li>metrics:<ul> <li>enabled: true</li> <li>sample_rate: 0.1</li> </ul> </li> </ul>"},{"location":"configuration/reference/#cache","title":"cache","text":"<ul> <li>default: <code>redis</code></li> <li>stores:</li> <li>array:<ul> <li>driver: <code>array</code></li> <li>serialize: false</li> </ul> </li> <li>database:<ul> <li>driver: <code>database</code></li> <li>connection: null</li> <li>table: <code>cache</code></li> <li>lock_connection: null</li> <li>lock_table: null</li> </ul> </li> <li>file:<ul> <li>driver: <code>file</code></li> <li>path: <code>/var/www/api-gateway/storage/framework/cache/data</code></li> <li>lock_path: <code>/var/www/api-gateway/storage/framework/cache/data</code></li> </ul> </li> <li>memcached:<ul> <li>driver: <code>memcached</code></li> <li>persistent_id: null</li> <li>sasl:</li> <li>0: null</li> <li>1: null</li> <li>options:</li> <li>servers:</li> <li>0:<ul> <li>host: <code>127.0.0.1</code></li> <li>port: 11211</li> <li>weight: 100</li> </ul> </li> </ul> </li> <li>redis:<ul> <li>driver: <code>redis</code></li> <li>connection: <code>cache</code></li> <li>lock_connection: <code>default</code></li> </ul> </li> <li>dynamodb:<ul> <li>driver: <code>dynamodb</code></li> <li>key: ``</li> <li>secret: ``</li> <li>region: <code>us-east-1</code></li> <li>table: <code>cache</code></li> <li>endpoint: null</li> </ul> </li> <li>octane:<ul> <li>driver: <code>octane</code></li> </ul> </li> <li>prefix: <code>askproai_cache_</code></li> </ul>"},{"location":"configuration/reference/#calcom-migration","title":"calcom-migration","text":"<ul> <li>log_status: true</li> <li>log_v1_usage: true</li> <li>force_v2: false</li> <li>v2_rollout_percentage: 100</li> <li>endpoints:</li> <li>availability:<ul> <li>use_v2: true</li> </ul> </li> <li>bookings:<ul> <li>use_v2: true</li> </ul> </li> <li>event_types:<ul> <li>use_v2: true</li> </ul> </li> <li>monitoring:</li> <li>v1_usage_alert_threshold: 100</li> <li>alert_email: <code>tech@askproai.de</code></li> <li>compatibility:</li> <li>convert_responses: true</li> <li>add_deprecation_headers: true</li> </ul>"},{"location":"configuration/reference/#calcom-v2","title":"calcom-v2","text":"<ul> <li>api_key: <code>cal_live_bd7aedbdf12085c5312c79ba73585920</code></li> <li>api_url: <code>https://api.cal.com/v2</code></li> <li>organization_id: null</li> <li>team_slug: <code>askproai</code></li> <li>default_event_type_id: null</li> <li>webhook:</li> <li>secret: <code>6846aed4d55f6f3df70c40781e02d964aae34147f72763e1ccedd726e66dfff7</code></li> <li>events:<ul> <li>0: <code>BOOKING_CREATED</code></li> <li>1: <code>BOOKING_CONFIRMED</code></li> <li>2: <code>BOOKING_CANCELLED</code></li> <li>3: <code>BOOKING_RESCHEDULED</code></li> <li>4: <code>BOOKING_REQUESTED</code></li> <li>5: <code>BOOKING_REJECTED</code></li> <li>6: <code>BOOKING_COMPLETED</code></li> <li>7: <code>BOOKING_NO_SHOW</code></li> </ul> </li> <li>endpoint: <code>/api/webhooks/calcom</code></li> <li>rate_limit:</li> <li>enabled: true</li> <li>max_requests_per_minute: 60</li> <li>retry_after_seconds: 60</li> <li>circuit_breaker:</li> <li>enabled: true</li> <li>failure_threshold: 5</li> <li>timeout_seconds: 60</li> <li>success_threshold: 2</li> <li>cache:</li> <li>enabled: true</li> <li>prefix: <code>calcom_v2</code></li> <li>ttl:<ul> <li>event_types: 3600</li> <li>availability: 300</li> <li>bookings: 600</li> <li>schedules: 1800</li> </ul> </li> <li>retry:</li> <li>max_attempts: 3</li> <li>initial_delay_ms: 100</li> <li>max_delay_ms: 2000</li> <li>multiplier: 2</li> <li>timeout:</li> <li>connect: 5</li> <li>request: 30</li> <li>logging:</li> <li>enabled: true</li> <li>channel: <code>calcom</code></li> <li>level: <code>info</code></li> <li>log_requests: false</li> <li>log_responses: false</li> <li>environments:</li> <li>production:<ul> <li>verify_ssl: true</li> <li>debug: false</li> <li>mock_enabled: false</li> </ul> </li> <li>staging:<ul> <li>verify_ssl: true</li> <li>debug: true</li> <li>mock_enabled: false</li> </ul> </li> <li>local:<ul> <li>verify_ssl: false</li> <li>debug: true</li> <li>mock_enabled: false</li> </ul> </li> <li>features:</li> <li>auto_confirm_bookings: true</li> <li>send_reminders: true</li> <li>allow_rescheduling: true</li> <li>allow_cancellation: true</li> <li>sync_attendees: true</li> <li>sync_custom_fields: true</li> <li>booking_defaults:</li> <li>timezone: <code>Europe/Berlin</code></li> <li>language: <code>de</code></li> <li>buffer_time_minutes: 0</li> <li>metadata_prefix: <code>askproai_</code></li> <li>health_check:</li> <li>enabled: true</li> <li>interval_seconds: 300</li> <li>timeout_seconds: 5</li> </ul>"},{"location":"configuration/reference/#calcom","title":"calcom","text":"<ul> <li>base_url: <code>https://api.cal.com</code></li> <li>api_key: <code>cal_live_bd7aedbdf12085c5312c79ba73585920</code></li> <li>team_slug: <code>askproai</code></li> <li>user_slug: null</li> </ul>"},{"location":"configuration/reference/#circuit_breaker","title":"circuit_breaker","text":"<ul> <li>failure_threshold: 5</li> <li>success_threshold: 2</li> <li>timeout: 60</li> <li>half_open_requests: 3</li> <li>services:</li> <li>calcom:<ul> <li>failure_threshold: <code>5</code></li> <li>timeout: <code>60</code></li> </ul> </li> <li>retell:<ul> <li>failure_threshold: 5</li> <li>timeout: 60</li> </ul> </li> <li>stripe:<ul> <li>failure_threshold: 10</li> <li>timeout: 120</li> </ul> </li> </ul>"},{"location":"configuration/reference/#database","title":"database","text":"<ul> <li>default: <code>mysql</code></li> <li>connections:</li> <li>sqlite:<ul> <li>driver: <code>sqlite</code></li> <li>url: null</li> <li>database: <code>askproai_db</code></li> <li>prefix: ``</li> <li>foreign_key_constraints: true</li> </ul> </li> <li>mysql:<ul> <li>driver: <code>mysql</code></li> <li>url: null</li> <li>host: <code>127.0.0.1</code></li> <li>port: <code>3306</code></li> <li>database: <code>askproai_db</code></li> <li>username: <code>askproai_user</code></li> <li>password: <code>lkZ57Dju9EDjrMxn</code></li> <li>unix_socket: ``</li> <li>charset: <code>utf8mb4</code></li> <li>collation: <code>utf8mb4_unicode_ci</code></li> <li>prefix: ``</li> <li>prefix_indexes: true</li> <li>strict: true</li> <li>engine: <code>InnoDB</code></li> <li>options:</li> <li>12: true</li> <li>1000: true</li> <li>19: 5</li> <li>3: 2</li> <li>2: 30</li> <li>1002: <code>SET NAMES 'utf8mb4' COLLATE 'utf8mb4_unicode_ci', SESSION sql_mode='TRADITIONAL,NO_AUTO_VALUE_ON_ZERO', SESSION wait_timeout=28800</code></li> <li>log_queries: false</li> <li>log_slow_queries: true</li> <li>slow_query_time: 2</li> <li>pool:</li> <li>min_connections: <code>2</code></li> <li>max_connections: <code>10</code></li> <li>connection_timeout: 10</li> <li>idle_timeout: 60</li> <li>health_check_interval: 30</li> </ul> </li> <li>mariadb:<ul> <li>driver: <code>mariadb</code></li> <li>url: null</li> <li>host: <code>127.0.0.1</code></li> <li>port: <code>3306</code></li> <li>database: <code>askproai_db</code></li> <li>username: <code>askproai_user</code></li> <li>password: <code>lkZ57Dju9EDjrMxn</code></li> <li>unix_socket: ``</li> <li>charset: <code>utf8mb4</code></li> <li>collation: <code>utf8mb4_unicode_ci</code></li> <li>prefix: ``</li> <li>prefix_indexes: true</li> <li>strict: true</li> <li>engine: null</li> <li>options:</li> </ul> </li> <li>pgsql:<ul> <li>driver: <code>pgsql</code></li> <li>url: null</li> <li>host: <code>127.0.0.1</code></li> <li>port: <code>3306</code></li> <li>database: <code>askproai_db</code></li> <li>username: <code>askproai_user</code></li> <li>password: <code>lkZ57Dju9EDjrMxn</code></li> <li>charset: <code>utf8</code></li> <li>prefix: ``</li> <li>prefix_indexes: true</li> <li>search_path: <code>public</code></li> <li>sslmode: <code>prefer</code></li> </ul> </li> <li>sqlsrv:<ul> <li>driver: <code>sqlsrv</code></li> <li>url: null</li> <li>host: <code>127.0.0.1</code></li> <li>port: <code>3306</code></li> <li>database: <code>askproai_db</code></li> <li>username: <code>askproai_user</code></li> <li>password: <code>lkZ57Dju9EDjrMxn</code></li> <li>charset: <code>utf8</code></li> <li>prefix: ``</li> <li>prefix_indexes: true</li> </ul> </li> <li>migrations: <code>migrations</code></li> <li>redis:</li> <li>client: <code>phpredis</code></li> <li>default:<ul> <li>url: null</li> <li>host: <code>127.0.0.1</code></li> <li>password: ``</li> <li>port: <code>6379</code></li> <li>database: <code>0</code></li> </ul> </li> <li>cache:<ul> <li>url: null</li> <li>host: <code>127.0.0.1</code></li> <li>password: ``</li> <li>port: <code>6379</code></li> <li>database: <code>1</code></li> </ul> </li> <li>horizon:<ul> <li>url: null</li> <li>host: <code>127.0.0.1</code></li> <li>password: ``</li> <li>port: <code>6379</code></li> <li>database: <code>0</code></li> <li>options:</li> <li>prefix: <code>askproai</code></li> </ul> </li> <li>pool:</li> <li>enabled: true</li> <li>min_connections: <code>2</code></li> <li>max_connections: <code>10</code></li> <li>max_idle_time: 60</li> <li>validation_interval: 30</li> </ul>"},{"location":"configuration/reference/#deployment","title":"deployment","text":"<ul> <li>checks:</li> <li>database: true</li> <li>migrations: true</li> <li>tests: true</li> <li>dependencies: true</li> <li>disk_space: true</li> <li>services: true</li> <li>rollback:</li> <li>auto_rollback: true</li> <li>max_downtime: 300</li> <li>backup_retention: 7</li> <li>snapshot_before_deploy: true</li> <li>notifications:</li> <li>enabled: true</li> <li>channels:<ul> <li>0: <code>log</code></li> <li>1: <code>slack</code></li> <li>2: <code>email</code></li> </ul> </li> <li>slack: null</li> <li>email: null</li> <li>zero_downtime:</li> <li>enabled: true</li> <li>strategy: <code>blue_green</code></li> <li>health_check_url: <code>/health</code></li> <li>warm_up_time: 30</li> <li>parallel_instances: 2</li> <li>testing:</li> <li>run_unit_tests: true</li> <li>run_integration_tests: true</li> <li>run_e2e_tests: false</li> <li>fail_on_test_failure: true</li> <li>parallel_testing: true</li> <li>pre_deployment:</li> <li>backup_database: true</li> <li>backup_code: true</li> <li>backup_config: true</li> <li>backup_storage: false</li> <li>verify_disk_space: true</li> <li>min_free_space_gb: 2</li> <li>post_deployment:</li> <li>clear_caches: true</li> <li>restart_queues: true</li> <li>warm_up_cache: true</li> <li>run_health_checks: true</li> <li>monitor_duration: 60</li> <li>services_check:</li> <li>mysql:<ul> <li>enabled: true</li> <li>timeout: 5</li> </ul> </li> <li>redis:<ul> <li>enabled: true</li> <li>timeout: 3</li> </ul> </li> <li>calcom:<ul> <li>enabled: true</li> <li>url: <code>https://api.cal.com/v2/api/health</code></li> <li>timeout: 10</li> </ul> </li> <li>retell:<ul> <li>enabled: true</li> <li>url: <code>https://api.retellai.com/health</code></li> <li>timeout: 10</li> </ul> </li> <li>critical_paths:</li> <li>0: <code>/admin/login</code></li> <li>1: <code>/admin</code></li> <li>2: <code>/api/appointments</code></li> <li>3: <code>/api/retell/webhook</code></li> <li>4: <code>/api/calcom/webhook</code></li> <li>5: <code>/health</code></li> <li>performance_monitoring:</li> <li>enabled: true</li> <li>response_time_threshold: 3000</li> <li>error_rate_threshold: 0.05</li> <li>check_interval: 5</li> <li>git:</li> <li>auto_pull: true</li> <li>branch: <code>main</code></li> <li>remote: <code>origin</code></li> <li>composer:</li> <li>install: true</li> <li>optimize: true</li> <li>no_dev: true</li> <li>npm:</li> <li>install: true</li> <li>build: true</li> <li>production: true</li> <li>logging:</li> <li>channel: <code>deployment</code></li> <li>level: <code>info</code></li> <li>separate_file: true</li> </ul>"},{"location":"configuration/reference/#filament-shield","title":"filament-shield","text":"<ul> <li>shield_resource:</li> <li>should_register_navigation: true</li> <li>slug: <code>shield/roles</code></li> <li>navigation_sort: -1</li> <li>navigation_badge: true</li> <li>navigation_group: true</li> <li>sub_navigation_position: null</li> <li>is_globally_searchable: false</li> <li>show_model_path: true</li> <li>is_scoped_to_tenant: true</li> <li>cluster: null</li> <li>tenant_model: null</li> <li>auth_provider_model:</li> <li>fqcn: <code>App\\Models\\User</code></li> <li>super_admin:</li> <li>enabled: true</li> <li>name: <code>super_admin</code></li> <li>define_via_gate: false</li> <li>intercept_gate: <code>before</code></li> <li>panel_user:</li> <li>enabled: true</li> <li>name: <code>panel_user</code></li> <li>permission_prefixes:</li> <li>resource:<ul> <li>0: <code>view</code></li> <li>1: <code>view_any</code></li> <li>2: <code>create</code></li> <li>3: <code>update</code></li> <li>4: <code>restore</code></li> <li>5: <code>restore_any</code></li> <li>6: <code>replicate</code></li> <li>7: <code>reorder</code></li> <li>8: <code>delete</code></li> <li>9: <code>delete_any</code></li> <li>10: <code>force_delete</code></li> <li>11: <code>force_delete_any</code></li> </ul> </li> <li>page: <code>page</code></li> <li>widget: <code>widget</code></li> <li>entities:</li> <li>pages: true</li> <li>widgets: true</li> <li>resources: true</li> <li>custom_permissions: false</li> <li>generator:</li> <li>option: <code>policies_and_permissions</code></li> <li>policy_directory: <code>Policies</code></li> <li>policy_namespace: <code>Policies</code></li> <li>exclude:</li> <li>enabled: true</li> <li>pages:<ul> <li>0: <code>Dashboard</code></li> </ul> </li> <li>widgets:<ul> <li>0: <code>AccountWidget</code></li> <li>1: <code>FilamentInfoWidget</code></li> </ul> </li> <li>resources:</li> <li>discovery:</li> <li>discover_all_resources: false</li> <li>discover_all_widgets: false</li> <li>discover_all_pages: false</li> <li>register_role_policy:</li> <li>enabled: true</li> <li>enable: true</li> <li>guard: <code>web</code></li> <li>super_admin_role_name: <code>super_admin</code></li> <li>panel_fqcn: <code>Filament\\Panel</code></li> </ul>"},{"location":"configuration/reference/#filament","title":"filament","text":"<ul> <li>broadcasting:</li> <li>default_filesystem_disk: <code>public</code></li> <li>assets_path: null</li> <li>cache_path: <code>/var/www/api-gateway/bootstrap/cache/filament</code></li> <li>livewire_loading_delay: <code>default</code></li> <li>system_route_prefix: <code>filament</code></li> </ul>"},{"location":"configuration/reference/#filesystems","title":"filesystems","text":"<ul> <li>default: <code>local</code></li> <li>disks:</li> <li>local:<ul> <li>driver: <code>local</code></li> <li>root: <code>/var/www/api-gateway/storage/app/private</code></li> <li>serve: true</li> <li>throw: false</li> <li>report: false</li> </ul> </li> <li>public:<ul> <li>driver: <code>local</code></li> <li>root: <code>/var/www/api-gateway/storage/app/public</code></li> <li>url: <code>https://api.askproai.de/storage</code></li> <li>visibility: <code>public</code></li> <li>throw: false</li> <li>report: false</li> </ul> </li> <li>s3:<ul> <li>driver: <code>s3</code></li> <li>key: ``</li> <li>secret: ``</li> <li>region: <code>us-east-1</code></li> <li>bucket: ``</li> <li>url: null</li> <li>endpoint: null</li> <li>use_path_style_endpoint: false</li> <li>throw: false</li> <li>report: false</li> </ul> </li> <li>links:</li> <li>/var/www/api-gateway/public/storage: <code>/var/www/api-gateway/storage/app/public</code></li> </ul>"},{"location":"configuration/reference/#gdpr","title":"gdpr","text":"<ul> <li>enabled: true</li> <li>cookie_policy_version: <code>1.0</code></li> <li>cookie_consent_duration_days: 365</li> <li>cookie_categories:</li> <li>functional:<ul> <li>0: <code>askproai_session</code></li> <li>1: <code>XSRF-TOKEN</code></li> <li>2: <code>locale</code></li> <li>3: <code>timezone</code></li> </ul> </li> <li>analytics:<ul> <li>0: <code>_ga</code></li> <li>1: <code>_gid</code></li> <li>2: <code>_gat</code></li> <li>3: <code>_gat_gtag_*</code></li> <li>4: <code>gtag_*</code></li> </ul> </li> <li>marketing:<ul> <li>0: <code>_fbp</code></li> <li>1: <code>fr</code></li> <li>2: <code>tr</code></li> <li>3: <code>_gcl_*</code></li> <li>4: <code>ide</code></li> </ul> </li> <li>retention_periods:</li> <li>appointments: 730</li> <li>calls: 365</li> <li>invoices: 3650</li> <li>consents: 1095</li> <li>logs: 90</li> <li>request_response_days: 30</li> <li>export_format: <code>json</code></li> <li>export_include_files: true</li> <li>anonymization:</li> <li>enabled: true</li> <li>placeholder_email: <code>deleted.user.{id}@anonymized.local</code></li> <li>placeholder_name: <code>DELETED USER</code></li> <li>keep_statistical_data: true</li> <li>third_party_services:</li> <li>google_analytics:<ul> <li>enabled: false</li> <li>tracking_id: null</li> <li>anonymize_ip: true</li> <li>requires_consent: <code>analytics</code></li> </ul> </li> <li>facebook_pixel:<ul> <li>enabled: false</li> <li>pixel_id: null</li> <li>requires_consent: <code>marketing</code></li> </ul> </li> <li>retell_ai:<ul> <li>data_processing_agreement: true</li> <li>data_location: <code>EU</code></li> <li>encryption: <code>AES-256</code></li> </ul> </li> <li>cal_com:<ul> <li>data_processing_agreement: true</li> <li>data_location: <code>EU</code></li> <li>gdpr_compliant: true</li> </ul> </li> <li>legal_pages:</li> <li>privacy_policy_url: <code>/portal/privacy-policy</code></li> <li>cookie_policy_url: <code>/portal/cookie-policy</code></li> <li>terms_of_service_url: <code>/portal/terms</code></li> <li>imprint_url: <code>/portal/imprint</code></li> <li>data_protection_officer:</li> <li>name: <code>Data Protection Officer</code></li> <li>email: <code>dpo@askproai.com</code></li> <li>phone: <code>+49 30 12345678</code></li> <li>address: <code>Beispielstra\u00dfe 1, 10115 Berlin, Germany</code></li> <li>features:</li> <li>cookie_consent_banner: true</li> <li>privacy_center: true</li> <li>data_export: true</li> <li>data_deletion: true</li> <li>consent_logging: true</li> <li>automated_deletion: false</li> <li>breach_notification: true</li> <li>bdsg:</li> <li>employee_data_protection: true</li> <li>works_council_agreement: false</li> <li>telecom_secrecy: true</li> </ul>"},{"location":"configuration/reference/#hashing","title":"hashing","text":"<ul> <li>driver: <code>bcrypt</code></li> <li>bcrypt:</li> <li>rounds: 12</li> <li>verify: false</li> <li>argon:</li> <li>memory: 65536</li> <li>threads: 1</li> <li>time: 4</li> <li>verify: true</li> <li>rehash_on_login: true</li> </ul>"},{"location":"configuration/reference/#horizon","title":"horizon","text":"<ul> <li>domain: null</li> <li>path: <code>horizon</code></li> <li>use: <code>default</code></li> <li>prefix: <code>askproai</code></li> <li>middleware:</li> <li>0: <code>web</code></li> <li>waits:</li> <li>redis:default: 60</li> <li>trim:</li> <li>recent: 60</li> <li>pending: 60</li> <li>completed: 60</li> <li>recent_failed: 10080</li> <li>failed: 10080</li> <li>monitored: 10080</li> <li>silenced:</li> <li>metrics:</li> <li>trim_snapshots:<ul> <li>job: 24</li> <li>queue: 24</li> </ul> </li> <li>fast_termination: false</li> <li>memory_limit: 64</li> <li>defaults:</li> <li>supervisor-1:<ul> <li>connection: <code>redis</code></li> <li>queue:</li> <li>0: <code>default</code></li> <li>balance: <code>auto</code></li> <li>autoScalingStrategy: <code>time</code></li> <li>maxProcesses: 1</li> <li>maxTime: 0</li> <li>maxJobs: 0</li> <li>memory: 128</li> <li>tries: 1</li> <li>timeout: 60</li> <li>nice: 0</li> </ul> </li> <li>webhooks:<ul> <li>connection: <code>redis</code></li> <li>queue:</li> <li>0: <code>webhooks</code></li> <li>balance: <code>auto</code></li> <li>autoScalingStrategy: <code>time</code></li> <li>maxProcesses: 5</li> <li>maxTime: 0</li> <li>maxJobs: 0</li> <li>memory: 256</li> <li>tries: 3</li> <li>timeout: 90</li> <li>nice: 0</li> </ul> </li> <li>webhooks-high:<ul> <li>connection: <code>redis</code></li> <li>queue:</li> <li>0: <code>webhooks-high</code></li> <li>balance: <code>auto</code></li> <li>autoScalingStrategy: <code>time</code></li> <li>maxProcesses: 3</li> <li>maxTime: 0</li> <li>maxJobs: 0</li> <li>memory: 256</li> <li>tries: 3</li> <li>timeout: 120</li> <li>nice: -5</li> </ul> </li> <li>environments:</li> <li>production:<ul> <li>supervisor-1:</li> <li>maxProcesses: 20</li> <li>balanceMaxShift: 5</li> <li>balanceCooldown: 3</li> <li>minProcesses: 5</li> <li>webhooks:</li> <li>maxProcesses: 30</li> <li>balanceMaxShift: 10</li> <li>balanceCooldown: 1</li> <li>minProcesses: 10</li> <li>webhooks-high:</li> <li>maxProcesses: 20</li> <li>balanceMaxShift: 5</li> <li>balanceCooldown: 1</li> <li>minProcesses: 5</li> <li>mcp-operations:</li> <li>connection: <code>redis</code></li> <li>queue:<ul> <li>0: <code>mcp-high</code></li> <li>1: <code>mcp-default</code></li> </ul> </li> <li>balance: <code>auto</code></li> <li>autoScalingStrategy: <code>time</code></li> <li>maxProcesses: 25</li> <li>minProcesses: 5</li> <li>balanceMaxShift: 10</li> <li>balanceCooldown: 2</li> <li>maxTime: 0</li> <li>maxJobs: 0</li> <li>memory: 512</li> <li>tries: 3</li> <li>timeout: 60</li> <li>nice: -5</li> <li>appointments:</li> <li>connection: <code>redis</code></li> <li>queue:<ul> <li>0: <code>appointments</code></li> </ul> </li> <li>balance: <code>auto</code></li> <li>autoScalingStrategy: <code>time</code></li> <li>maxProcesses: 15</li> <li>minProcesses: 3</li> <li>balanceMaxShift: 5</li> <li>balanceCooldown: 3</li> <li>maxTime: 0</li> <li>maxJobs: 0</li> <li>memory: 256</li> <li>tries: 3</li> <li>timeout: 120</li> <li>nice: 0</li> </ul> </li> <li>local:<ul> <li>supervisor-1:</li> <li>maxProcesses: 3</li> <li>webhooks:</li> <li>maxProcesses: 2</li> <li>webhooks-high:</li> <li>maxProcesses: 1</li> </ul> </li> </ul>"},{"location":"configuration/reference/#improvement-engine","title":"improvement-engine","text":"<ul> <li>monitoring:</li> <li>enabled: true</li> <li>interval: 300</li> <li>retention: 30</li> <li>thresholds:<ul> <li>response_time: 1000</li> <li>error_rate: 0.01</li> <li>cpu_usage: 80</li> <li>memory_usage: 85</li> <li>disk_usage: 90</li> <li>queue_size: 1000</li> <li>database_connections: 80</li> </ul> </li> <li>analysis:</li> <li>enabled: true</li> <li>schedule: <code>hourly</code></li> <li>lookback_period: 7</li> <li>confidence_threshold: 0.95</li> <li>minimum_data_points: 100</li> <li>modules:<ul> <li>performance: true</li> <li>bottlenecks: true</li> <li>patterns: true</li> <li>predictions: true</li> <li>optimizations: true</li> </ul> </li> <li>optimization:</li> <li>auto_apply: false</li> <li>test_environment: <code>staging</code></li> <li>approval_required: true</li> <li>rollback_enabled: true</li> <li>types:<ul> <li>query_optimization: true</li> <li>cache_optimization: true</li> <li>index_optimization: true</li> <li>configuration_tuning: true</li> <li>code_optimization: false</li> </ul> </li> <li>metrics:</li> <li>collect:<ul> <li>performance: true</li> <li>resources: true</li> <li>business: true</li> <li>errors: true</li> <li>user_experience: true</li> </ul> </li> <li>sources:<ul> <li>application: true</li> <li>database: true</li> <li>cache: true</li> <li>queue: true</li> <li>external_apis: true</li> </ul> </li> <li>bottleneck_detection:</li> <li>database:<ul> <li>slow_query_threshold: 1000</li> <li>lock_wait_threshold: 50</li> <li>connection_usage_threshold: 0.8</li> </ul> </li> <li>api:<ul> <li>response_time_threshold: 2000</li> <li>timeout_threshold: 30000</li> <li>error_rate_threshold: 0.05</li> </ul> </li> <li>queue:<ul> <li>processing_time_threshold: 5000</li> <li>backlog_threshold: 1000</li> <li>failure_rate_threshold: 0.1</li> </ul> </li> <li>pattern_detection:</li> <li>temporal:<ul> <li>peak_hours: true</li> <li>day_patterns: true</li> <li>seasonal_trends: true</li> </ul> </li> <li>behavioral:<ul> <li>user_patterns: true</li> <li>error_patterns: true</li> <li>performance_patterns: true</li> </ul> </li> <li>predictions:</li> <li>enabled: true</li> <li>algorithms:<ul> <li>linear_regression: true</li> <li>time_series: true</li> <li>anomaly_detection: true</li> </ul> </li> <li>predict:<ul> <li>resource_exhaustion: true</li> <li>performance_degradation: true</li> <li>scaling_needs: true</li> <li>failure_risks: true</li> </ul> </li> <li>alerts:</li> <li>enabled: true</li> <li>channels:<ul> <li>0: <code>log</code></li> <li>1: <code>database</code></li> <li>2: <code>slack</code></li> </ul> </li> <li>levels:<ul> <li>info:</li> <li>0: <code>log</code></li> <li>warning:</li> <li>0: <code>log</code></li> <li>1: <code>database</code></li> <li>critical:</li> <li>0: <code>log</code></li> <li>1: <code>database</code></li> <li>2: <code>slack</code></li> </ul> </li> <li>throttle:<ul> <li>enabled: true</li> <li>max_alerts_per_hour: 10</li> </ul> </li> <li>recommendations:</li> <li>generate: true</li> <li>priority_weights:<ul> <li>performance_impact: 0.4</li> <li>implementation_effort: 0.3</li> <li>risk_level: 0.2</li> <li>cost_benefit: 0.1</li> </ul> </li> <li>categories:<ul> <li>performance: true</li> <li>scalability: true</li> <li>reliability: true</li> <li>security: true</li> <li>cost_optimization: true</li> </ul> </li> <li>benchmarks:</li> <li>response_times:<ul> <li>excellent: 100</li> <li>good: 500</li> <li>acceptable: 1000</li> <li>poor: 3000</li> </ul> </li> <li>availability:<ul> <li>target: 99.9</li> <li>minimum: 99</li> </ul> </li> <li>error_rates:<ul> <li>excellent: 0.001</li> <li>good: 0.01</li> <li>acceptable: 0.05</li> </ul> </li> <li>storage:</li> <li>path: <code>improvement-engine</code></li> <li>compression: true</li> <li>encryption: false</li> <li>reporting:</li> <li>daily_summary: true</li> <li>weekly_report: true</li> <li>monthly_analysis: true</li> <li>export_formats:<ul> <li>0: <code>json</code></li> <li>1: <code>pdf</code></li> <li>2: <code>csv</code></li> </ul> </li> </ul>"},{"location":"configuration/reference/#knowledge","title":"knowledge","text":"<ul> <li>watch_paths:</li> <li>0: <code>/var/www/api-gateway/*.md</code></li> <li>1: <code>/var/www/api-gateway/docs</code></li> <li>2: <code>/var/www/api-gateway/resources/docs</code></li> <li>file_extensions:</li> <li>0: <code>md</code></li> <li>1: <code>markdown</code></li> <li>auto_index:</li> <li>enabled: true</li> <li>interval: 60</li> <li>search:</li> <li>min_query_length: 2</li> <li>results_per_page: 20</li> <li>excerpt_length: 300</li> <li>cache:</li> <li>ttl: 300</li> <li>prefix: <code>knowledge_</code></li> <li>ui:</li> <li>show_breadcrumbs: true</li> <li>show_toc: true</li> <li>show_related: true</li> <li>show_feedback: true</li> <li>show_reading_time: true</li> <li>show_view_count: true</li> <li>markdown:</li> <li>html_input: <code>strip</code></li> <li>allow_unsafe_links: false</li> <li>max_nesting_level: 10</li> <li>extensions:<ul> <li>table: true</li> <li>task_list: true</li> <li>github_flavored: true</li> <li>attributes: true</li> </ul> </li> <li>default_categories:</li> <li>0:<ul> <li>name: <code>Getting Started</code></li> <li>slug: <code>getting-started</code></li> <li>icon: <code>\ud83d\ude80</code></li> <li>description: <code>Learn the basics and get up and running quickly</code></li> <li>order: 1</li> </ul> </li> <li>1:<ul> <li>name: <code>User Guide</code></li> <li>slug: <code>user-guide</code></li> <li>icon: <code>\ud83d\udcd6</code></li> <li>description: <code>Comprehensive guides for using the platform</code></li> <li>order: 2</li> </ul> </li> <li>2:<ul> <li>name: <code>API Reference</code></li> <li>slug: <code>api-reference</code></li> <li>icon: <code>\ud83d\udd0c</code></li> <li>description: <code>Technical documentation for developers</code></li> <li>order: 3</li> </ul> </li> <li>3:<ul> <li>name: <code>Troubleshooting</code></li> <li>slug: <code>troubleshooting</code></li> <li>icon: <code>\ud83d\udd27</code></li> <li>description: <code>Solutions to common problems</code></li> <li>order: 4</li> </ul> </li> </ul>"},{"location":"configuration/reference/#livewire","title":"livewire","text":"<ul> <li>class_namespace: <code>App\\Livewire</code></li> <li>view_path: <code>/var/www/api-gateway/resources/views/livewire</code></li> <li>layout: <code>components.layouts.app</code></li> <li>lazy_placeholder: null</li> <li>temporary_file_upload:</li> <li>disk: null</li> <li>rules: null</li> <li>directory: null</li> <li>middleware: null</li> <li>preview_mimes:<ul> <li>0: <code>png</code></li> <li>1: <code>gif</code></li> <li>2: <code>bmp</code></li> <li>3: <code>svg</code></li> <li>4: <code>wav</code></li> <li>5: <code>mp4</code></li> <li>6: <code>mov</code></li> <li>7: <code>avi</code></li> <li>8: <code>wmv</code></li> <li>9: <code>mp3</code></li> <li>10: <code>m4a</code></li> <li>11: <code>jpg</code></li> <li>12: <code>jpeg</code></li> <li>13: <code>mpga</code></li> <li>14: <code>webp</code></li> <li>15: <code>wma</code></li> </ul> </li> <li>max_upload_time: 5</li> <li>cleanup: true</li> <li>render_on_redirect: false</li> <li>legacy_model_binding: false</li> <li>inject_assets: true</li> <li>navigate:</li> <li>show_progress_bar: true</li> <li>progress_bar_color: <code>#2299dd</code></li> <li>inject_morph_markers: true</li> <li>pagination_theme: <code>tailwind</code></li> </ul>"},{"location":"configuration/reference/#logging","title":"logging","text":"<ul> <li>default: <code>daily</code></li> <li>deprecations:</li> <li>channel: null</li> <li>trace: false</li> <li>channels:</li> <li>stack:<ul> <li>driver: <code>stack</code></li> <li>channels:</li> <li>0: <code>daily</code></li> <li>1: <code>sentry</code></li> <li>ignore_exceptions: false</li> </ul> </li> <li>single:<ul> <li>driver: <code>single</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/laravel.log</code></li> <li>level: <code>debug</code></li> <li>permission: 436</li> </ul> </li> <li>daily:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/laravel.log</code></li> <li>level: <code>debug</code></li> <li>days: 7</li> <li>permission: 436</li> </ul> </li> <li>slack:<ul> <li>driver: <code>slack</code></li> <li>url: null</li> <li>username: <code>Laravel Log</code></li> <li>emoji: <code>:boom:</code></li> <li>level: <code>debug</code></li> </ul> </li> <li>papertrail:<ul> <li>driver: <code>monolog</code></li> <li>level: <code>debug</code></li> <li>handler: <code>Monolog\\Handler\\SyslogUdpHandler</code></li> <li>handler_with:</li> <li>host: null</li> <li>port: null</li> <li>connectionString: <code>tls://:</code></li> <li>processors:</li> <li>0: <code>Monolog\\Processor\\PsrLogMessageProcessor</code></li> </ul> </li> <li>stderr:<ul> <li>driver: <code>monolog</code></li> <li>level: <code>debug</code></li> <li>handler: <code>Monolog\\Handler\\StreamHandler</code></li> <li>formatter: null</li> <li>with:</li> <li>stream: <code>php://stderr</code></li> <li>processors:</li> <li>0: <code>Monolog\\Processor\\PsrLogMessageProcessor</code></li> </ul> </li> <li>syslog:<ul> <li>driver: <code>syslog</code></li> <li>level: <code>debug</code></li> <li>facility: 8</li> <li>replace_placeholders: true</li> </ul> </li> <li>errorlog:<ul> <li>driver: <code>errorlog</code></li> <li>level: <code>debug</code></li> <li>replace_placeholders: true</li> </ul> </li> <li>null:<ul> <li>driver: <code>monolog</code></li> <li>handler: <code>Monolog\\Handler\\NullHandler</code></li> </ul> </li> <li>emergency:<ul> <li>path: <code>/var/www/api-gateway/storage/logs/laravel.log</code></li> </ul> </li> <li>mail:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/mail.log</code></li> <li>level: <code>error</code></li> <li>days: 7</li> <li>permission: 436</li> </ul> </li> <li>calcom:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/calcom.log</code></li> <li>level: <code>error</code></li> <li>days: 7</li> <li>permission: 436</li> </ul> </li> <li>retell:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/retell_webhook.log</code></li> <li>level: <code>error</code></li> <li>days: 7</li> <li>permission: 436</li> </ul> </li> <li>frontend:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/frontend-errors.log</code></li> <li>level: <code>error</code></li> <li>days: 14</li> <li>permission: 436</li> </ul> </li> <li>webhooks:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/webhooks.log</code></li> <li>level: <code>info</code></li> <li>days: 30</li> <li>permission: 436</li> </ul> </li> <li>critical:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/critical.log</code></li> <li>level: <code>error</code></li> <li>days: 90</li> <li>permission: 436</li> </ul> </li> <li>slow_queries:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/slow_queries.log</code></li> <li>level: <code>warning</code></li> <li>days: 30</li> <li>permission: 436</li> </ul> </li> <li>booking_flow:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/booking_flow.log</code></li> <li>level: <code>info</code></li> <li>days: 30</li> <li>permission: 436</li> </ul> </li> <li>api:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/api_calls.log</code></li> <li>level: <code>info</code></li> <li>days: 14</li> <li>permission: 436</li> </ul> </li> <li>sentry:<ul> <li>driver: <code>sentry</code></li> <li>level: <code>debug</code></li> <li>bubble: true</li> </ul> </li> <li>monitoring:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/monitoring.log</code></li> <li>level: <code>debug</code></li> <li>days: 14</li> </ul> </li> <li>security:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/security.log</code></li> <li>level: <code>warning</code></li> <li>days: 30</li> </ul> </li> <li>performance:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/performance.log</code></li> <li>level: <code>info</code></li> <li>days: 7</li> </ul> </li> <li>stripe:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/stripe.log</code></li> <li>level: <code>info</code></li> <li>days: 30</li> <li>permission: 436</li> </ul> </li> <li>portal:<ul> <li>driver: <code>daily</code></li> <li>path: <code>/var/www/api-gateway/storage/logs/portal.log</code></li> <li>level: <code>info</code></li> <li>days: 14</li> <li>permission: 436</li> </ul> </li> <li>deprecations:<ul> <li>driver: <code>monolog</code></li> <li>handler: <code>Monolog\\Handler\\NullHandler</code></li> </ul> </li> </ul>"},{"location":"configuration/reference/#mail","title":"mail","text":"<ul> <li>default: <code>smtp</code></li> <li>mailers:</li> <li>smtp:<ul> <li>transport: <code>smtp</code></li> <li>host: <code>smtp.udag.de</code></li> <li>port: <code>465</code></li> <li>encryption: <code>ssl</code></li> <li>username: <code>askproai-de-0001</code></li> <li>password: <code>Qwer421as1!11</code></li> <li>timeout: 10</li> </ul> </li> <li>ses:<ul> <li>transport: <code>ses</code></li> </ul> </li> <li>postmark:<ul> <li>transport: <code>postmark</code></li> </ul> </li> <li>resend:<ul> <li>transport: <code>resend</code></li> </ul> </li> <li>sendmail:<ul> <li>transport: <code>sendmail</code></li> <li>path: <code>/usr/sbin/sendmail -bs -i</code></li> </ul> </li> <li>log:<ul> <li>transport: <code>log</code></li> </ul> </li> <li>array:<ul> <li>transport: <code>array</code></li> </ul> </li> <li>failover:<ul> <li>transport: <code>failover</code></li> <li>mailers:</li> <li>0: <code>smtp</code></li> <li>1: <code>log</code></li> </ul> </li> <li>roundrobin:<ul> <li>transport: <code>roundrobin</code></li> <li>mailers:</li> <li>0: <code>ses</code></li> <li>1: <code>postmark</code></li> </ul> </li> <li>from:</li> <li>address: <code>info@askproai.de</code></li> <li>name: <code>AskProAI</code></li> <li>markdown:</li> <li>theme: <code>default</code></li> <li>paths:<ul> <li>0: <code>/var/www/api-gateway/resources/views/vendor/mail</code></li> </ul> </li> </ul>"},{"location":"configuration/reference/#mcp-database","title":"mcp-database","text":"<ul> <li>cache:</li> <li>ttl: 300</li> <li>prefix: <code>mcp:db</code></li> <li>limits:</li> <li>max_rows: 1000</li> <li>max_tables: 50</li> <li>read_only: true</li> <li>allowed_tables:</li> <li>0: <code>appointments</code></li> <li>1: <code>calls</code></li> <li>2: <code>customers</code></li> <li>3: <code>companies</code></li> <li>4: <code>branches</code></li> <li>5: <code>staff</code></li> <li>6: <code>services</code></li> <li>7: <code>calcom_event_types</code></li> <li>8: <code>staff_event_types</code></li> <li>9: <code>phone_numbers</code></li> <li>10: <code>webhook_events</code></li> <li>11: <code>api_call_logs</code></li> <li>12: <code>calcom_bookings</code></li> <li>13: <code>working_hours</code></li> <li>excluded_columns:</li> <li>0: <code>password</code></li> <li>1: <code>remember_token</code></li> <li>2: <code>api_token</code></li> <li>3: <code>two_factor_secret</code></li> <li>4: <code>two_factor_recovery_codes</code></li> <li>query_templates:</li> <li>failed_appointments: <code>SELECT a.*, c.name as customer_name, b.name as branch_name             FROM appointments a             LEFT JOIN customers c ON a.customer_id = c.id             LEFT JOIN branches b ON a.branch_id = b.id             WHERE a.status = 'failed'              AND a.created_at &gt;= DATE_SUB(NOW(), INTERVAL :hours HOUR)             ORDER BY a.created_at DESC             LIMIT :limit</code></li> <li>call_summary: <code>SELECT                  DATE(created_at) as date,                 COUNT(*) as total_calls,                 AVG(duration_seconds) as avg_duration,                 SUM(cost) as total_cost             FROM calls             WHERE company_id = :company_id             AND created_at &gt;= DATE_SUB(NOW(), INTERVAL :days DAY)             GROUP BY DATE(created_at)             ORDER BY date DESC</code></li> </ul>"},{"location":"configuration/reference/#mcp-discovery","title":"mcp-discovery","text":"<ul> <li>sources:</li> <li>anthropic:<ul> <li>enabled: true</li> <li>url: <code>https://api.anthropic.com/mcp/registry</code></li> <li>check_interval: 3600</li> <li>api_key: null</li> </ul> </li> <li>github:<ul> <li>enabled: true</li> <li>org: <code>anthropics</code></li> <li>topic: <code>mcp</code></li> <li>check_interval: 7200</li> <li>token: null</li> </ul> </li> <li>npm:<ul> <li>enabled: true</li> <li>scope: <code>@anthropic</code></li> <li>keyword: <code>mcp</code></li> <li>check_interval: 7200</li> </ul> </li> <li>community:<ul> <li>enabled: true</li> <li>sources:</li> <li>0: <code>https://awesome-mcp.com/api/list</code></li> <li>1: <code>https://mcp-directory.dev/api/packages</code></li> <li>check_interval: 14400</li> </ul> </li> <li>evaluation:</li> <li>auto_install: false</li> <li>test_environment: <code>staging</code></li> <li>approval_required: true</li> <li>relevance_threshold: 0.3</li> <li>categories:</li> <li>priority:<ul> <li>0: <code>calendar</code></li> <li>1: <code>scheduling</code></li> <li>2: <code>appointment</code></li> <li>3: <code>booking</code></li> <li>4: <code>telephony</code></li> <li>5: <code>voice</code></li> <li>6: <code>ai</code></li> <li>7: <code>conversation</code></li> </ul> </li> <li>secondary:<ul> <li>0: <code>crm</code></li> <li>1: <code>customer</code></li> <li>2: <code>business</code></li> <li>3: <code>automation</code></li> <li>4: <code>monitoring</code></li> <li>5: <code>analytics</code></li> <li>6: <code>performance</code></li> </ul> </li> <li>technical:<ul> <li>0: <code>database</code></li> <li>1: <code>api</code></li> <li>2: <code>integration</code></li> <li>3: <code>laravel</code></li> <li>4: <code>php</code></li> </ul> </li> <li>keywords:</li> <li>high_priority:<ul> <li>0: <code>laravel</code></li> <li>1: <code>filament</code></li> <li>2: <code>calcom</code></li> <li>3: <code>retell</code></li> <li>4: <code>appointment</code></li> <li>5: <code>booking</code></li> <li>6: <code>german</code></li> <li>7: <code>gdpr</code></li> </ul> </li> <li>medium_priority:<ul> <li>0: <code>php</code></li> <li>1: <code>mysql</code></li> <li>2: <code>webhook</code></li> <li>3: <code>multi-tenant</code></li> <li>4: <code>saas</code></li> <li>5: <code>deployment</code></li> <li>6: <code>monitoring</code></li> </ul> </li> <li>storage:</li> <li>catalog_path: <code>mcp/catalog.json</code></li> <li>cache_ttl: 86400</li> <li>backup_enabled: true</li> <li>notifications:</li> <li>channels:<ul> <li>0: <code>log</code></li> <li>1: <code>database</code></li> </ul> </li> <li>min_relevance_for_notification: 0.7</li> <li>slack_webhook: null</li> <li>email_recipients: null</li> </ul>"},{"location":"configuration/reference/#mcp-monitoring","title":"mcp-monitoring","text":"<ul> <li>enabled: true</li> <li>alerts:</li> <li>0:<ul> <li>name: <code>high_error_rate</code></li> <li>service: null</li> <li>condition:</li> <li>type: <code>error_rate</code></li> <li>threshold: 10</li> <li>window: 300</li> <li>severity: <code>critical</code></li> <li>message: <code>High error rate detected</code></li> <li>cooldown: 600</li> <li>notify:</li> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> </ul> </li> <li>1:<ul> <li>name: <code>slow_response</code></li> <li>service: null</li> <li>condition:</li> <li>type: <code>response_time</code></li> <li>threshold: 2000</li> <li>severity: <code>warning</code></li> <li>message: <code>Slow response time detected</code></li> <li>cooldown: 300</li> <li>notify:</li> <li>0: <code>slack</code></li> </ul> </li> <li>2:<ul> <li>name: <code>consecutive_errors</code></li> <li>service: null</li> <li>condition:</li> <li>type: <code>consecutive_errors</code></li> <li>count: 5</li> <li>severity: <code>critical</code></li> <li>message: <code>Multiple consecutive errors detected</code></li> <li>cooldown: 600</li> <li>notify:</li> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> </ul> </li> <li>3:<ul> <li>name: <code>service_down</code></li> <li>service: <code>database</code></li> <li>condition:</li> <li>type: <code>service_down</code></li> <li>minutes: 2</li> <li>severity: <code>critical</code></li> <li>message: <code>Database service appears to be down</code></li> <li>cooldown: 300</li> <li>notify:</li> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> <li>2: <code>sms</code></li> </ul> </li> <li>4:<ul> <li>name: <code>cache_miss_rate</code></li> <li>service: <code>cache</code></li> <li>condition:</li> <li>type: <code>cache_miss_rate</code></li> <li>threshold: 50</li> <li>window: 600</li> <li>severity: <code>warning</code></li> <li>message: <code>High cache miss rate detected</code></li> <li>cooldown: 900</li> <li>notify:</li> <li>0: <code>slack</code></li> </ul> </li> <li>5:<ul> <li>name: <code>queue_backlog</code></li> <li>service: <code>queue</code></li> <li>condition:</li> <li>type: <code>queue_size</code></li> <li>threshold: 1000</li> <li>severity: <code>warning</code></li> <li>message: <code>Large queue backlog detected</code></li> <li>cooldown: 600</li> <li>notify:</li> <li>0: <code>slack</code></li> </ul> </li> <li>thresholds:</li> <li>response_time:<ul> <li>excellent: 100</li> <li>good: 500</li> <li>acceptable: 1000</li> <li>poor: 2000</li> </ul> </li> <li>error_rate:<ul> <li>excellent: 0.1</li> <li>good: 1</li> <li>acceptable: 5</li> <li>poor: 10</li> </ul> </li> <li>uptime:<ul> <li>excellent: 99.9</li> <li>good: 99</li> <li>acceptable: 95</li> <li>poor: 90</li> </ul> </li> <li>retention:</li> <li>detailed: 7</li> <li>aggregated: 30</li> <li>alerts: 90</li> <li>notifications:</li> <li>email:<ul> <li>enabled: true</li> <li>to: <code>admin@example.com</code></li> <li>from: <code>monitoring@example.com</code></li> </ul> </li> <li>slack:<ul> <li>enabled: false</li> <li>webhook: null</li> <li>channel: <code>#alerts</code></li> </ul> </li> <li>sms:<ul> <li>enabled: false</li> <li>provider: <code>twilio</code></li> <li>to: null</li> </ul> </li> <li>circuit_breaker:</li> <li>failure_threshold: 5</li> <li>success_threshold: 2</li> <li>timeout: 60</li> <li>half_open_max_attempts: 3</li> <li>dashboard:</li> <li>refresh_interval: 10</li> <li>default_time_range: <code>1h</code></li> <li>max_chart_points: 100</li> <li>enable_auto_refresh: true</li> <li>prometheus:</li> <li>enabled: true</li> <li>namespace: <code>mcp</code></li> <li>labels:<ul> <li>app: <code>AskProAI</code></li> <li>env: <code>production</code></li> </ul> </li> <li>services:</li> <li>database:<ul> <li>health_check_query: <code>SELECT 1</code></li> <li>slow_query_threshold: 1000</li> <li>connection_pool_monitor: true</li> </ul> </li> <li>cache:<ul> <li>monitor_hit_rate: true</li> <li>monitor_memory_usage: true</li> <li>low_hit_rate_threshold: 70</li> </ul> </li> <li>queue:<ul> <li>monitor_job_processing: true</li> <li>monitor_failed_jobs: true</li> <li>max_queue_size: 10000</li> </ul> </li> <li>sentry:<ul> <li>monitor_error_rate: true</li> <li>monitor_quota_usage: true</li> </ul> </li> <li>ui_ux:<ul> <li>monitor_page_load: true</li> <li>monitor_js_errors: true</li> <li>slow_page_threshold: 3000</li> </ul> </li> <li>debug: false</li> </ul>"},{"location":"configuration/reference/#mcp-sentry","title":"mcp-sentry","text":"<ul> <li>enabled: true</li> <li>server:</li> <li>name: <code>sentry-mcp-server</code></li> <li>version: <code>1.0.0</code></li> <li>description: <code>MCP server for Sentry error tracking integration</code></li> <li>sentry:</li> <li>organization: <code>askproai</code></li> <li>project: <code>api-gateway</code></li> <li>auth_token: null</li> <li>api_url: <code>https://sentry.io/api/0/</code></li> <li>capabilities:</li> <li>list_issues: true</li> <li>get_issue: true</li> <li>get_stacktrace: true</li> <li>get_context: true</li> <li>search_issues: true</li> <li>get_performance: true</li> <li>manage_issues: false</li> <li>filters:</li> <li>days_back: 7</li> <li>min_level: <code>warning</code></li> <li>exclude_types:<ul> <li>0: <code>Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException</code></li> </ul> </li> <li>cache:</li> <li>ttl: 300</li> <li>prefix: <code>mcp_sentry</code></li> </ul>"},{"location":"configuration/reference/#mcp-uiux","title":"mcp-uiux","text":"<ul> <li>sources:</li> <li>laravel: <code>https://laravel.com/docs/master</code></li> <li>filament: <code>https://filamentphp.com/docs</code></li> <li>tailwind: <code>https://tailwindcss.com/docs</code></li> <li>material: <code>https://material.io/design</code></li> <li>carbon: <code>https://carbondesignsystem.com</code></li> <li>monitoring:</li> <li>enabled: true</li> <li>check_interval: 86400</li> <li>performance_threshold: 3</li> <li>accessibility_score: 90</li> <li>mobile_breakpoint: 768</li> <li>analysis:</li> <li>check_accessibility: true</li> <li>check_performance: true</li> <li>check_responsive: true</li> <li>check_consistency: true</li> <li>check_best_practices: true</li> <li>performance:</li> <li>targets:<ul> <li>page_load: 2</li> <li>first_contentful_paint: 1</li> <li>time_to_interactive: 3</li> <li>largest_contentful_paint: 2.5</li> </ul> </li> <li>widget_targets:<ul> <li>render_time: 0.5</li> <li>update_time: 0.3</li> <li>query_count: 5</li> </ul> </li> <li>accessibility:</li> <li>wcag_level: <code>AA</code></li> <li>color_contrast_ratio: 4.5</li> <li>focus_indicator_required: true</li> <li>aria_labels_required: true</li> <li>keyboard_navigation_required: true</li> <li>design_system:</li> <li>colors:<ul> <li>primary: <code>#3B82F6</code></li> <li>secondary: <code>#6B7280</code></li> <li>success: <code>#10B981</code></li> <li>warning: <code>#F59E0B</code></li> <li>danger: <code>#EF4444</code></li> </ul> </li> <li>spacing:<ul> <li>unit: 4</li> <li>scale:</li> <li>0: 1</li> <li>1: 2</li> <li>2: 3</li> <li>3: 4</li> <li>4: 5</li> <li>5: 6</li> <li>6: 8</li> <li>7: 10</li> <li>8: 12</li> <li>9: 16</li> <li>10: 20</li> <li>11: 24</li> </ul> </li> <li>typography:<ul> <li>font_family: <code>Inter, system-ui, sans-serif</code></li> <li>base_size: 16</li> <li>scale_ratio: 1.25</li> </ul> </li> <li>best_practices:</li> <li>laravel:<ul> <li>use_route_model_binding: true</li> <li>use_form_requests: true</li> <li>use_resource_controllers: true</li> <li>use_view_composers: true</li> <li>use_blade_components: true</li> </ul> </li> <li>filament:<ul> <li>use_actions: true</li> <li>use_relation_managers: true</li> <li>use_custom_fields: true</li> <li>use_table_filters: true</li> <li>use_bulk_actions: true</li> </ul> </li> <li>suggestions:</li> <li>auto_suggest: true</li> <li>min_confidence: 0.7</li> <li>max_suggestions_per_component: 5</li> <li>cache:</li> <li>ttl: 3600</li> <li>prefix: <code>uiux</code></li> <li>reports:</li> <li>generate_weekly: true</li> <li>generate_monthly: true</li> <li>storage_path: <code>uiux-reports</code></li> <li>retention_days: 90</li> </ul>"},{"location":"configuration/reference/#mcp","title":"mcp","text":"<ul> <li>enabled: true</li> <li>services:</li> <li>webhook:<ul> <li>enabled: true</li> <li>timeout: 30</li> <li>max_retries: 3</li> <li>rate_limit:</li> <li>per_minute: 1000</li> <li>per_hour: 50000</li> </ul> </li> <li>calcom:<ul> <li>enabled: true</li> <li>timeout: 15</li> <li>max_retries: 3</li> <li>rate_limit:</li> <li>per_minute: 60</li> <li>per_hour: 1000</li> <li>cache_ttl: 300</li> </ul> </li> <li>retell:<ul> <li>enabled: true</li> <li>timeout: 20</li> <li>max_retries: 3</li> <li>rate_limit:</li> <li>per_minute: 100</li> <li>per_hour: 5000</li> <li>cache_ttl: 300</li> </ul> </li> <li>database:<ul> <li>enabled: true</li> <li>timeout: 10</li> <li>max_rows: 1000</li> <li>read_only: true</li> <li>cache_ttl: 60</li> </ul> </li> <li>queue:<ul> <li>enabled: true</li> <li>timeout: 5</li> <li>cache_ttl: 30</li> </ul> </li> <li>orchestrator:</li> <li>health_check_interval: 60</li> <li>metrics_retention: 86400</li> <li>tenant_quotas:<ul> <li>requests_per_minute: 1000</li> <li>concurrent_operations: 50</li> </ul> </li> <li>connection_pool:</li> <li>enabled: true</li> <li>min_connections: <code>2</code></li> <li>max_connections: <code>10</code></li> <li>max_idle_time: 300</li> <li>health_check_interval: 60</li> <li>acquire_timeout: 5</li> <li>circuit_breakers:</li> <li>calcom:<ul> <li>failure_threshold: 5</li> <li>success_threshold: 2</li> <li>timeout: 60</li> <li>half_open_requests: 3</li> </ul> </li> <li>retell:<ul> <li>failure_threshold: 5</li> <li>success_threshold: 2</li> <li>timeout: 60</li> <li>half_open_requests: 3</li> </ul> </li> <li>stripe:<ul> <li>failure_threshold: 3</li> <li>success_threshold: 2</li> <li>timeout: 120</li> <li>half_open_requests: 2</li> </ul> </li> <li>performance:</li> <li>target_latency_ms: 100</li> <li>max_latency_ms: 1000</li> <li>concurrent_calls: 200</li> <li>queue_workers: 50</li> <li>monitoring:</li> <li>metrics_enabled: true</li> <li>alert_thresholds:<ul> <li>error_rate: 5</li> <li>latency_p99: 1000</li> <li>queue_size: 1000</li> </ul> </li> <li>redis:</li> <li>connection_pool_size: 50</li> <li>persistent_connections: true</li> <li>read_timeout: 2</li> <li>timeout: 5</li> </ul>"},{"location":"configuration/reference/#monitoring-thresholds","title":"monitoring-thresholds","text":"<ul> <li>performance:</li> <li>response_time:<ul> <li>warning: 200</li> <li>critical: 500</li> </ul> </li> <li>query_time:<ul> <li>warning: 50</li> <li>critical: 100</li> </ul> </li> <li>api_call_time:<ul> <li>calcom:</li> <li>warning: 1000</li> <li>critical: 3000</li> <li>retell:</li> <li>warning: 500</li> <li>critical: 2000</li> </ul> </li> <li>availability:</li> <li>error_rate:<ul> <li>warning: 0.1</li> <li>critical: 1</li> </ul> </li> <li>success_rate:<ul> <li>warning: 99.9</li> <li>critical: 99</li> </ul> </li> <li>circuit_breaker:<ul> <li>open_threshold: 5</li> <li>half_open_threshold: 3</li> </ul> </li> <li>resources:</li> <li>queue_size:<ul> <li>webhooks-critical:</li> <li>warning: 50</li> <li>critical: 100</li> <li>webhooks-high:</li> <li>warning: 200</li> <li>critical: 500</li> <li>webhooks:</li> <li>warning: 500</li> <li>critical: 1000</li> </ul> </li> <li>memory_usage:<ul> <li>warning: 256</li> <li>critical: 384</li> </ul> </li> <li>db_connections:<ul> <li>warning: 40</li> <li>critical: 45</li> </ul> </li> <li>redis_memory:<ul> <li>warning: 70</li> <li>critical: 85</li> </ul> </li> <li>business:</li> <li>failed_bookings:<ul> <li>warning: 5</li> <li>critical: 10</li> </ul> </li> <li>webhook_failures:<ul> <li>warning: 10</li> <li>critical: 25</li> </ul> </li> <li>duplicate_bookings:<ul> <li>warning: 1</li> <li>critical: 3</li> </ul> </li> <li>no_show_rate:<ul> <li>warning: 5</li> <li>critical: 10</li> </ul> </li> <li>security:</li> <li>failed_auth:<ul> <li>warning: 10</li> <li>critical: 50</li> </ul> </li> <li>invalid_signatures:<ul> <li>warning: 5</li> <li>critical: 20</li> </ul> </li> <li>rate_limit_violations:<ul> <li>warning: 50</li> <li>critical: 100</li> </ul> </li> <li>channels:</li> <li>email:<ul> <li>enabled: true</li> <li>recipients: <code>ops@askproai.de</code></li> </ul> </li> <li>slack:<ul> <li>enabled: true</li> <li>webhook: null</li> <li>channel: <code>#alerts</code></li> </ul> </li> <li>sms:<ul> <li>enabled: false</li> <li>numbers: ``</li> </ul> </li> <li>pagerduty:<ul> <li>enabled: false</li> <li>integration_key: null</li> </ul> </li> <li>cooldown:</li> <li>warning: 15</li> <li>critical: 5</li> <li>escalation:</li> <li>enabled: true</li> <li>warning_to_critical_minutes: 30</li> <li>max_alerts_per_hour: 20</li> </ul>"},{"location":"configuration/reference/#monitoring","title":"monitoring","text":"<ul> <li>enabled: true</li> <li>sentry:</li> <li>enabled: true</li> <li>dsn: null</li> <li>environment: <code>production</code></li> <li>release: null</li> <li>traces_sample_rate: 0.1</li> <li>profiles_sample_rate: 0.1</li> <li>send_default_pii: false</li> <li>before_send: <code>App\\Services\\Monitoring\\SentryBeforeSend@handle</code></li> <li>contexts:<ul> <li>stripe: true</li> <li>customer_portal: true</li> <li>tenant: true</li> </ul> </li> <li>alert_thresholds:<ul> <li>error_rate: 0.05</li> <li>transaction_duration: 3000</li> <li>crash_free_rate: 0.99</li> </ul> </li> <li>apm:</li> <li>enabled: true</li> <li>transactions:<ul> <li>stripe_webhook:</li> <li>threshold: 1000</li> <li>sample_rate: 1</li> <li>customer_portal:</li> <li>threshold: 500</li> <li>sample_rate: 0.5</li> <li>api_endpoints:</li> <li>threshold: 300</li> <li>sample_rate: 0.3</li> </ul> </li> <li>database:<ul> <li>slow_query_threshold: 100</li> <li>log_queries: false</li> <li>explain_queries: false</li> </ul> </li> <li>external_services:<ul> <li>stripe:</li> <li>timeout_threshold: 5000</li> <li>error_rate_threshold: 0.01</li> <li>calcom:</li> <li>timeout_threshold: 3000</li> <li>error_rate_threshold: 0.05</li> <li>retell:</li> <li>timeout_threshold: 3000</li> <li>error_rate_threshold: 0.05</li> </ul> </li> <li>health_checks:</li> <li>enabled: true</li> <li>endpoint: <code>/health</code></li> <li>secret: null</li> <li>checks:<ul> <li>critical:</li> <li>database:<ul> <li>enabled: true</li> <li>timeout: 5</li> </ul> </li> <li>redis:<ul> <li>enabled: true</li> <li>timeout: 3</li> </ul> </li> <li>stripe_api:<ul> <li>enabled: true</li> <li>timeout: 10</li> </ul> </li> <li>warning:</li> <li>queue_size:<ul> <li>enabled: true</li> <li>threshold: 1000</li> </ul> </li> <li>disk_space:<ul> <li>enabled: true</li> <li>threshold: 90</li> </ul> </li> <li>memory_usage:<ul> <li>enabled: true</li> <li>threshold: 85</li> </ul> </li> </ul> </li> <li>alerts:</li> <li>channels:<ul> <li>email:</li> <li>enabled: true</li> <li>recipients:<ul> <li>0: ``</li> </ul> </li> <li>slack:</li> <li>enabled: false</li> <li>webhook_url: null</li> <li>channel: <code>#alerts</code></li> <li>sms:</li> <li>enabled: false</li> <li>recipients:<ul> <li>0: ``</li> </ul> </li> </ul> </li> <li>rules:<ul> <li>payment_failure:</li> <li>enabled: true</li> <li>threshold: 3</li> <li>window: 300</li> <li>severity: <code>critical</code></li> <li>channels:<ul> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> <li>2: <code>sms</code></li> </ul> </li> <li>security_breach_attempt:</li> <li>enabled: true</li> <li>threshold: 5</li> <li>window: 60</li> <li>severity: <code>critical</code></li> <li>channels:<ul> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> <li>2: <code>sms</code></li> </ul> </li> <li>stripe_webhook_failure:</li> <li>enabled: true</li> <li>threshold: 5</li> <li>window: 300</li> <li>severity: <code>high</code></li> <li>channels:<ul> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> </ul> </li> <li>high_error_rate:</li> <li>enabled: true</li> <li>threshold: 0.05</li> <li>window: 300</li> <li>severity: <code>high</code></li> <li>channels:<ul> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> </ul> </li> <li>database_connection_failure:</li> <li>enabled: true</li> <li>threshold: 3</li> <li>window: 60</li> <li>severity: <code>critical</code></li> <li>channels:<ul> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> <li>2: <code>sms</code></li> </ul> </li> <li>queue_backlog:</li> <li>enabled: true</li> <li>threshold: 1000</li> <li>severity: <code>medium</code></li> <li>channels:<ul> <li>0: <code>email</code></li> </ul> </li> <li>portal_downtime:</li> <li>enabled: true</li> <li>threshold: 1</li> <li>severity: <code>critical</code></li> <li>channels:<ul> <li>0: <code>email</code></li> <li>1: <code>slack</code></li> <li>2: <code>sms</code></li> </ul> </li> </ul> </li> <li>logging:</li> <li>structured: true</li> <li>levels:<ul> <li>stripe: <code>info</code></li> <li>customer_portal: <code>info</code></li> <li>webhooks: <code>debug</code></li> <li>api: <code>info</code></li> <li>security: <code>warning</code></li> </ul> </li> <li>masking:<ul> <li>enabled: true</li> <li>fields:</li> <li>0: <code>password</code></li> <li>1: <code>stripe_secret</code></li> <li>2: <code>api_key</code></li> <li>3: <code>token</code></li> <li>4: <code>secret</code></li> <li>5: <code>card_number</code></li> <li>6: <code>cvv</code></li> <li>7: <code>ssn</code></li> <li>8: <code>tax_id</code></li> </ul> </li> <li>retention:<ul> <li>days: 30</li> <li>archive: true</li> </ul> </li> <li>metrics:</li> <li>enabled: true</li> <li>endpoint: <code>/metrics</code></li> <li>secret: null</li> <li>business:<ul> <li>subscriptions_created: true</li> <li>subscriptions_cancelled: true</li> <li>revenue_processed: true</li> <li>portal_registrations: true</li> <li>portal_logins: true</li> <li>support_tickets: true</li> </ul> </li> <li>technical:<ul> <li>request_duration: true</li> <li>database_queries: true</li> <li>cache_hits: true</li> <li>queue_jobs: true</li> <li>external_api_calls: true</li> <li>error_rates: true</li> </ul> </li> <li>security:</li> <li>enabled: true</li> <li>events:<ul> <li>failed_logins: true</li> <li>password_resets: true</li> <li>privilege_escalations: true</li> <li>data_exports: true</li> <li>api_key_usage: true</li> <li>suspicious_activity: true</li> </ul> </li> <li>rate_limiting:<ul> <li>track_violations: true</li> <li>alert_threshold: 100</li> </ul> </li> <li>ip_monitoring:<ul> <li>enabled: true</li> <li>track_suspicious_ips: true</li> <li>geo_blocking_alerts: true</li> </ul> </li> <li>dashboard:</li> <li>enabled: true</li> <li>route: <code>/admin/monitoring</code></li> <li>middleware:<ul> <li>0: <code>auth</code></li> <li>1: <code>can:view-monitoring</code></li> </ul> </li> <li>widgets:<ul> <li>system_health: true</li> <li>error_rates: true</li> <li>performance_metrics: true</li> <li>business_metrics: true</li> <li>security_overview: true</li> <li>alert_history: true</li> </ul> </li> <li>integrations:</li> <li>stripe:<ul> <li>monitor_webhooks: true</li> <li>monitor_api_calls: true</li> <li>track_payment_failures: true</li> <li>track_dispute_rates: true</li> <li>track_subscription_churn: true</li> </ul> </li> <li>customer_portal:<ul> <li>track_page_views: true</li> <li>track_user_actions: true</li> <li>monitor_load_times: true</li> <li>track_errors: true</li> <li>session_analytics: true</li> </ul> </li> </ul>"},{"location":"configuration/reference/#passport","title":"passport","text":"<ul> <li>guard: <code>web</code></li> <li>private_key: null</li> <li>public_key: null</li> <li>connection: null</li> <li>client_uuids: false</li> <li>personal_access_client:</li> <li>id: null</li> <li>secret: null</li> <li>storage:</li> <li>database:<ul> <li>connection: <code>mysql</code></li> </ul> </li> </ul>"},{"location":"configuration/reference/#performance-monitoring","title":"performance-monitoring","text":"<ul> <li>enabled: true</li> <li>metrics_token: <code>4zSqVMOpB50ROJsur7Zk6r4CK/VU4oAzJS4od29o/S8=</code></li> <li>prometheus:</li> <li>enabled: true</li> <li>namespace: <code>askproai</code></li> <li>query_monitoring:</li> <li>enabled: false</li> <li>slow_query_threshold: 50</li> <li>log_duplicate_queries: true</li> <li>performance_baseline:</li> <li>save_results: true</li> <li>storage_path: <code>/var/www/api-gateway/storage/performance-baselines</code></li> <li>cache_warming:</li> <li>enabled: true</li> <li>schedule: <code>0 * * * *</code></li> <li>alerts:</li> <li>slow_response_threshold: 1000</li> <li>high_error_rate_threshold: 5</li> <li>queue_size_threshold: 1000</li> <li>failed_jobs_threshold: 100</li> </ul>"},{"location":"configuration/reference/#performance","title":"performance","text":"<ul> <li>cache_warming:</li> <li>enabled: true</li> <li>ttl:<ul> <li>phone_mappings: 3600</li> <li>event_types: 1800</li> <li>company_settings: 7200</li> <li>branch_services: 3600</li> <li>staff_availability: 900</li> </ul> </li> <li>query_optimization:</li> <li>enabled: true</li> <li>slow_query_threshold: 100</li> <li>monitor_queries: false</li> <li>auto_create_indexes: false</li> <li>max_monitored_queries: 1000</li> <li>connection_pool:</li> <li>enabled: true</li> <li>min_connections: <code>2</code></li> <li>max_connections: <code>10</code></li> <li>idle_timeout: 300</li> <li>health_check_interval: 60</li> <li>connection_timeout: 5</li> <li>retry_attempts: 3</li> <li>retry_delay: 100</li> <li>compression:</li> <li>enabled: true</li> <li>min_size: 1024</li> <li>level: 6</li> <li>types:<ul> <li>0: <code>text/html</code></li> <li>1: <code>text/css</code></li> <li>2: <code>text/xml</code></li> <li>3: <code>text/plain</code></li> <li>4: <code>application/json</code></li> <li>5: <code>application/javascript</code></li> <li>6: <code>application/xml</code></li> <li>7: <code>application/rss+xml</code></li> <li>8: <code>application/atom+xml</code></li> <li>9: <code>application/font-woff</code></li> <li>10: <code>image/svg+xml</code></li> </ul> </li> <li>asset_caching:</li> <li>static_assets_ttl: 31536000</li> <li>api_cache_ttl: 60</li> <li>html_cache_enabled: false</li> <li>required_indexes:</li> <li>phone_numbers:<ul> <li>idx_phone_branch_lookup:</li> <li>0: <code>phone_number</code></li> <li>1: <code>branch_id</code></li> <li>2: <code>is_active</code></li> </ul> </li> <li>branches:<ul> <li>idx_company_active_branches:</li> <li>0: <code>company_id</code></li> <li>1: <code>is_active</code></li> <li>2: <code>id</code></li> <li>idx_calcom_event_lookup:</li> <li>0: <code>calcom_event_type_id</code></li> <li>1: <code>is_active</code></li> </ul> </li> <li>appointments:<ul> <li>idx_branch_appointments_time:</li> <li>0: <code>branch_id</code></li> <li>1: <code>start_time</code></li> <li>2: <code>status</code></li> <li>idx_customer_appointments:</li> <li>0: <code>customer_id</code></li> <li>1: <code>start_time</code></li> <li>2: <code>status</code></li> <li>idx_staff_schedule:</li> <li>0: <code>staff_id</code></li> <li>1: <code>start_time</code></li> <li>2: <code>end_time</code></li> </ul> </li> <li>calls:<ul> <li>idx_company_recent_calls:</li> <li>0: <code>company_id</code></li> <li>1: <code>created_at</code></li> <li>2: <code>status</code></li> <li>idx_phone_call_history:</li> <li>0: <code>from_number</code></li> <li>1: <code>created_at</code></li> <li>idx_retell_call_status:</li> <li>0: <code>retell_call_id</code></li> <li>1: <code>status</code></li> </ul> </li> <li>monitoring:</li> <li>track_memory_usage: true</li> <li>track_query_count: true</li> <li>alert_thresholds:<ul> <li>memory_percent: 80</li> <li>query_count: 100</li> <li>response_time: 1000</li> <li>connection_usage_percent: 80</li> </ul> </li> </ul>"},{"location":"configuration/reference/#permission","title":"permission","text":"<ul> <li>models:</li> <li>permission: <code>Spatie\\Permission\\Models\\Permission</code></li> <li>role: <code>Spatie\\Permission\\Models\\Role</code></li> <li>table_names:</li> <li>roles: <code>roles</code></li> <li>permissions: <code>permissions</code></li> <li>model_has_permissions: <code>model_has_permissions</code></li> <li>model_has_roles: <code>model_has_roles</code></li> <li>role_has_permissions: <code>role_has_permissions</code></li> <li>column_names:</li> <li>role_pivot_key: null</li> <li>permission_pivot_key: null</li> <li>model_morph_key: <code>model_id</code></li> <li>team_foreign_key: <code>team_id</code></li> <li>register_permission_check_method: true</li> <li>register_octane_reset_listener: false</li> <li>events_enabled: false</li> <li>teams: false</li> <li>team_resolver: <code>Spatie\\Permission\\DefaultTeamResolver</code></li> <li>use_passport_client_credentials: false</li> <li>display_permission_in_exception: false</li> <li>display_role_in_exception: false</li> <li>enable_wildcard_permission: false</li> <li>cache:</li> <li>expiration_time: {\"from_string\":true,\"date_string\":\"24 hours\"}</li> <li>key: <code>spatie.permission.cache</code></li> <li>store: <code>default</code></li> </ul>"},{"location":"configuration/reference/#queue","title":"queue","text":"<ul> <li>default: <code>redis</code></li> <li>connections:</li> <li>sync:<ul> <li>driver: <code>sync</code></li> </ul> </li> <li>database:<ul> <li>driver: <code>database</code></li> <li>connection: null</li> <li>table: <code>jobs</code></li> <li>queue: <code>default</code></li> <li>retry_after: 90</li> <li>after_commit: false</li> </ul> </li> <li>beanstalkd:<ul> <li>driver: <code>beanstalkd</code></li> <li>host: <code>localhost</code></li> <li>queue: <code>default</code></li> <li>retry_after: 90</li> <li>block_for: 0</li> <li>after_commit: false</li> </ul> </li> <li>sqs:<ul> <li>driver: <code>sqs</code></li> <li>key: ``</li> <li>secret: ``</li> <li>prefix: <code>https://sqs.us-east-1.amazonaws.com/your-account-id</code></li> <li>queue: <code>default</code></li> <li>suffix: null</li> <li>region: <code>us-east-1</code></li> <li>after_commit: false</li> </ul> </li> <li>redis:<ul> <li>driver: <code>redis</code></li> <li>connection: <code>default</code></li> <li>queue: <code>default</code></li> <li>retry_after: 90</li> <li>block_for: null</li> <li>after_commit: false</li> </ul> </li> <li>batching:</li> <li>database: <code>mysql</code></li> <li>table: <code>job_batches</code></li> <li>failed:</li> <li>driver: <code>database-uuids</code></li> <li>database: <code>mysql</code></li> <li>table: <code>failed_jobs</code></li> </ul>"},{"location":"configuration/reference/#retellai","title":"retellai","text":"<ul> <li>api_key: null</li> <li>base_url: <code>https://api.retellai.com</code></li> </ul>"},{"location":"configuration/reference/#screenshot","title":"screenshot","text":"<ul> <li>api_token: null</li> <li>service_email: <code>screenshot@askproai.de</code></li> <li>chromium_path: <code>/usr/bin/chromium</code></li> <li>default_options:</li> <li>width: 1920</li> <li>height: 1080</li> <li>fullPage: true</li> <li>waitUntilNetworkIdle: true</li> <li>deviceScaleFactor: 2</li> <li>storage_path: <code>/var/www/api-gateway/storage/app/screenshots</code></li> <li>cleanup_days: 7</li> </ul>"},{"location":"configuration/reference/#sentry","title":"sentry","text":"<ul> <li>dsn: null</li> <li>release: null</li> <li>environment: null</li> <li>sample_rate: 1</li> <li>traces_sample_rate: null</li> <li>profiles_sample_rate: null</li> <li>enable_logs: false</li> <li>send_default_pii: false</li> <li>ignore_transactions:</li> <li>0: <code>/up</code></li> <li>breadcrumbs:</li> <li>logs: true</li> <li>cache: true</li> <li>livewire: true</li> <li>sql_queries: true</li> <li>sql_bindings: false</li> <li>queue_info: true</li> <li>command_info: true</li> <li>http_client_requests: true</li> <li>notifications: true</li> <li>tracing:</li> <li>queue_job_transactions: true</li> <li>queue_jobs: true</li> <li>sql_queries: true</li> <li>sql_bindings: false</li> <li>sql_origin: true</li> <li>sql_origin_threshold_ms: 100</li> <li>views: true</li> <li>livewire: true</li> <li>http_client_requests: true</li> <li>cache: true</li> <li>redis_commands: false</li> <li>redis_origin: true</li> <li>notifications: true</li> <li>missing_routes: false</li> <li>continue_after_response: true</li> <li>default_integrations: true</li> </ul>"},{"location":"configuration/reference/#services","title":"services","text":"<ul> <li>postmark:</li> <li>token: null</li> <li>ses:</li> <li>key: ``</li> <li>secret: ``</li> <li>region: <code>us-east-1</code></li> <li>resend:</li> <li>key: null</li> <li>slack:</li> <li>notifications:<ul> <li>bot_user_oauth_token: null</li> <li>channel: null</li> </ul> </li> <li>mailgun:</li> <li>domain: null</li> <li>secret: null</li> <li>endpoint: <code>api.mailgun.net</code></li> <li>scheme: <code>https</code></li> <li>calcom:</li> <li>api_key: <code>cal_live_bd7aedbdf12085c5312c79ba73585920</code></li> <li>team_slug: <code>askproai</code></li> <li>base_url: <code>https://api.cal.com/v2</code></li> <li>user_id: <code>1346408</code></li> <li>webhook_secret: <code>6846aed4d55f6f3df70c40781e02d964aae34147f72763e1ccedd726e66dfff7</code></li> <li>api_version: <code>v2</code></li> <li>v2_base_url: <code>https://api.cal.com/v2</code></li> <li>use_v2_api: true</li> <li>v2_enabled_methods:<ul> <li>0: <code>getEventTypes</code></li> <li>1: <code>getAvailableSlots</code></li> <li>2: <code>bookAppointment</code></li> <li>3: <code>cancelBooking</code></li> <li>4: <code>getBooking</code></li> </ul> </li> <li>v2_mandatory_methods:<ul> <li>0: <code>getEventTypes</code></li> <li>1: <code>getAvailableSlots</code></li> <li>2: <code>bookAppointment</code></li> <li>3: <code>cancelBooking</code></li> <li>4: <code>getBooking</code></li> </ul> </li> <li>cache_ttl: <code>300</code></li> <li>circuit_breaker_enabled: true</li> <li>circuit_breaker_threshold: <code>5</code></li> <li>circuit_breaker_timeout: <code>60</code></li> <li>default_event_type_id: null</li> <li>retell:</li> <li>api_key: <code>key_6ff998ba48e842092e04a5455d19</code></li> <li>webhook_secret: <code>key_6ff998ba48e842092e04a5455d19</code></li> <li>secret: <code>key_6ff998ba48e842092e04a5455d19</code></li> <li>token: <code>key_6ff998ba48e842092e04a5455d19</code></li> <li>agent_id: ``</li> <li>base_url: <code>https://api.retellai.com</code></li> <li>base: <code>https://api.retellai.com</code></li> <li>verify_ip: false</li> <li>stripe:</li> <li>secret: <code>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</code></li> <li>publishable: <code>pk_live_51QjozIEypZR52surHzCXaOHdCy0Y6vddflKOD4qZy0xH4sEb9vcfOSHJnQfaAT6ixRFiJkA7Xp6V1VidJfR1NrFw00FQ0i4xWa</code></li> <li>webhook_secret: ``</li> <li>webhook:</li> <li>async:<ul> <li>retell: true</li> <li>calcom: true</li> <li>stripe: true</li> </ul> </li> <li>retry:<ul> <li>max_attempts: 3</li> <li>backoff: <code>10,30,90</code></li> </ul> </li> <li>deduplication:<ul> <li>ttl: 300</li> <li>processing_ttl: 60</li> </ul> </li> <li>monitoring:<ul> <li>alert_threshold: 100</li> <li>log_slow_webhooks: true</li> </ul> </li> </ul>"},{"location":"configuration/reference/#session","title":"session","text":"<ul> <li>driver: <code>database</code></li> <li>lifetime: <code>120</code></li> <li>expire_on_close: false</li> <li>encrypt: true</li> <li>files: <code>/var/www/api-gateway/storage/framework/sessions</code></li> <li>connection: null</li> <li>table: <code>sessions</code></li> <li>store: null</li> <li>lottery:</li> <li>0: 0</li> <li>1: 100</li> <li>cookie: <code>askproai_session</code></li> <li>path: <code>/</code></li> <li>domain: ``</li> <li>secure: false</li> <li>http_only: true</li> <li>same_site: <code>lax</code></li> <li>partitioned: false</li> </ul>"},{"location":"configuration/reference/#webhook","title":"webhook","text":"<ul> <li>ip_whitelist:</li> <li>retell:</li> <li>known_ips:<ul> <li>0: <code>35.160.120.126</code></li> <li>1: <code>44.233.151.27</code></li> <li>2: <code>34.211.200.85</code></li> </ul> </li> <li>verify_signature: true</li> <li>webhook_secret: <code>key_6ff998ba48e842092e04a5455d19</code></li> <li>debug_mode: false</li> <li>async_processing: true</li> <li>queue_name: <code>webhooks</code></li> <li>calcom:</li> <li>known_ips:</li> <li>verify_signature: true</li> <li>webhook_secret: <code>6846aed4d55f6f3df70c40781e02d964aae34147f72763e1ccedd726e66dfff7</code></li> <li>stripe:</li> <li>known_ips:</li> <li>verify_signature: true</li> <li>webhook_secret: ``</li> <li>webhook_tolerance: 300</li> <li>processing:</li> <li>idempotency_enabled: true</li> <li>idempotency_ttl: 86400</li> <li>max_retries: 3</li> <li>retry_delay: 60</li> <li>log_all_webhooks: true</li> <li>log_retention_days: 30</li> <li>bypass_all_security: false</li> </ul>"},{"location":"operations/security-audit/","title":"Security Audit Report","text":"<p>Generated on: 2025-06-22 23:28:53</p> <p>Critical Issues Found</p> <p>This audit found several security concerns that need immediate attention.</p>"},{"location":"operations/security-audit/#debug-routes-in-production","title":"Debug Routes in Production","text":"<p>Found 45 debug routes that should not be in production:</p> <ul> <li><code>GET|HEAD</code> admin/calcom-api-test</li> <li><code>GET|HEAD</code> admin/calcom-complete-test</li> <li><code>GET|HEAD</code> admin/calcom-live-test</li> <li><code>GET|HEAD</code> admin/event-type-setup-wizard-debug</li> <li><code>GET|HEAD</code> admin/mcp-test</li> <li><code>GET|HEAD</code> admin/system-health-monitor-debug</li> <li><code>GET|HEAD</code> admin/table-debug</li> <li><code>GET|HEAD</code> admin/test-livewire-dropdown</li> <li><code>GET|HEAD</code> admin/test-minimal-page</li> <li><code>GET|POST|HEAD</code> api/test/webhook</li> <li><code>POST</code> api/test/webhook/simulate-retell</li> <li><code>GET|HEAD</code> api/retell/collect-appointment/test</li> <li><code>POST</code> api/retell/webhook-debug</li> <li><code>GET|HEAD</code> api/mcp/webhook/test</li> <li><code>GET|HEAD</code> api/mcp/calcom/test/{companyId}</li> <li><code>GET|HEAD</code> api/mcp/retell/test/{companyId}</li> <li><code>GET|HEAD</code> api/metrics-test</li> <li><code>POST</code> api/retell/debug-webhook</li> <li><code>POST</code> api/test/webhook</li> <li><code>POST</code> api/test/mcp-webhook</li> <li><code>POST</code> api/calcom/book-test</li> <li><code>GET|HEAD</code> api/test/calcom-v2/event-types</li> <li><code>GET|HEAD</code> api/test/calcom-v2/slots</li> <li><code>POST</code> api/test/calcom-v2/book</li> <li><code>GET|HEAD</code> api/validation/last-test/{entityId}</li> <li><code>POST</code> api/validation/run-test/{entityId}</li> <li><code>GET|HEAD</code> api/mobile/test</li> <li><code>GET|HEAD</code> api/mcp/sentry/issues/{issueId}/latest-event</li> <li><code>GET|HEAD</code> test</li> <li><code>GET|HEAD</code> auth-debug</li> <li><code>GET|HEAD</code> test-dashboard</li> <li><code>GET|HEAD</code> csrf-test</li> <li><code>POST</code> test-csrf</li> <li><code>POST</code> test-post</li> <li><code>GET|HEAD</code> test-debug</li> <li><code>GET|HEAD</code> livewire-debug</li> <li><code>GET|HEAD</code> test-livewire-check</li> <li><code>GET|HEAD</code> debug/session</li> <li><code>POST</code> debug/login</li> <li><code>GET|HEAD</code> debug/check-auth</li> <li><code>POST</code> debug/clear-logs</li> <li><code>GET|HEAD</code> debug-login</li> <li><code>POST</code> debug-login/attempt</li> <li><code>GET|HEAD</code> test-error-logging</li> <li><code>GET|HEAD</code> test-500-error</li> </ul>"},{"location":"operations/security-audit/#potential-security-issues","title":"Potential Security Issues","text":""},{"location":"operations/security-audit/#configuration-security","title":"Configuration Security","text":"<ul> <li>Check that all API keys are loaded from environment variables</li> <li>Ensure no credentials are hardcoded in config files</li> <li>Verify encryption keys are properly set</li> </ul>"}]}