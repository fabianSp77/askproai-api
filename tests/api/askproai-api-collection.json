{
  "info": {
    "name": "AskProAI API Test Suite",
    "description": "Comprehensive API test collection for AskProAI platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "askproai-api-tests-2025",
    "version": "2.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('Executing request:', pm.info.requestName);",
          "",
          "// Set common headers",
          "pm.request.headers.add({",
          "    key: 'Accept',",
          "    value: 'application/json'",
          "});",
          "",
          "pm.request.headers.add({",
          "    key: 'Content-Type',",
          "    value: 'application/json'",
          "});"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is less than 1000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(1000);",
          "});",
          "",
          "// Log response for debugging",
          "if (pm.response.code >= 400) {",
          "    console.log('Error Response:', pm.response.text());",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Portal Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has token', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.environment.set('auth_token', jsonData.token);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('email');",
                  "    pm.environment.set('user_id', jsonData.user.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/portal/api/login",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "login"]
            }
          }
        },
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains user data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "    pm.expect(jsonData).to.have.property('company_id');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/user",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "user"]
            }
          }
        },
        {
          "name": "Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Clear auth token",
                  "pm.environment.unset('auth_token');"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/logout",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Dashboard",
      "item": [
        {
          "name": "Get Dashboard Stats",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has required stats', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('appointments_today');",
                  "    pm.expect(jsonData).to.have.property('appointments_week');",
                  "    pm.expect(jsonData).to.have.property('appointments_month');",
                  "    pm.expect(jsonData).to.have.property('total_customers');",
                  "    pm.expect(jsonData).to.have.property('calls_today');",
                  "});",
                  "",
                  "pm.test('Stats are valid numbers', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.appointments_today).to.be.a('number');",
                  "    pm.expect(jsonData.appointments_today).to.be.at.least(0);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/dashboard/stats",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "dashboard", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "List Appointments",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has pagination structure', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData).to.have.property('meta');",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Appointment objects have required fields', function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data.length > 0) {",
                  "        var appointment = jsonData.data[0];",
                  "        pm.expect(appointment).to.have.property('id');",
                  "        pm.expect(appointment).to.have.property('customer_name');",
                  "        pm.expect(appointment).to.have.property('appointment_datetime');",
                  "        pm.expect(appointment).to.have.property('status');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/appointments?page=1&per_page=10",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "appointments"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Create Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains created appointment', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.customer_name).to.equal('Test Customer');",
                  "    pm.environment.set('created_appointment_id', jsonData.id);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"customer_name\": \"Test Customer\",\n    \"customer_email\": \"test@customer.com\",\n    \"customer_phone\": \"+491234567890\",\n    \"service_id\": 1,\n    \"staff_id\": 1,\n    \"appointment_datetime\": \"2025-01-20 14:00:00\",\n    \"duration\": 60,\n    \"notes\": \"Test appointment created via API\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/portal/api/appointments",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "appointments"]
            }
          }
        },
        {
          "name": "Get Appointment Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains appointment details', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('customer_name');",
                  "    pm.expect(jsonData).to.have.property('appointment_datetime');",
                  "    pm.expect(jsonData).to.have.property('service_name');",
                  "    pm.expect(jsonData).to.have.property('staff_name');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/appointments/{{created_appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "appointments", "{{created_appointment_id}}"]
            }
          }
        },
        {
          "name": "Update Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Appointment was updated', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.notes).to.equal('Updated notes');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"notes\": \"Updated notes\",\n    \"status\": \"confirmed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/portal/api/appointments/{{created_appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "appointments", "{{created_appointment_id}}"]
            }
          }
        },
        {
          "name": "Delete Appointment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 204', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                  "});",
                  "",
                  "// Clean up environment variable",
                  "pm.environment.unset('created_appointment_id');"
                ]
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/appointments/{{created_appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "appointments", "{{created_appointment_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Calls",
      "item": [
        {
          "name": "List Calls",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has call data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});",
                  "",
                  "pm.test('Call objects have required fields', function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data.length > 0) {",
                  "        var call = jsonData.data[0];",
                  "        pm.expect(call).to.have.property('id');",
                  "        pm.expect(call).to.have.property('call_id');",
                  "        pm.expect(call).to.have.property('from_number');",
                  "        pm.expect(call).to.have.property('duration');",
                  "        pm.expect(call).to.have.property('created_at');",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/calls",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "calls"]
            }
          }
        }
      ]
    },
    {
      "name": "Customers",
      "item": [
        {
          "name": "List Customers",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has customer data', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/customers",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "customers"]
            }
          }
        },
        {
          "name": "Search Customers",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Search returns results', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('data');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/portal/api/customers?search=test",
              "host": ["{{base_url}}"],
              "path": ["portal", "api", "customers"],
              "query": [
                {
                  "key": "search",
                  "value": "test"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Webhooks",
      "item": [
        {
          "name": "Retell Webhook Test",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate test webhook signature",
                  "// In real scenarios, this would be done by Retell",
                  "var timestamp = Math.floor(Date.now() / 1000);",
                  "var payload = pm.request.body.raw;",
                  "var secret = pm.environment.get('retell_webhook_secret') || 'test-secret';",
                  "",
                  "// Note: This is a simplified version",
                  "pm.request.headers.add({",
                  "    key: 'x-retell-signature',",
                  "    value: 'test-signature'",
                  "});"
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Webhook accepted', function () {",
                  "    pm.expect(pm.response.code).to.be.below(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"event_type\": \"call_ended\",\n    \"call_id\": \"test_call_123\",\n    \"from_number\": \"+491234567890\",\n    \"to_number\": \"+499876543210\",\n    \"duration\": 120,\n    \"transcript\": \"Test transcript\",\n    \"created_at\": \"2025-01-14T10:00:00Z\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/retell/webhook",
              "host": ["{{base_url}}"],
              "path": ["api", "retell", "webhook"]
            }
          }
        }
      ]
    },
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "API Health",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API is healthy', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response time is acceptable', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/health",
              "host": ["{{base_url}}"],
              "path": ["api", "health"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "created_appointment_id",
      "value": "",
      "type": "string"
    }
  ]
}