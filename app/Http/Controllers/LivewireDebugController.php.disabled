<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;

class LivewireDebugController extends Controller
{
    public function handleUpdate(Request $request)
    {
        try {
            Log::info('Livewire Update Request Received', [
                'method' => $request->method(),
                'headers' => $request->headers->all(),
                'payload' => $request->all(),
                'session_id' => session()->getId(),
                'user' => auth()->check() ? auth()->user()->email : 'guest',
            ]);

            // Forward to Livewire using the correct method
            $livewireController = app(\Livewire\Mechanisms\HandleRequests\HandleRequests::class);
            $response = $livewireController->handleUpdate();

            Log::info('Livewire Response', [
                'status' => method_exists($response, 'getStatusCode') ? $response->getStatusCode() : 'unknown',
            ]);

            return $response;
        } catch (\Exception $e) {
            Log::error('Livewire Update Failed', [
                'error' => $e->getMessage(),
                'file' => $e->getFile(),
                'line' => $e->getLine(),
                'trace' => $e->getTraceAsString(),
            ]);
            
            // Return detailed error in debug mode
            if (config('app.debug')) {
                return response()->json([
                    'error' => $e->getMessage(),
                    'file' => $e->getFile(),
                    'line' => $e->getLine(),
                    'trace' => explode("\n", $e->getTraceAsString()),
                ], 500);
            }
            
            throw $e;
        }
    }
}