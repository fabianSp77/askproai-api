<?php
namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class VerifyCalcomSignature
{
    /**
     * Prüft die HMAC-SHA-256-Signatur von Cal.com-Webhooks.
     *
     * Header:  X-Cal-Signature-256  →  sha256=<hexdigest>
     * Hash:    HMAC-SHA-256 über den **rohen** Request-Body
     *          Key = CALCOM_WEBHOOK_SECRET aus .env
     */
    public function handle(Request $request, Closure $next): Response
    {
        $secret = env('CALCOM_WEBHOOK_SECRET');

        /* 1) Konfigurations-Check ------------------------------------------------ */
        if (empty($secret)) {
            return response('Cal.com secret missing', 500);
        }

        /* 2) Erwartete Signatur erzeugen ---------------------------------------- */
        $expected = 'sha256=' . hash_hmac(
            'sha256',
            $request->getContent(),   // unveränderter JSON-Body
            $secret
        );

        /* 3) Tatsächliche Signatur lesen (Header-Namen sind NICHT case-sensitiv) */
        $received = $request->header('X-Cal-Signature-256');

        /* 4) Vergleich (timing-safe) ------------------------------------------- */
        if (! $received || ! hash_equals($expected, $received)) {
            return response('Invalid Cal.com signature', 401);
        }

        /* 5) Alles okay → weiter ------------------------------------------------ */
        return $next($request);
    }
}
#  ←  den obigen PHP-Code hier komplett einfügen
