<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;
use Symfony\Component\HttpFoundation\Response;

class VerifyCalcomSignature
{
    public function handle(Request $request, Closure $next): Response
    {
        /* 1) Secret */
        $secret = env('CALCOM_WEBHOOK_SECRET');
        if ($secret === '' || $secret === null) {
            Log::warning('[Cal.com] Secret missing');
            return response('Cal.com secret missing', 500);
        }

        /* 2) Payload & Digest */
        $raw      = $request->getContent();
        $trimmed  = rtrim($raw, "\r\n");
        $digest   = hash_hmac('sha256', $raw,     $secret);
        $digest_n = hash_hmac('sha256', $trimmed, $secret);

        /* 3) gÃ¼ltige Varianten */
        $valid = [
            $digest,
            $digest_n,
            'sha256='.$digest,
            'sha256='.$digest_n,
        ];

        /* 4) Header-Wert (alle Schreibweisen) */
        $provided = $request->header('X-Cal-Signature-256')
            ?? $request->header('Cal-Signature-256')
            ?? $request->header('X-Cal-Signature')
            ?? $request->header('Cal-Signature')
            ?? '';

        /* 5) Vergleich */
        if (!in_array($provided, $valid, true)) {
            Log::debug('[Cal.com] Signature failed', compact('provided'));
            return response('Invalid Cal.com signature', 401);
        }

        return $next($request);
    }
}
