<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Str;

class FixLivewireAssets
{
    public function handle(Request $request, Closure $next)
    {
        $response = $next($request);
        
        // Only process HTML responses
        if ($response->headers->get('Content-Type') && 
            Str::contains($response->headers->get('Content-Type'), 'text/html')) {
            
            $content = $response->getContent();
            
            // Fix broken Livewire script tag - more aggressive pattern
            $content = preg_replace(
                '/<script\s+src="https:\/\/api\.askproai\.de"(\s+[^>]*>)/i',
                '<script src="https://api.askproai.de/vendor/livewire/livewire.js"$1',
                $content
            );
            
            // Also fix if it's just the domain without quotes issues
            $content = str_replace(
                '<script src="https://api.askproai.de"   data-csrf=',
                '<script src="https://api.askproai.de/vendor/livewire/livewire.js" data-csrf=',
                $content
            );
            
            // Fix Livewire update URI - handle different variations
            $patterns = [
                'data-update-uri="/livewire/update"' => 'data-update-uri="https://api.askproai.de/livewire/update"',
                'data-update-uri="/https://api.askproai.de/livewire/update"' => 'data-update-uri="https://api.askproai.de/livewire/update"',
            ];
            
            foreach ($patterns as $search => $replace) {
                $content = str_replace($search, $replace, $content);
            }
            
            // Also fix any relative URIs in Livewire config
            $content = preg_replace(
                '/window\.livewireScriptConfig\s*=\s*\{([^}]*)"uri"\s*:\s*"\/livewire\/update"/',
                'window.livewireScriptConfig = {$1"uri": "https://api.askproai.de/livewire/update"',
                $content
            );
            
            $response->setContent($content);
        }
        
        return $response;
    }
}