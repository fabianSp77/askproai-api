<?php

namespace App\Filament\Admin\Resources;

use App\Filament\Admin\Resources\IntegrationResource\Pages;
use App\Models\Integration;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;

class IntegrationResource extends Resource
        /** Navigation immer sichtbar */
        public static function canViewAny(): bool
        {
        return true;
    }

{
    /* ---------- Basis ---------- */
    protected static ?string $model           = Integration::class;
    protected static ?string $navigationIcon  = 'heroicon-o-key';
    protected static ?string $navigationGroup = 'Stammdaten';
    protected static ?string $navigationLabel = 'Integrationen';
    public    static bool   $canCreateAnother = false;

    /* ---------- Formular ---------- */
    public static function form(Form $form): Form
    {
        return $form->schema([
            Forms\Components\Select::make('customer_id')
                ->relationship('customer', 'name')
                ->searchable()
                ->required()
                ->label('Kunde'),

            Forms\Components\Select::make('system')
                ->options([
                    'calcom' => 'Cal.com',
                    'retell' => 'Retell.ai',
                    'twilio' => 'Twilio',
                    'google' => 'Google Calendar',
                ])
                ->required()
                ->label('System'),

            Forms\Components\KeyValue::make('credentials')
                ->label('Zugangsdaten (Key â†’ Wert)')
                ->required(),

            Forms\Components\Toggle::make('active')
                ->label('Aktiv')
                ->default(true),
        ]);
    }

    /* ---------- Tabelle ---------- */
    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('customer.name')->label('Kunde'),
                Tables\Columns\BadgeColumn::make('system')->label('System'),
                Tables\Columns\IconColumn::make('active')->boolean()->label('Aktiv'),
            ])
            ->actions([ Tables\Actions\EditAction::make() ]);
    }

    /* ---------- Query-Filter ---------- */
    public static function getEloquentQuery(): Builder
    {
        return parent::getEloquentQuery()->whereNotNull('customer_id');
    }

    /* ---------- Seiten-Routing ---------- */
    public static function getPages(): array
    {
        return [
            'index'  => Pages\ListIntegrations::route('/'),
            'create' => Pages\CreateIntegration::route('/create'),
            'edit'   => Pages\EditIntegration::route('/{record}/edit'),
        ];
    }
}
