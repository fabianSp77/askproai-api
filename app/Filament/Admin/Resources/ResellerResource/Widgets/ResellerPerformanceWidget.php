<?php

namespace App\Filament\Admin\Resources\ResellerResource\Widgets;

use App\Filament\Admin\Resources\ResellerResource\Pages\ResellerDashboard;
use App\Models\Company;
use Filament\Widgets\StatsOverviewWidget as BaseWidget;
use Filament\Widgets\StatsOverviewWidget\Stat;

class ResellerPerformanceWidget extends BaseWidget
{
    public ?Company $record = null;

    protected function getStats(): array
    {
        $reseller = $this->record;
        
        if (!$reseller) {
            return [];
        }

        $clientCount = $reseller->childCompanies()->count();
        $activeClients = $reseller->childCompanies()->where('is_active', true)->count();
        
        // Calculate revenue from actual transactions
        $childCompanyIds = $reseller->childCompanies()->pluck('id')->toArray();
        $monthlyRevenue = !empty($childCompanyIds) 
            ? \App\Models\PrepaidTransaction::whereIn('company_id', $childCompanyIds)
                ->where('type', 'deduction')
                ->sum('amount') ?? 0
            : 0;
            
        $commissionEarned = ($monthlyRevenue * ($reseller->commission_rate ?? 0)) / 100;

        return [
            Stat::make('Total Clients', $clientCount)
                ->description($activeClients . ' active clients')
                ->descriptionIcon($activeClients > 0 ? 'heroicon-m-users' : 'heroicon-m-user-minus')
                ->color($activeClients > 0 ? 'success' : 'warning')
                ->chart([1, 3, 5, 10, 20, 40, $clientCount]),

            Stat::make('YTD Revenue', '€' . number_format($monthlyRevenue, 2))
                ->description('Generated by clients')
                ->descriptionIcon('heroicon-m-banknotes')
                ->color('primary'),

            Stat::make('Commission Earned', '€' . number_format($commissionEarned, 2))
                ->description($reseller->commission_rate . '% commission rate')
                ->descriptionIcon('heroicon-m-currency-euro')
                ->color('success'),

            Stat::make('Avg. Revenue per Client', 
                $clientCount > 0 ? '€' . number_format($monthlyRevenue / $clientCount, 2) : '€0'
            )
                ->description('Performance indicator')
                ->descriptionIcon('heroicon-m-chart-bar')
                ->color('warning'),
        ];
    }

    protected function getColumns(): int
    {
        return 4;
    }

}